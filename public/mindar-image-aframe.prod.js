(function(){"use strict";function PC(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const o in s)if(o!=="default"&&!(o in n)){const i=Object.getOwnPropertyDescriptor(s,o);i&&Object.defineProperty(n,o,i.get?i:{enumerable:!0,get:()=>s[o]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZC=1e-7,KC=1e-4;class qm{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class td{refCount(t){return He("refCount")}incRef(t){return He("incRef")}timerAvailable(){return!0}time(t){return He("time")}read(t){return He("read")}readSync(t){return He("readSync")}readToGPU(t,e){return He("readToGPU")}numDataIds(){return He("numDataIds")}disposeData(t,e){return He("disposeData")}write(t,e,s){return He("write")}move(t,e,s,o,i){return He("move")}createTensorFromTexture(t,e,s){return He("createTensorFromTexture")}memory(){return He("memory")}floatPrecision(){return He("floatPrecision")}epsilon(){return this.floatPrecision()===32?ZC:KC}dispose(){return He("dispose")}}function He(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BC(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,ni(n,t,e)}function lo(n,t,e){return Math.max(n,Math.min(t,e))}function ed(n){return n%2===0?n:n+1}function ni(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function HC(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function S(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function nd(n,t,e=""){S($t(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function sd(n){S(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function si(n,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(n)||Hn(n)&&!e)for(let s=0;s<n.length;++s)si(n[s],t,e);else t.push(n);return t}function Z(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function $t(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function oi(n){return n%1===0}function od(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function ii(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function tg(n,t=o=>0,e,s){return new Promise((o,i)=>{let r=0;const a=()=>{if(n()){o();return}r++;const l=t(r);if(e!=null&&r>=e){i();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function eg(n,t){let e=1,s=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)e*=n[i];else if(n[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const o=n.slice();return o[s]=t/e,o}function yt(n,t){const e=t.length;return n=n==null?t.map((s,o)=>o):[].concat(n),S(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),S(n.every(s=>oi(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function $s(n,t){const e=[],s=[],o=t!=null&&Array.isArray(t)&&t.length===0,i=t==null||o?null:yt(t,n).sort();let r=0;for(let a=0;a<n.length;++a){if(i!=null){if(i[r]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(i[r]==null||i[r]>a)&&n[a]===1&&(e.push(n[a]),s.push(a)),i[r]<=a&&r++}n[a]!==1&&(e.push(n[a]),s.push(a))}return{newShape:e,keptDims:s}}function Ie(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${n}`);return e}function ie(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function UC(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function YC(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function ng(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function Hn(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function id(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function QC(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function nr(n){return typeof n=="string"||n instanceof String}function JC(n){return typeof n=="boolean"}function rd(n){return typeof n=="number"}function sr(n){return Array.isArray(n)?sr(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":rd(n)?"float32":nr(n)?"string":JC(n)?"bool":"float32"}function ad(n){return!!(n&&n.constructor&&n.call&&n.apply)}function ld(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function ct(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function sg(n,t,e,s=!1){const o=new Array;if(t.length===1){const i=t[0]*(s?2:1);for(let r=0;r<i;r++)o[r]=e[n+r]}else{const i=t[0],r=t.slice(1),a=r.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<i;l++)o[l]=sg(n+l*a,r,e,s)}return o}function Dn(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((o,i)=>o*i)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return sg(0,n,t,e)}function cd(n,t){const e=Re(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function Re(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function og(n,t){const e=n.reduce((s,o)=>s*o,1);if(t==null||t==="float32")return Dn(n,new Float32Array(e));if(t==="int32")return Dn(n,new Int32Array(e));if(t==="bool")return Dn(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function ps(n){n.forEach(t=>{S(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Un(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let o=0;o<n.length-1;++o)s+=e[o]*n[o];return s}function ri(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let o=0;o<s.length-1;++o)s[o]=Math.floor(n/e[o]),n-=s[o]*e[o];return s[s.length-1]=n,s}function ig(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rg="tfjsflags";class jC{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=qC,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(A().getBool("IS_TEST")||A().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const o=this.urlFlags[t];A().getBool("IS_TEST")||A().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(ig(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);rg in t&&t[rg].split(",").forEach(s=>{const[o,i]=s.split(":");this.urlFlags[o]=ev(o,i)})}}function qC(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(tv(t,s[0],s[1]),s.join("="))),t}function tv(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function ev(n,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${n}.`)}function A(){return ag}let ag=null;function nv(n){ag=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ud;function lg(){if(ud==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");ud=n}return ud}function sv(){const n=lg();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function dd(n,t){const e=sv();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const ml="Abs",or="Acos",ir="Acosh",ai="Add",hd="AddN",pd="All",fd="Any",gl="ArgMax",bl="ArgMin",rr="Asin",ar="Asinh",lr="Atan",cr="Atanh",ur="Atan2",xl="AvgPool",md="AvgPoolGrad",yl="AvgPool3D",gd="AvgPool3DGrad",wl="BatchMatMul",Il="BatchToSpaceND",bd="Bincount",ov="BroadcastTo",cg="BroadcastArgs",dr="Cast",hr="Ceil",pr="ClipByValue",xd="Complex",Cl="ComplexAbs",vl="Concat",kl="Conv2D",yd="Conv2DBackpropFilter",Sl="Conv2DBackpropInput",Tl="Conv3D",wd="Conv3DBackpropFilterV2",Id="Conv3DBackpropInputV2",fr="Cos",mr="Cosh",Cd="Cumprod",Nl="Cumsum",vd="CropAndResize",kd="DenseBincount",Sd="DepthToSpace",Rl="DepthwiseConv2dNative",Td="DepthwiseConv2dNativeBackpropFilter",Nd="DepthwiseConv2dNativeBackpropInput",ug="Diag",$l="Dilation2D",Rd="Dilation2DBackpropInput",$d="Dilation2DBackpropFilter",gr="RealDiv",dg="Einsum",br="Elu",Gd="EluGrad",xr="Erf",Gl="Equal",yr="Exp",El="ExpandDims",wr="Expm1",Ed="FFT",Ld="Fill",Dd="FlipLeftRight",Ir="Floor",Cr="FloorDiv",Ll="FusedBatchNorm",Dl="GatherV2",hg="GatherNd",Ml="Greater",vr="GreaterEqual",kr="Identity",Md="IFFT",zd="Imag",Sr="IsFinite",Tr="IsInf",Nr="IsNan",zl="LeakyRelu",Fl="Less",Wl="LessEqual",pg="LinSpace",Rr="Log",$r="Log1p",Vl="LogicalAnd",_l="LogicalNot",Al="LogicalOr",iv="LogSoftmax",Xl="LRN",Fd="LRNGrad",Ol="Max",Gr="Maximum",Pl="MaxPool",Wd="MaxPoolGrad",Zl="MaxPool3D",Vd="MaxPool3DGrad",fg="MaxPoolWithArgmax",Kl="Mean",Bl="Min",Er="Minimum",Hl="MirrorPad",Lr="Mod",mg="Multinomial",Dr="Multiply",Ul="Neg",Yl="NotEqual",_d="NonMaxSuppressionV3",Ad="NonMaxSuppressionV4",Xd="NonMaxSuppressionV5",Ql="OnesLike",Jl="OneHot",jl="Pack",ql="PadV2",Mr="Pow",tc="Prelu",ec="Prod",gg="RaggedGather",bg="RaggedRange",xg="RaggedTensorToTensor",Od="Range",Pd="Real",zr="Reciprocal",Fr="Relu",nc="Reshape",sc="ResizeNearestNeighbor",Zd="ResizeNearestNeighborGrad",oc="ResizeBilinear",Kd="ResizeBilinearGrad",Wr="Relu6",ic="Reverse",Vr="Round",_r="Rsqrt",yg="ScatterNd",wg="SearchSorted",rc="Select",Ar="Selu",ac="Slice",Xr="Sin",Or="Sinh",Pr="Sign",Zr="Sigmoid",Kr="Softplus",Br="Sqrt",lc="Sum",cc="SpaceToBatchND",uc="SplitV",dc="Softmax",Ig="SparseFillEmptyRows",Cg="SparseReshape",vg="SparseSegmentMean",kg="SparseSegmentSum",Sg="SparseToDense",Hr="SquaredDifference",Bd="Square",Hd="StridedSlice",Tg="StringNGrams",Ng="StringSplit",Rg="StringToHashBucketFast",Ur="Sub",Yr="Tan",Qr="Tanh",Jr="Tile",Ud="TopK",Yd="Transform",li="Transpose",Qd="Unique",hc="Unpack",pc="UnsortedSegmentSum",fc="ZerosLike",jr="Step",Jd="FromPixels",jd="RotateWithOffset",mc="_FusedMatMul",gc="FusedConv2D",$g="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sn(...n){A().getBool("IS_TEST")||A().getBool("PROD")||console.warn(...n)}function rv(...n){A().getBool("IS_TEST")||A().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bc=dd("kernelRegistry",()=>new Map),qd=dd("gradRegistry",()=>new Map);function th(n,t){const e=Lg(n,t);return bc.get(e)}function Gg(n){return qd.get(n)}function Eg(n){const t=bc.entries(),e=[];for(;;){const{done:s,value:o}=t.next();if(s)break;const[i,r]=o,[a]=i.split("_");a===n&&e.push(r)}return e}function on(n){const{kernelName:t,backendName:e}=n,s=Lg(t,e);bc.has(s)&&sn(`The kernel '${t}' for backend '${e}' is already registered`),bc.set(s,n)}function av(n){const{kernelName:t}=n;qd.has(t)&&A().getBool("DEBUG")&&sn(`Overriding the gradient for '${t}'`),qd.set(t,n)}function Lg(n,t){return`${t}_${n}`}var co=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function lv(n){if(n.__esModule)return n;var t=n.default;if(typeof t=="function"){var e=function s(){if(this instanceof s){var o=[null];o.push.apply(o,arguments);var i=Function.bind.apply(t,o);return new i}return t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var o=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,o.get?o:{enumerable:!0,get:function(){return n[s]}})}),e}var eh=Pt,xn=null;try{xn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Pt(n,t,e){this.low=n|0,this.high=t|0,this.unsigned=!!e}Pt.prototype.__isLong__,Object.defineProperty(Pt.prototype,"__isLong__",{value:!0});function Ue(n){return(n&&n.__isLong__)===!0}Pt.isLong=Ue;var Dg={},Mg={};function uo(n,t){var e,s,o;return t?(n>>>=0,(o=0<=n&&n<256)&&(s=Mg[n],s)?s:(e=Zt(n,(n|0)<0?-1:0,!0),o&&(Mg[n]=e),e)):(n|=0,(o=-128<=n&&n<128)&&(s=Dg[n],s)?s:(e=Zt(n,n<0?-1:0,!1),o&&(Dg[n]=e),e))}Pt.fromInt=uo;function yn(n,t){if(isNaN(n))return t?ho:wn;if(t){if(n<0)return ho;if(n>=Fg)return Xg}else{if(n<=-Wg)return Ye;if(n+1>=Wg)return Ag}return n<0?yn(-n,t).neg():Zt(n%ci|0,n/ci|0,t)}Pt.fromNumber=yn;function Zt(n,t,e){return new Pt(n,t,e)}Pt.fromBits=Zt;var xc=Math.pow;function nh(n,t,e){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return wn;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return nh(n.substring(1),t,e).neg();for(var o=yn(xc(e,8)),i=wn,r=0;r<n.length;r+=8){var a=Math.min(8,n.length-r),l=parseInt(n.substring(r,r+a),e);if(a<8){var c=yn(xc(e,a));i=i.mul(c).add(yn(l))}else i=i.mul(o),i=i.add(yn(l))}return i.unsigned=t,i}Pt.fromString=nh;function Mn(n,t){return typeof n=="number"?yn(n,t):typeof n=="string"?nh(n,t):Zt(n.low,n.high,typeof t=="boolean"?t:n.unsigned)}Pt.fromValue=Mn;var zg=1<<16,cv=1<<24,ci=zg*zg,Fg=ci*ci,Wg=Fg/2,Vg=uo(cv),wn=uo(0);Pt.ZERO=wn;var ho=uo(0,!0);Pt.UZERO=ho;var ui=uo(1);Pt.ONE=ui;var _g=uo(1,!0);Pt.UONE=_g;var sh=uo(-1);Pt.NEG_ONE=sh;var Ag=Zt(-1,2147483647,!1);Pt.MAX_VALUE=Ag;var Xg=Zt(-1,-1,!0);Pt.MAX_UNSIGNED_VALUE=Xg;var Ye=Zt(0,-2147483648,!1);Pt.MIN_VALUE=Ye;var tt=Pt.prototype;tt.toInt=function(){return this.unsigned?this.low>>>0:this.low},tt.toNumber=function(){return this.unsigned?(this.high>>>0)*ci+(this.low>>>0):this.high*ci+(this.low>>>0)},tt.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Ye)){var e=yn(t),s=this.div(e),o=s.mul(e).sub(this);return s.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var i=yn(xc(t,6),this.unsigned),r=this,a="";;){var l=r.div(i),c=r.sub(l.mul(i)).toInt()>>>0,u=c.toString(t);if(r=l,r.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}},tt.getHighBits=function(){return this.high},tt.getHighBitsUnsigned=function(){return this.high>>>0},tt.getLowBits=function(){return this.low},tt.getLowBitsUnsigned=function(){return this.low>>>0},tt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ye)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return this.high!=0?e+33:e+1},tt.isZero=function(){return this.high===0&&this.low===0},tt.eqz=tt.isZero,tt.isNegative=function(){return!this.unsigned&&this.high<0},tt.isPositive=function(){return this.unsigned||this.high>=0},tt.isOdd=function(){return(this.low&1)===1},tt.isEven=function(){return(this.low&1)===0},tt.equals=function(t){return Ue(t)||(t=Mn(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low},tt.eq=tt.equals,tt.notEquals=function(t){return!this.eq(t)},tt.neq=tt.notEquals,tt.ne=tt.notEquals,tt.lessThan=function(t){return this.comp(t)<0},tt.lt=tt.lessThan,tt.lessThanOrEqual=function(t){return this.comp(t)<=0},tt.lte=tt.lessThanOrEqual,tt.le=tt.lessThanOrEqual,tt.greaterThan=function(t){return this.comp(t)>0},tt.gt=tt.greaterThan,tt.greaterThanOrEqual=function(t){return this.comp(t)>=0},tt.gte=tt.greaterThanOrEqual,tt.ge=tt.greaterThanOrEqual,tt.compare=function(t){if(Ue(t)||(t=Mn(t)),this.eq(t))return 0;var e=this.isNegative(),s=t.isNegative();return e&&!s?-1:!e&&s?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},tt.comp=tt.compare,tt.negate=function(){return!this.unsigned&&this.eq(Ye)?Ye:this.not().add(ui)},tt.neg=tt.negate,tt.add=function(t){Ue(t)||(t=Mn(t));var e=this.high>>>16,s=this.high&65535,o=this.low>>>16,i=this.low&65535,r=t.high>>>16,a=t.high&65535,l=t.low>>>16,c=t.low&65535,u=0,d=0,h=0,p=0;return p+=i+c,h+=p>>>16,p&=65535,h+=o+l,d+=h>>>16,h&=65535,d+=s+a,u+=d>>>16,d&=65535,u+=e+r,u&=65535,Zt(h<<16|p,u<<16|d,this.unsigned)},tt.subtract=function(t){return Ue(t)||(t=Mn(t)),this.add(t.neg())},tt.sub=tt.subtract,tt.multiply=function(t){if(this.isZero())return wn;if(Ue(t)||(t=Mn(t)),xn){var e=xn.mul(this.low,this.high,t.low,t.high);return Zt(e,xn.get_high(),this.unsigned)}if(t.isZero())return wn;if(this.eq(Ye))return t.isOdd()?Ye:wn;if(t.eq(Ye))return this.isOdd()?Ye:wn;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(Vg)&&t.lt(Vg))return yn(this.toNumber()*t.toNumber(),this.unsigned);var s=this.high>>>16,o=this.high&65535,i=this.low>>>16,r=this.low&65535,a=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,d=0,h=0,p=0,f=0;return f+=r*u,p+=f>>>16,f&=65535,p+=i*u,h+=p>>>16,p&=65535,p+=r*c,h+=p>>>16,p&=65535,h+=o*u,d+=h>>>16,h&=65535,h+=i*c,d+=h>>>16,h&=65535,h+=r*l,d+=h>>>16,h&=65535,d+=s*u+o*c+i*l+r*a,d&=65535,Zt(p<<16|f,d<<16|h,this.unsigned)},tt.mul=tt.multiply,tt.divide=function(t){if(Ue(t)||(t=Mn(t)),t.isZero())throw Error("division by zero");if(xn){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?xn.div_u:xn.div_s)(this.low,this.high,t.low,t.high);return Zt(e,xn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?ho:wn;var s,o,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return ho;if(t.gt(this.shru(1)))return _g;i=ho}else{if(this.eq(Ye)){if(t.eq(ui)||t.eq(sh))return Ye;if(t.eq(Ye))return ui;var r=this.shr(1);return s=r.div(t).shl(1),s.eq(wn)?t.isNegative()?ui:sh:(o=this.sub(t.mul(s)),i=s.add(o.div(t)),i)}else if(t.eq(Ye))return this.unsigned?ho:wn;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=wn}for(o=this;o.gte(t);){s=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:xc(2,a-48),c=yn(s),u=c.mul(t);u.isNegative()||u.gt(o);)s-=l,c=yn(s,this.unsigned),u=c.mul(t);c.isZero()&&(c=ui),i=i.add(c),o=o.sub(u)}return i},tt.div=tt.divide,tt.modulo=function(t){if(Ue(t)||(t=Mn(t)),xn){var e=(this.unsigned?xn.rem_u:xn.rem_s)(this.low,this.high,t.low,t.high);return Zt(e,xn.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))},tt.mod=tt.modulo,tt.rem=tt.modulo,tt.not=function(){return Zt(~this.low,~this.high,this.unsigned)},tt.and=function(t){return Ue(t)||(t=Mn(t)),Zt(this.low&t.low,this.high&t.high,this.unsigned)},tt.or=function(t){return Ue(t)||(t=Mn(t)),Zt(this.low|t.low,this.high|t.high,this.unsigned)},tt.xor=function(t){return Ue(t)||(t=Mn(t)),Zt(this.low^t.low,this.high^t.high,this.unsigned)},tt.shiftLeft=function(t){return Ue(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Zt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Zt(0,this.low<<t-32,this.unsigned)},tt.shl=tt.shiftLeft,tt.shiftRight=function(t){return Ue(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Zt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Zt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},tt.shr=tt.shiftRight,tt.shiftRightUnsigned=function(t){if(Ue(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var s=this.low;return Zt(s>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?Zt(e,0,this.unsigned):Zt(e>>>t-32,0,this.unsigned)},tt.shru=tt.shiftRightUnsigned,tt.shr_u=tt.shiftRightUnsigned,tt.toSigned=function(){return this.unsigned?Zt(this.low,this.high,!1):this},tt.toUnsigned=function(){return this.unsigned?this:Zt(this.low,this.high,!0)},tt.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},tt.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]},tt.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]},Pt.fromBytes=function(t,e,s){return s?Pt.fromBytesLE(t,e):Pt.fromBytesBE(t,e)},Pt.fromBytesLE=function(t,e){return new Pt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},Pt.fromBytesBE=function(t,e){return new Pt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const uv=PC({__proto__:null,default:eh},[eh]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const po=eh||uv;function yc(n){return po.fromString(n,!0,16)}const Og=yc("c3a5c85c97cb3127"),fo=yc("b492b66fbe98f273"),Le=yc("9ae16a3b2f90404f");function oh(n){return n.xor(n.shru(47))}function Pg(n,t,e){const s=n.slice(t,t+e);return po.fromBytes(Array.from(s),!0,!0)}function Wt(n,t){return Pg(n,t,8)}function Zg(n,t){return Pg(n,t,4)}function ge(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function Gs(n,t,e=yc("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let o=t.xor(s).mul(e);return o=o.xor(o.shru(47)),o=o.mul(e),o}function dv(n,t,e,s,o,i){o=o.add(n),i=ge(i.add(o).add(s),21);const r=o;return o=o.add(t),o=o.add(e),i=i.add(ge(o,44)),[o.add(s),i.add(r)]}function wc(n,t,e,s){return dv(Wt(n,t),Wt(n,t+8),Wt(n,t+16),Wt(n,t+24),e,s)}function hv(n,t=n.length){if(t>=8){const e=Le.add(t*2),s=Wt(n,0).add(Le),o=Wt(n,t-8),i=ge(o,37).mul(e).add(s),r=ge(s,25).add(o).mul(e);return Gs(i,r,e)}if(t>=4){const e=Le.add(t*2),s=Zg(n,0);return Gs(s.shl(3).add(t),Zg(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],o=n[t-1],i=e+(s<<8),r=t+(o<<2);return oh(Le.mul(i).xor(Og.mul(r))).mul(Le)}return Le}function pv(n,t=n.length){const e=Le.add(t*2),s=Wt(n,0).mul(fo),o=Wt(n,8),i=Wt(n,t-8).mul(e),r=Wt(n,t-16).mul(Le);return Gs(ge(s.add(o),43).add(ge(i,30)).add(r),s.add(ge(o.add(Le),18)).add(i),e)}function fv(n,t=n.length){const e=Le.add(t*2),s=Wt(n,0).mul(Le),o=Wt(n,8),i=Wt(n,t-8).mul(e),r=Wt(n,t-16).mul(Le),a=ge(s.add(o),43).add(ge(i,30)).add(r),l=Gs(a,s.add(ge(o.add(Le),18)).add(i),e),c=Wt(n,16).mul(e),u=Wt(n,24),d=a.add(Wt(n,t-32)).mul(e),h=l.add(Wt(n,t-24)).mul(e);return Gs(ge(c.add(u),43).add(ge(d,30)).add(h),c.add(ge(u.add(s),18)).add(d),e)}function mv(n,t=n.length){const e=po.fromNumber(81,!0);if(t<=32)return t<=16?hv(n,t):pv(n,t);if(t<=64)return fv(n,t);let s=e,o=e.mul(fo).add(113),i=oh(o.mul(Le).add(113)).mul(Le),r=[po.UZERO,po.UZERO],a=[po.UZERO,po.UZERO];s=s.mul(Le).add(Wt(n,0));let l=0;const c=(t-1>>6)*64,u=c+(t-1&63)-63;do s=ge(s.add(o).add(r[0]).add(Wt(n,l+8)),37).mul(fo),o=ge(o.add(r[1]).add(Wt(n,l+48)),42).mul(fo),s=s.xor(a[1]),o=o.add(r[0]).add(Wt(n,l+40)),i=ge(i.add(a[0]),33).mul(fo),r=wc(n,l,r[1].mul(fo),s.add(a[0])),a=wc(n,l+32,i.add(a[1]),o.add(Wt(n,l+16))),[i,s]=[s,i],l+=64;while(l!==c);const d=fo.add(i.and(255).shl(1));return l=u,a[0]=a[0].add(t-1&63),r[0]=r[0].add(a[0]),a[0]=a[0].add(r[0]),s=ge(s.add(o).add(r[0]).add(Wt(n,l+8)),37).mul(d),o=ge(o.add(r[1]).add(Wt(n,l+48)),42).mul(d),s=s.xor(a[1].mul(9)),o=o.add(r[0].mul(9).add(Wt(n,l+40))),i=ge(i.add(a[0]),33).mul(d),r=wc(n,l,r[1].mul(d),s.add(a[0])),a=wc(n,l+32,i.add(a[1]),o.add(Wt(n,l+16))),[i,s]=[s,i],Gs(Gs(r[0],a[0],d).add(oh(o).mul(Og)).add(i),Gs(r[1],a[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Es(n,t){return t==="string"?Ls(n):mo([n],t)}function gv(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function mo(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=si(n)),A().getBool("DEBUG")&&UC(n,t),gv(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Ae(){return A().platform.now()}function Ls(n,t="utf-8"){return t=t||"utf-8",A().platform.encode(n,t)}function Ds(n,t="utf-8"){return t=t||"utf-8",A().platform.decode(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bv{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new yv)}profileKernel(t,e,s){let o;const i=()=>{o=s()};let r;const a=Ae();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(i);else{i();for(const c of o)c.dataSync();r=Promise.resolve({kernelMs:Ae()-a})}if(A().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<o.length;c++){const u=o[c];u.data().then(d=>{xv(d,u.dtype,t)})}return{kernelName:t,outputs:o,inputs:e,timeMs:r.then(c=>c.kernelMs),extraInfo:r.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:o,inputs:i,extraInfo:r}=t;s.forEach(a=>{Promise.all([a.data(),o,r]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],i,l[2])})})}}function xv(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const o=n[s];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${e}'`),!0}return!1}class yv{logKernelProfile(t,e,s,o,i,r){const a=typeof o=="number"?ii(`${o}ms`,9):o.error,l=ii(t,25),c=e.rank,u=e.size,d=ii(e.shape.toString(),14);let h="";for(const p in i){const f=i[p];if(f!=null){const m=f.shape||e.shape,g=m.length;h+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${d}	%c${u}	%c${h}	%c${r}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wv(n,t,e){const s={},o={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],u=c.inputs;for(const d in u){const h=u[d];let p=!1;for(let f=0;f<t.length;f++)if(s[h.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,o[c.id]=!0;break}if(p)break}}const i={};i[e.id]=!0;const r={};for(let l=n.length-1;l>=0;l--){const c=n[l],u=c.inputs;for(let d=0;d<c.outputs.length;d++)if(i[c.outputs[d].id]){for(const h in u)i[u[h].id]=!0,r[c.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const c=n[l];if(o[c.id]&&r[c.id]){const u={};for(const h in c.inputs){const p=c.inputs[h];s[p.id]&&(u[h]=p)}const d=Object.assign({},c);d.inputs=u,d.outputs=c.outputs,a.push(d)}}return a}function Iv(n,t,e,s){for(let o=t.length-1;o>=0;o--){const i=t[o],r=[];if(i.outputs.forEach(l=>{const c=n[l.id];c!=null?r.push(c):r.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(r);for(const l in i.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=e(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=i.inputs[l];if(!$t(c.shape,u.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=c;else{const d=n[u.id];n[u.id]=s(d,c),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kg=20,qr=3,ih=7;function Cv(n,t,e,s){const o=ct(t),i=vv(n,t,e,o),r=t.length,a=Ic(n,t,e,o,i),l=["Tensor"];return s&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${r}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function vv(n,t,e,s){const o=Z(t),i=s[s.length-1],r=new Array(i).fill(0),a=t.length,l=e==="complex64"?ea(n):n;if(a>1)for(let c=0;c<o/i;c++){const u=c*i;for(let d=0;d<i;d++)r[d]=Math.max(r[d],ta(l[u+d],0,e).length)}return r}function ta(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(ih))} + ${parseFloat(n[1].toFixed(ih))}j`:nr(n)?s=`'${n}'`:e==="bool"?s=Bg(n):s=parseFloat(n.toFixed(ih)).toString(),ii(s,t)}function Bg(n){return n===0?"false":"true"}function Ic(n,t,e,s,o,i=!0){const r=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){const m=ea(n);return[ta(m[0],0,e)]}return e==="bool"?[Bg(n[0])]:[n[0].toString()]}if(l===1){if(a>Kg){const g=qr*r;let b=Array.from(n.slice(0,g)),x=Array.from(n.slice((a-qr)*r,a*r));return e==="complex64"&&(b=ea(b),x=ea(x)),["["+b.map((w,y)=>ta(w,o[y],e)).join(", ")+", ..., "+x.map((w,y)=>ta(w,o[a-qr+y],e)).join(", ")+"]"]}return["["+(e==="complex64"?ea(n):Array.from(n)).map((g,b)=>ta(g,o[b],e)).join(", ")+"]"]}const c=t.slice(1),u=s.slice(1),d=s[0]*r,h=[];if(a>Kg){for(let m=0;m<qr;m++){const g=m*d,b=g+d;h.push(...Ic(n.slice(g,b),c,e,u,o,!1))}h.push("...");for(let m=a-qr;m<a;m++){const g=m*d,b=g+d;h.push(...Ic(n.slice(g,b),c,e,u,o,m===a-1))}}else for(let m=0;m<a;m++){const g=m*d,b=g+d;h.push(...Ic(n.slice(g,b),c,e,u,o,m===a-1))}const p=l===2?",":"";h[0]="["+h[0]+p;for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(i?"":f),h}function ea(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $e{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=Z(t),s!=null){const o=s.length;S(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||ie(e,this.size),this.strides=ct(t)}set(t,...e){e.length===0&&(e=[0]),S(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const o of t){if(o<0||o>=this.shape[e]){const i=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(i)}e++}let s=t[t.length-1];for(let o=0;o<t.length-1;++o)s+=this.strides[o]*t[o];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return zn().makeTensor(this.values,this.shape,this.dtype)}}let zn=null,di=null;function kv(n){zn=n}function Sv(n){di=n}class re{constructor(t,e,s,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Z(t),this.strides=ct(t),this.dataId=s,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return di.buffer(this.shape,this.dtype,t)}bufferSync(){return di.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Dn(this.shape,t,this.dtype==="complex64")}arraySync(){return Dn(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=zn().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>Ds(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),zn().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=zn().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Ds(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await zn().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(zn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return di.print(this,t)}clone(){return this.throwIfDisposed(),di.clone(this)}toString(t=!1){const e=this.dataSync();return Cv(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),di.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),zn().makeVariable(this,t,e,s)}}Object.defineProperty(re,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function O(){return dd("Tensor",()=>re)}O();class Cc extends re{constructor(t,e,s,o){super(t.shape,t.dtype,t.dataId,o),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!$t(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);zn().disposeTensor(this),this.dataId=t.dataId,zn().incRef(this,null)}dispose(){zn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Cc,Symbol.hasInstance,{value:n=>n instanceof re&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Hg;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Hg||(Hg={}));var rh;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(rh||(rh={}));var ah;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(ah||(ah={}));var lh;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(lh||(lh={}));var ch;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(ch||(ch={}));const Tv={float32:lh,int32:rh,bool:ah,complex64:ch};function Qe(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return Tv[n][t]}function uh(n){return Qe(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ee(n,t){if(n.dtype===t.dtype)return[n,t];const e=Qe(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function Ug(n){const t=[];return Yg(n,t,new Set),t}function Yg(n,t,e){if(n==null)return;if(n instanceof re){t.push(n);return}if(!Nv(n))return;const s=n;for(const o in s){const i=s[o];e.has(i)||(e.add(i),Yg(i,t,e))}}function Nv(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dh(n){return n.kernelName!=null}class Qg{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class hi{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Qg}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(sn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new bv(this.backendInstance),!0}setupRegisteredKernels(){Eg(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Eg(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof td)&&typeof s.then=="function"){const o=++this.pendingBackendInitId,i=s.then(r=>o<this.pendingBackendInitId?!1:(this.registry[t]=r,this.pendingBackendInit=null,!0)).catch(r=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,sn(`Initialization of backend ${t} failed`),sn(r.stack||r.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return sn(`Initialization of backend ${t} failed`),sn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:o,asyncInit:i}=this.initializeBackend(s);if(i||o)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),o=s.backend,i=this.readSync(e),r=o.refCount(e);o.disposeData(e,!0),s.backend=t,t.move(e,i,s.shape,s.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let o;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(o),()=>(o=e(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,e,s){t();try{const o=s();return e(),o}catch(o){throw e(),o}}nextTensorId(){return hi.nextTensorId++}nextVariableId(){return hi.nextVariableId++}clone(t){const e=E.runKernel(kr,{x:t}),s={x:t},o=r=>({x:()=>{const a="float32",l={x:r},c={dtype:a};return E.runKernel(dr,l,c)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[e],o,i,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(th(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const o=this.backend.numDataIds();let i=0;s.forEach(l=>{i+=l.dtype==="complex64"?3:1});const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=o-e-i-r;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const o=this.isTapeOn(),i=this.state.numBytes,r=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=dh(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(dh(t)){const{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;const b=th(f,this.backendName);S(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const x=this.backend.numDataIds();l=b.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,w);const y=w.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(o){const I=this.getTensorsForGradient(f,m,y);s=this.saveTensorsForBackwardMode(I)}return y}}else{const{forwardFunc:f}=t,m=g=>{o&&(s=g.map(b=>this.keep(this.clone(b))))};a=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const b=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,b),b}}const{inputs:u,attrs:d}=t,h=dh(t)?null:t.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(p=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs)}),o&&this.addTapeNode(c,u,e,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const o=Gg(t);if(o!=null){const i=o.inputsToSave||[],r=o.outputsToSave||[];let a;o.saveAllInputs?(S(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=i.map(c=>e[c]);const l=s.filter((c,u)=>r[u]);return a.concat(l)}return[]}makeTensor(t,e,s,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",o=o||this.backend;let i=t;s==="string"&&nr(t[0])&&(i=t.map(l=>Ls(l)));const r=o.write(i,e,s),a=new re(e,s,r,this.nextTensorId());if(this.trackTensor(a,o),s==="string"){const l=this.state.tensorInfo.get(r),c=QC(i);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(t,e,s,o){s=s||"float32";const i={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(i,o)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:o,dtype:i}=t,r=new re(o,i,s,this.nextTensorId());return this.trackTensor(r,e),r}makeVariable(t,e=!0,s,o){s=s||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));const i=new Cc(t,e,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*id(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof Cc||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*id(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,o,i,r){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:i},l=Gg(t);l!=null&&(o=l.gradFunc),o!=null&&(a.gradient=c=>(c=c.map((u,d)=>{if(u==null){const h=s[d],p=Re(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return u}),o(c.length>1?c:c[0],i,r))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Ug(t),s=new Set(e.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const r=this.state.activeScope.track[i];!r.kept&&!s.has(r.id)&&r.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(i=>{!i.kept&&i.scopeId===o.id&&this.track(i)})}gradients(t,e,s,o=!1){if(S(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));S(i instanceof re,()=>"The result y returned by f() must be a tensor.");const r=wv(this.state.activeTape,e,i);if(!o&&r.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[i.id]=s??Rv(i.shape),Iv(a,r,c=>this.tidy(c),$v);const l=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(t){return S(ad(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{S(e.every(a=>a instanceof re),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const o={};e.forEach((a,l)=>{o[l]=a});const i=(a,l)=>(s=t(...e,l),S(s.value instanceof re,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),S(ad(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),r=(a,l)=>{const c=s.gradFunc(a,l),u=Array.isArray(c)?c:[c];S(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),S(u.every(h=>h instanceof re),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return u.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:i,backwardsFunc:r,inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Ae(),s=await this.backend.time(t);return s.wallMs=Ae()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Qg;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}hi.nextTensorId=0,hi.nextVariableId=0;function Rv(n){const t=cd(Z(n),"float32");return E.makeTensor(t,n,"float32")}function Jg(){const n=lg();if(n._tfengine==null){const t=new jC(n);n._tfengine=new hi(t)}return nv(n._tfengine.ENV),kv(()=>n._tfengine),n._tfengine}const E=Jg();function $v(n,t){const e={a:n,b:t};return E.runKernel(ai,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gv(){return typeof navigator<"u"&&navigator!=null}function jg(n){if(n||Gv()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function qg(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rn=A();rn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),rn.registerFlag("IS_BROWSER",()=>qg()),rn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),rn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),rn.registerFlag("PROD",()=>!1),rn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>rn.getBool("DEBUG")),rn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),rn.registerFlag("IS_TEST",()=>!1),rn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),rn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),rn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),rn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na(n,t){let e=n;if(Hn(n))return t==="string"?[]:[n.length];if(typeof n=="object"&&"texture"in n){const o=n.channels||"RGBA";return[n.height,n.width*o.length]}if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||Hn(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&A().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&t0(n,s,[]),s}function t0(n,t,e){if(e=e||[],!Array.isArray(n)&&!Hn(n)){S(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}S(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),S(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let o=0;o<n.length;++o)t0(n[o],s,e.concat(o))}function e0(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function R(n,t,e,s="numeric"){if(n instanceof re)return e0(s,n.dtype,t,e),n;let o=sr(n);if(o!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),e0(s,o,t,e),n==null||!Hn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const i=na(n,o);!Hn(n)&&!Array.isArray(n)&&(n=[n]);const a=o!=="string"?mo(n,o):si(n,[],!0);return E.makeTensor(a,i,o)}function n0(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,r)=>R(i,`${t}[${r}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ev="__op";function M(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+Ev;const o=(...i)=>{E.startScope(e);try{const r=s(...i);return ig(r)&&console.error("Cannot return a Promise inside of tidy."),E.endScope(r),r}catch(r){throw E.endScope(null),r}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lv(n,t){const e=R(n,"real","complex"),s=R(t,"imag","complex");nd(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const o={real:e,imag:s};return E.runKernel(xd,o)}const pi=M({complex_:Lv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sa(n,t,e,s){if(s==null&&(s=sr(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof n=="object"&&"texture"in n){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return n.channels=n.channels||"RGBA",E.backend.createTensorFromTexture(n,t||e,s)}if(!Hn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){ps(t);const o=Z(t),i=Z(e);S(o===i,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${i}`);for(let r=0;r<e.length;++r){const a=e[r],l=r===e.length-1?a!==Z(t.slice(r)):!0;S(e[r]===t[r]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Hn(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?mo(n,s):si(n,[],!0),E.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(n,t,e){const s=na(n,e);return sa(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s0=4;async function o0(n,t){const e=[],s=[],o=Array.isArray(n)?n.map(r=>r.name):Object.keys(n);for(let r=0;r<o.length;++r){const a=o[r],l=Array.isArray(n)?n[r].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async d=>{const h=await l.bytes(),p=h.reduce((g,b)=>g+b.length,0)+s0*h.length,f=new Uint8Array(p);let m=0;for(let g=0;g<h.length;g++){const b=h[g],x=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(x,m),m+=s0,f.set(b,m),m+=b.length}d(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),e.push(c)}const i=await Promise.all(s);return{data:Dv(i),specs:e}}function Dv(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(i=>{if(t+=i.byteLength,e.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(t);let o=0;return e.forEach(i=>{s.set(new Uint8Array(i.buffer),o),o+=i.byteLength}),s.buffer}const hh=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function i0(n){return hh?Buffer.byteLength(n):new Blob([n]).size}function Mv(n){if(hh)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,o=t.length;s<o;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function zv(n){if(hh){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function Fv(n){if(n.length===1)return n[0];let t=0;n.forEach(o=>{t+=o.byteLength});const e=new Uint8Array(t);let s=0;return n.forEach(o=>{e.set(new Uint8Array(o),s),s+=o.byteLength}),e.buffer}function r0(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:i0(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:i0(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class De{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return De.instance==null&&(De.instance=new De),De.instance}static registerSaveRouter(t){De.getInstance().saveRouters.push(t)}static registerLoadRouter(t){De.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return De.getHandlers(t,"save")}static getLoadHandlers(t,e){return De.getHandlers(t,"load",e)}static getHandlers(t,e,s){const o=[];return(e==="load"?De.getInstance().loadRouters:De.getInstance().saveRouters).forEach(r=>{const a=r(t,s);a!==null&&o.push(a)}),o}}const Wv=n=>De.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ph="tensorflowjs",fh=1,go="models_store",Ms="model_info_store";function a0(){if(!A().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function mh(n){const t=n.result;t.createObjectStore(go,{keyPath:"modelPath"}),t.createObjectStore(Ms,{keyPath:"modelPath"})}class bo{constructor(t){if(this.indexedDB=a0(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,o)=>{const i=this.indexedDB.open(ph,fh);i.onupgradeneeded=()=>mh(i),i.onsuccess=()=>{const r=i.result;if(e==null){const a=r.transaction(go,"readonly"),c=a.objectStore(go).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return r.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=u=>(r.close(),o(c.error)),a.oncomplete=()=>r.close()}else{const a=r0(e),l=r.transaction(Ms,"readwrite");let c=l.objectStore(Ms);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a});let d;u.onsuccess=()=>{d=r.transaction(go,"readwrite");const p=d.objectStore(go).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{c=l.objectStore(Ms);const m=c.delete(this.modelPath);m.onsuccess=()=>(r.close(),o(p.error)),m.onerror=g=>(r.close(),o(p.error))}},u.onerror=h=>(r.close(),o(u.error)),l.oncomplete=()=>{d==null?r.close():d.oncomplete=()=>r.close()}}},i.onerror=r=>o(i.error)})}}bo.URL_SCHEME="indexeddb://";const l0=n=>A().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(bo.URL_SCHEME)?Vv(n.slice(bo.URL_SCHEME.length)):null;De.registerSaveRouter(l0),De.registerLoadRouter(l0);function Vv(n){return new bo(n)}function _v(n){return n.startsWith(bo.URL_SCHEME)?n.slice(bo.URL_SCHEME.length):n}class Av{constructor(){this.indexedDB=a0()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(ph,fh);s.onupgradeneeded=()=>mh(s),s.onsuccess=()=>{const o=s.result,i=o.transaction(Ms,"readonly"),a=i.objectStore(Ms).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},a.onerror=l=>(o.close(),e(a.error)),i.oncomplete=()=>o.close()},s.onerror=o=>e(s.error)})}async removeModel(t){return t=_v(t),new Promise((e,s)=>{const o=this.indexedDB.open(ph,fh);o.onupgradeneeded=()=>mh(o),o.onsuccess=()=>{const i=o.result,r=i.transaction(Ms,"readwrite"),a=r.objectStore(Ms),l=a.get(t);let c;l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const u=a.delete(t),d=()=>{c=i.transaction(go,"readwrite");const p=c.objectStore(go).delete(t);p.onsuccess=()=>e(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};u.onsuccess=d,u.onerror=h=>(d(),i.close(),s(l.error))}},l.onerror=u=>(i.close(),s(l.error)),r.oncomplete=()=>{c==null?i.close():c.oncomplete=()=>i.close()}},o.onerror=i=>s(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fs="/",fi="tensorflowjs_models",c0="info",Xv="model_topology",Ov="weight_specs",Pv="weight_data",Zv="model_metadata";function u0(n){return{info:[fi,n,c0].join(fs),topology:[fi,n,Xv].join(fs),weightSpecs:[fi,n,Ov].join(fs),weightData:[fi,n,Pv].join(fs),modelMetadata:[fi,n,Zv].join(fs)}}function d0(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function Kv(n){const t=n.split(fs);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(fs)}function Bv(n){return n.startsWith(xo.URL_SCHEME)?n.slice(xo.URL_SCHEME.length):n}class xo{constructor(t){if(!A().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=u0(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),o=r0(t);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,Mv(t.weightData));const i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:o}}catch{throw d0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=o;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const a=JSON.parse(i);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(r==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=zv(r),e}}xo.URL_SCHEME="localstorage://";const h0=n=>A().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(xo.URL_SCHEME)?Hv(n.slice(xo.URL_SCHEME.length)):null;De.registerSaveRouter(h0),De.registerLoadRouter(h0);function Hv(n){return new xo(n)}class Uv{constructor(){S(A().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),S(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=fi+fs,s=fs+c0;for(let o=0;o<this.LS.length;++o){const i=this.LS.key(o);if(i.startsWith(e)&&i.endsWith(s)){const r=Kv(i);t[r]=JSON.parse(this.LS.getItem(i))}}return t}async removeModel(t){t=Bv(t);const e=u0(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return d0(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p0="://";class Yn{constructor(){this.managers={}}static getInstance(){return Yn.instance==null&&(Yn.instance=new Yn),Yn.instance}static registerManager(t,e){S(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(p0)&&(t=t.slice(0,t.indexOf(p0))),S(t.length>0,()=>"scheme must not be an empty string.");const s=Yn.getInstance();S(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=Yn.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Yn.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yv{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!A().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const o=this.functionRefs[s.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(A().get("IS_BROWSER")){A().setPlatform("browser",new Yv);try{Yn.registerManager(xo.URL_SCHEME,new Uv)}catch{}try{Yn.registerManager(bo.URL_SCHEME,new Av)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qv={importFetch:()=>require("node-fetch")};let gh;class Jv{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return A().global.fetch!=null?A().global.fetch(t,e):(gh==null&&(gh=Qv.importFetch()),gh(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}A().get("IS_NODE")&&!A().get("IS_BROWSER")&&A().setPlatform("node",new Jv);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wt(n,t="float32",e){return t=t||"float32",ps(n),new $e(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jv(n,t){const e=R(n,"x","cast");if(!YC(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},o={dtype:t};return E.runKernel(dr,s,o)}const ot=M({cast_:jv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qv(n){const e={x:R(n,"x","clone","string_or_numeric")};return E.runKernel(kr,e)}const yo=M({clone_:qv});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Jg(),Sv({buffer:wt,cast:ot,clone:yo,print:tk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(n,t,e=!1,s=!1){let o=R(n,"a","matMul"),i=R(t,"b","matMul");[o,i]=ee(o,i);const r={a:o,b:i},a={transposeA:e,transposeB:s};return E.runKernel(wl,r,a)}const Gt=M({matMul_:ek});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,t,e=1,s=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:R(n,"indices","oneHot","int32")},a={dtype:o,depth:t,onValue:e,offValue:s};return E.runKernel(Jl,r,a)}const f0=M({oneHot_:nk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vt(){return E}function vc(){return E.memory()}function z(n,t){return E.tidy(n,t)}function It(n){Ug(n).forEach(e=>e.dispose())}function ln(n){return E.keep(n)}function m0(n,t,e=1){return E.registerBackend(n,t,e)}function zs(){return E.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(n){const e={input:R(n,"input","imag")};return E.runKernel(zd,e)}const bh=M({imag_:sk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(n){const e={x:R(n,"x","neg")};return E.runKernel(Ul,e)}const ae=M({neg_:ok});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ik(n){const e={input:R(n,"input","real")};return E.runKernel(Pd,e)}const kc=M({real_:ik});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(n,t,e){const s=R(n,"x","transpose");if(t==null&&(t=s.shape.map((r,a)=>a).reverse()),S(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(r=>{S(r>=0&&r<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const o={x:s},i={perm:t};return s.dtype==="complex64"?z(()=>{let r=kc(s),a=bh(s);return r=E.runKernel(li,{x:r},i),a=E.runKernel(li,{x:a},i),e&&(a=ae(a)),pi(r,a)}):E.runKernel(li,o,i)}const kt=M({transpose_:rk});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mi(n,t){const e=n.length,s=[];for(let o=0;o<e;o++){const i=e-1-o,r=n[i]||1;(t[t.length-1-o]||1)>1&&r===1&&s.unshift(i)}return s}function de(n,t){const e=[];for(let s=0;s<t.length;s++){const o=n[n.length-s-1],i=t.length-s-1,r=t[i];(o==null||o===1&&r>1)&&e.unshift(i)}return e}function gt(n,t){const e=[],s=Math.max(n.length,t.length);for(let o=0;o<s;o++){let i=n[n.length-o-1];i==null&&(i=1);let r=t[t.length-o-1];if(r==null&&(r=1),i===1)e.unshift(r);else if(r===1)e.unshift(i);else if(i!==r){const a=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(a)}else e.unshift(i)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n,t,e){if(sd(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=na(n,e);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return sa(n,t,s,e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wo;function lk(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,o=!1,i=!1,r=!1,a=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)i=!0;else if(n.getContext!=null)r=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(th(Jd,E.backendName)!=null){const f={pixels:n},m={numChannels:t};return E.runKernel(Jd,f,m)}const[c,u]=o?[n.videoWidth,n.videoHeight]:[n.width,n.height];let d;if(r)d=n.getContext("2d").getImageData(0,0,c,u).data;else if(s||e)d=n.data;else if(i||o||a){if(wo==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")wo=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else wo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});wo.canvas.width=c,wo.canvas.height=u,wo.drawImage(n,0,0,c,u),d=wo.getImageData(0,0,c,u).data}let h;if(t===4)h=new Int32Array(d);else{const f=c*u;h=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)h[m*t+g]=d[m*4+g]}return ak(h,[u,c,t],"int32")}const ck=M({fromPixels_:lk});function xh(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(Z(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const o=t.shape,i=o[o.length-1];let r=1;for(let d=0;d<o.length-1;++d)r*=o[d];const a=n.shape,l=o.slice();l.pop();let c=1;for(let d=i;d<e;++d)c*=a[d],l.push(a[d]);const u=[...ct(n.shape).map(d=>d/c),1].slice(0,i);return[l,r,c,u]}function g0(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${o}.`;if(e.rank<o)throw new Error(i+` update.rank < ${o}. `);if(n.length<s+(e.rank-o))throw new Error(i+` Output shape length < ${s+(e.rank-o)}`);if(e.rank!==o+n.length-s)throw new Error(i+` update.rank != ${o+n.length-s}`);for(let r=0;r<o;++r)if(e.shape[r]!==t.shape[r])throw new Error(i+` updates.shape[${r}] (${e.shape[r]}) != indices.shape[${r}] (${t.shape[r]}).`);for(let r=0;r<e.rank-o;++r)if(e.shape[r+o]!==n[r+s])throw new Error(i+` updates.shape[${r+o}] (${e.shape[r+o]}) != shape[${r+o}] (${n[r+o]})`)}function uk(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}g0(e,t,n)}function oa(n,t,e){const s=t.shape.length,o=s>1?t.shape[s-1]:1,i=e.length;let r=1;for(let d=o;d<i;++d)r*=e[d];const a=o<1?1:o,l=Z(t.shape)/a,c=[...ct(e.slice(0,o)),1],u=Z(e);return{sliceRank:o,numUpdates:l,sliceSize:r,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yh=-2,dk=-1;function wh(n,t,e){const s=n.shape.length;S(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),S(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let o=0;o<s;++o)S(t[o]+e[o]<=n.shape[o],()=>`Error in slice${s}D: begin[${o}] + size[${o}] (${t[o]+e[o]}) would overflow input.shape[${o}] (${n.shape[o]})`)}function hk(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function Ih(n,t,e){const s=[];for(let o=0;o<n.length;o++)s[o]=Math.ceil((t[o]-n[o])/e[o]);return s}function b0(n,t,e,s){const o=[...n];for(let i=o.length;i<s.length;i++)o.push(1);for(let i=0;i<e;i++)i===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function x0(n,t,e){return e<=n?e:e-(t-1)}function y0(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function pk(n,t,e,s,o,i,r,a,l){const c=n.length;let u=new Array(c),d=new Array(c),h=new Array(c);if(t.length&&e>0){const p=t[0],f=e+1;u=w0(r,p,f,s,n),d=I0(a,p,f,o,n),h=b0(i,p,f,n)}else for(let p=0;p<c;p++)u[p]=v0(r,s,i,n,p,l),d[p]=k0(a,o,i,n,p,l),h[p]=C0(i,p,l);return{begin:u,end:d,strides:h}}function w0(n,t,e,s,o){const i=[...o],r=y0(e,t);for(let a=0;a<i.length;a++)if(r.indexOf(a)>-1)i[a]=0;else{const l=x0(t,e,a);let c=s[l];n&1<<l&&(c=0),i[a]=c}return i}function I0(n,t,e,s,o){const i=[...o],r=y0(e,t);for(let a=0;a<i.length;a++)if(r.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const l=x0(t,e,a);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),i[a]=c}for(let a=0;a<i.length;a++){const l=o[a];i[a]<0&&(i[a]+=l),i[a]=lo(0,i[a],o[a])}return i}function C0(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function v0(n,t,e,s,o,i){let r=t[o];const a=e[o]||1;(n&1<<o||i&1<<o||r==null)&&(a>0?r=Number.MIN_SAFE_INTEGER:r=Number.MAX_SAFE_INTEGER);const l=s[o];return r<0&&(r+=l),r=lo(0,r,l-1),r}function k0(n,t,e,s,o,i){let r=t[o];const a=e[o]||1;(n&1<<o||i&1<<o||r==null)&&(a>0?r=Number.MAX_SAFE_INTEGER:r=Number.MIN_SAFE_INTEGER);const l=s[o];return r<0&&(r+=l),a>0?r=lo(0,r,l):r=lo(-1,r,l-1),r}function Ch(n,t,e){let s=e.length;for(let o=0;o<e.length;o++)if(e[o]>1){s=o;break}for(let o=s+1;o<e.length;o++)if(t[o]>0||e[o]!==n[o])return!1;return!0}function vh(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Sc(n,t,e){let s;const o=n.shape.length;typeof t=="number"?s=[t,...new Array(o-1).fill(0)]:t.length<o?s=t.concat(new Array(o-t.length).fill(0)):s=t.slice(),s.forEach(r=>{S(r!==-1,()=>"slice() does not support negative begin indexing.")});let i;return e==null?i=new Array(o).fill(-1):typeof e=="number"?i=[e,...new Array(o-1).fill(-1)]:e.length<o?i=e.concat(new Array(o-e.length).fill(-1)):i=e,i=i.map((r,a)=>r>=0?r:(S(r===-1,()=>`Negative size values should be exactly -1 but got ${r} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,i]}function kh(n,t,e,s,o,i,r,a,l){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,r!=null&&r&r-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:o,endMask:i,ellipsisMask:r,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<d.dims;w++)u&&1<<w&a&&d.numAddAxisAfterEllipsis++,1<<w&r&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};fk(d,h);let p=!0,f=!0,m=!0;const g=[],b=[];for(let w=0;w<n.length;++w){if(h.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const y=!!(h.shrinkAxisMask&1<<w),I=n[w];if(I===-1){g.push(y?1:-1);continue}const C=[h.beginMask&1<<w,h.endMask&1<<w],v=[h.strides[w]>0?0:-1,h.strides[w]>0?I:I-1];if(y&&h.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[w]===1;const k=!!(h.beginMask&1<<w&&h.endMask&1<<w);if(h.beginValid&&h.endValid){if(y){const F=h.begin[w]<0?I+h.begin[w]:h.begin[w];if(h.begin[w]=F,h.end[w]=h.begin[w]+1,F<0||F>=I)throw Error(`slice index ${h.begin[w]} of dimension ${w} out of bounds.`)}else h.begin[w]=S0(h.begin[w],0,h.strides[w],I,C,v),h.end[w]=S0(h.end[w],1,h.strides[w],I,C,v);const $=h.strides[w]===1&&h.begin[w]===0&&h.end[w]===I;p=p&&$,f=f&&(w===0&&h.strides[w]===1||$)}else p=p&&h.strides[w]===1&&k,f=f&&(w===0&&h.strides[w]===1||k);let T,N=!1;if(h.beginValid&&h.endValid?(T=h.end[w]-h.begin[w],N=!0):y?(T=1,N=!0):k&&I>=0&&(h.strides[w]<0?T=-I:T=I,N=!0),N){let $;T===0||T<0!=h.strides[w]<0?$=0:$=Math.trunc(T/h.strides[w])+(T%h.strides[w]!==0?1:0),g.push($)}else g.push(-1)}for(let w=0;w<h.finalShapeGatherIndices.length;++w){const y=h.finalShapeGatherIndices[w];y>=0?b.push(g[y]):y===yh&&b.push(1)}return{finalShapeSparse:b.filter((w,y)=>h.finalShapeGatherIndices[y]!==yh),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function fk(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const o=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<o;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(yh),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(dk),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function S0(n,t,e,s,o,i){if(o[t])return e>0?i[t]:i[t+1&1];{const r=n<0?s+n:n;return r<i[0]?i[0]:r>i[1]?i[1]:r}}const mk=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:wh,computeFlatOffset:vh,computeOutShape:Ih,getNormalizedAxes:pk,isSliceContinous:Ch,maskToAxes:hk,parseSliceParams:Sc,sliceInfo:kh,startForAxis:v0,startIndicesWithElidedDims:w0,stopForAxis:k0,stopIndicesWithElidedDims:I0,stridesForAxis:C0,stridesWithElidedDims:b0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gi{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class In{constructor(){this.classNameMap={}}static getMap(){return In.instance==null&&(In.instance=new In),In.instance}static register(t){In.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function H(n){S(n.className!=null,()=>"Class being registered does not have the static className property defined."),S(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),S(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),In.register(n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(n,t){let e=R(n,"a","add"),s=R(t,"b","add");[e,s]=ee(e,s);const o={a:e,b:s};return E.runKernel(ai,o)}const Q=M({add_:gk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bk(n,t){let e=R(n,"a","floorDiv"),s=R(t,"b","floorDiv");[e,s]=ee(e,s);const o={a:e,b:s};return E.runKernel(Cr,o)}const T0=M({floorDiv_:bk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xk(n,t){let e=R(n,"a","div"),s=R(t,"b","div");if([e,s]=ee(e,s),e.dtype==="int32"&&s.dtype==="int32")return T0(e,s);const o={a:e,b:s},i={};return E.runKernel(gr,o,i)}const ht=M({div_:xk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yk(n,t){let e=R(n,"a","mul"),s=R(t,"b","mul");[e,s]=ee(e,s);const o={a:e,b:s};return E.runKernel(Dr,o)}const L=M({mul_:yk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(n){const t=R(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return E.runKernel(Cl,e)}else{const e={x:t};return E.runKernel(ml,e)}}const Me=M({abs_:wk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n){const e={x:R(n,"x","acos")};return E.runKernel(or,e)}const Ck=M({acos_:Ik});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vk(n){const e={x:R(n,"x","acosh")};return E.runKernel(ir,e)}const kk=M({acosh_:vk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(n,t=null,e=!1){const o={x:R(n,"x","all","bool")},i={axis:t,keepDims:e};return E.runKernel(pd,o,i)}const N0=M({all_:Sk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(n,t=null,e=!1){const o={x:R(n,"x","any","bool")},i={axis:t,keepDims:e};return E.runKernel(fd,o,i)}const Sh=M({any_:Tk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nk(n,t=0){const s={x:R(n,"x","argMax")},o={axis:t};return E.runKernel(gl,s,o)}const ia=M({argMax_:Nk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n,t=0){const s={x:R(n,"x","argMin")},o={axis:t};return E.runKernel(bl,s,o)}const $k=M({argMin_:Rk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(n){const e={x:R(n,"x","asin")};return E.runKernel(rr,e)}const Ek=M({asin_:Gk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lk(n){const e={x:R(n,"x","asinh")};return E.runKernel(ar,e)}const Dk=M({asinh_:Lk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(n){const e={x:R(n,"x","atan")};return E.runKernel(lr,e)}const zk=M({atan_:Mk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n,t){let e=R(n,"a","atan2"),s=R(t,"b","atan2");[e,s]=ee(e,s);const o={a:e,b:s};return E.runKernel(ur,o)}const Wk=M({atan2_:Fk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vk(n){const e={x:R(n,"x","atanh")};return E.runKernel(cr,e)}const _k=M({atanh_:Vk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ra(n,t,e,s,o="NHWC",i){const r=n[3],a=[...t,r],l=gs(o);return Ce(n,a,e,i,s,null,null,l)}function Cn(n,t,e,s,o,i,r="channelsLast"){const[a,l]=Tc(t);let c;if(r==="channelsLast")c=[a,l,n[3],n[3]];else if(r==="channelsFirst")c=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${r}`);return Ce(n,c,e,s,o,i,!1,r)}function ms(n,t,e,s,o,i,r="NDHWC"){const[a,l,c]=Nh(t);let u,d;if(r==="NDHWC")d="channelsLast",u=[a,l,c,n[4],n[4]];else if(r==="NCDHW")d="channelsFirst",u=[a,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${r}`);return Fs(n,u,e,s,o,!1,d,i)}function Ce(n,t,e,s,o,i,r=!1,a="channelsLast"){let[l,c,u,d]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,d]=n;else if(a==="channelsFirst")[l,d,c,u]=n;else throw new Error(`Unknown dataFormat ${a}`);const[h,p,,f]=t,[m,g]=Tc(e),[b,x]=Tc(s),w=bi(h,b),y=bi(p,x),{padInfo:I,outHeight:C,outWidth:v}=Ok(o,c,u,m,g,w,y,i,a),k=r?f*d:f;let T;return a==="channelsFirst"?T=[l,k,C,v]:a==="channelsLast"&&(T=[l,C,v,k]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:d,outHeight:C,outWidth:v,outChannels:k,padInfo:I,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:y,dilationHeight:b,dilationWidth:x,inShape:n,outShape:T,filterShape:t}}function Fs(n,t,e,s,o,i=!1,r="channelsLast",a){let[l,c,u,d,h]=[-1,-1,-1,-1,-1];if(r==="channelsLast")[l,c,u,d,h]=n;else if(r==="channelsFirst")[l,h,c,u,d]=n;else throw new Error(`Unknown dataFormat ${r}`);const[p,f,m,,g]=t,[b,x,w]=Nh(e),[y,I,C]=Nh(s),v=bi(p,y),k=bi(f,I),T=bi(m,C),{padInfo:N,outDepth:$,outHeight:F,outWidth:W}=Pk(o,c,u,d,b,x,w,v,k,T,a),V=i?g*h:g;let _;return r==="channelsFirst"?_=[l,V,$,F,W]:r==="channelsLast"&&(_=[l,$,F,W,V]),{batchSize:l,dataFormat:r,inDepth:c,inHeight:u,inWidth:d,inChannels:h,outDepth:$,outHeight:F,outWidth:W,outChannels:V,padInfo:N,strideDepth:b,strideHeight:x,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:v,effectiveFilterHeight:k,effectiveFilterWidth:T,dilationDepth:y,dilationHeight:I,dilationWidth:C,inShape:n,outShape:_,filterShape:t}}function Ak(n,t,e,s,o){s==null&&(s=Th(n,t,e));const i=n[0],r=n[1],a=Io((i-t+2*s)/e+1,o),l=Io((r-t+2*s)/e+1,o);return[a,l]}function Xk(n,t,e,s,o,i){o==null&&(o=Th(n,t,s));const r=n[0],a=n[1],l=n[2],c=Io((r-t+2*o)/s+1,i),u=Io((a-t+2*o)/s+1,i),d=Io((l-t+2*o)/s+1,i);return[c,u,d,e]}function Th(n,t,e,s=1){const o=bi(t,s);return Math.floor((n[0]*(e-1)-e+o)/2)}function Tc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Nh(n){return typeof n=="number"?[n,n,n]:n}function bi(n,t){return t<=1?n:n+(n-1)*(t-1)}function Ok(n,t,e,s,o,i,r,a,l){let c,u,d;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=Ak([t,e],i,s,n,a);u=p[0],d=p[1]}else if(n==="same"){u=Math.ceil(t/s),d=Math.ceil(e/o);const h=Math.max(0,(u-1)*s+i-t),p=Math.max(0,(d-1)*o+r-e),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),b=p-g;c={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-i+1)/s),d=Math.ceil((e-r+1)/o);else if(typeof n=="object"){const h=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];c={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=Io((t-i+h+p)/s+1,a),d=Io((e-r+f+m)/o+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:u,outWidth:d}}function Pk(n,t,e,s,o,i,r,a,l,c,u){let d,h,p,f;if(typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=Xk([t,e,s,1],a,1,o,n,u);h=g[0],p=g[1],f=g[2]}else if(n==="same"){h=Math.ceil(t/o),p=Math.ceil(e/i),f=Math.ceil(s/r);const m=(h-1)*o+a-t,g=(p-1)*i+l-e,b=(f-1)*r+c-s,x=Math.floor(m/2),w=m-x,y=Math.floor(g/2),I=g-y,C=Math.floor(b/2),v=b-C;d={top:y,bottom:I,left:C,right:v,front:x,back:w,type:"SAME"}}else if(n==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-a+1)/o),p=Math.ceil((e-l+1)/i),f=Math.ceil((s-c+1)/r);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function Io(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Co(n){const[t,e,s]=Tc(n);return t===1&&e===1&&s===1}function Ge(n,t){return Co(n)||Co(t)}function gs(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Xe(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")S(oi(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(o=>{S(oi(o),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${o}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(n,t){const s={x:R(n,"x","reshape","string_or_numeric")},o={shape:t};return E.runKernel(nc,s,o)}const D=M({reshape_:Zk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(n,t,e,s,o){const i=R(n,"x","avgPool","float32"),r=1;S(Ge(e,r),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);let a=i,l=!1;i.rank===3&&(l=!0,a=D(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Xe("avgPool",s,o);const c={x:a},u={filterSize:t,strides:e,pad:s,dimRoundingMode:o};let d=E.runKernel(xl,c,u);return d=ot(d,i.dtype),l?D(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Rh=M({avgPool_:Kk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n,t,e,s,o,i="NDHWC"){const r=R(n,"x","avgPool3d","float32");let a=r,l=!1;r.rank===4&&(l=!0,a=D(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),S(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),S(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Xe("avgPool3d",s,o);const c={x:a},u={filterSize:t,strides:e,pad:s,dimRoundingMode:o,dataFormat:i};let d=E.runKernel(yl,c,u);return d=ot(d,a.dtype),l?D(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Hk=M({avgPool3d_:Bk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uk(n,t=0){S(n.length>=1,()=>"Pass at least one tensor to concat");const e=n0(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),e.length===1)return yo(e[0]);const s=e,o={axis:t};return E.runKernel(vl,s,o)}const Oe=M({concat_:Uk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yk(n){const e={x:R(n,"x","sigmoid","float32")};return E.runKernel(Zr,e)}const xi=M({sigmoid_:Yk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n,t,e){const s=R(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const o={x:s},i={begin:t,size:e};return E.runKernel(ac,o,i)}const _t=M({slice_:Qk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n){const e={x:R(n,"x","tanh","float32")};return E.runKernel(Qr,e)}const $h=M({tanh_:Jk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(n,t,e){const s=R(n,"x","batchToSpaceND"),o=t.reduce((a,l)=>a*l);S(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),S(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),S(s.shape[0]%o===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);const i={x:s},r={blockShape:t,crops:e};return E.runKernel(Il,i,r)}const Gh=M({batchToSpaceND_:jk});function qk(n){let t;return n.rank===0||n.rank===1?t=D(n,[1,1,1,n.size]):n.rank===2?t=D(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=D(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(n,t,e,s,o,i){i==null&&(i=.001);const r=R(n,"x","batchNorm"),a=R(t,"mean","batchNorm"),l=R(e,"variance","batchNorm");let c;o!=null&&(c=R(o,"scale","batchNorm"));let u;s!=null&&(u=R(s,"offset","batchNorm")),S(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:qk(r),scale:c,offset:u,mean:a,variance:l},p={varianceEpsilon:i},f=E.runKernel(Ll,h,p);return D(f,r.shape)}const Nc=M({batchNorm_:tS});function eS(n,t,e,s,o,i){const r=R(n,"x","batchNorm"),a=R(t,"mean","batchNorm"),l=R(e,"variance","batchNorm");let c;o!=null&&(c=R(o,"scale","batchNorm"));let u;return s!=null&&(u=R(s,"offset","batchNorm")),S(r.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${r.rank}.`),S(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),S(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&S(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&S(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Nc(r,a,l,u,c,i)}const nS=M({batchNorm2d_:eS});function sS(n,t,e,s,o,i){const r=R(n,"x","batchNorm"),a=R(t,"mean","batchNorm"),l=R(e,"variance","batchNorm");let c;o!=null&&(c=R(o,"scale","batchNorm"));let u;return s!=null&&(u=R(s,"offset","batchNorm")),S(r.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${r.rank}.`),S(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),S(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&S(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&S(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Nc(r,a,l,u,c,i)}const oS=M({batchNorm3d_:sS});function iS(n,t,e,s,o,i){const r=R(n,"x","batchNorm"),a=R(t,"mean","batchNorm"),l=R(e,"variance","batchNorm");let c;o!=null&&(c=R(o,"scale","batchNorm"));let u;return s!=null&&(u=R(s,"offset","batchNorm")),S(r.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${r.rank}.`),S(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),S(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&S(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&S(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Nc(r,a,l,u,c,i)}const rS=M({batchNorm4d_:iS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n,t,e){const s=R(n,"x","bincount"),o=R(t,"weights","bincount");S(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),S(e>=0,()=>`size must be non-negative, but got ${e}.`),S(o.size===s.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${o.shape}.`);const i={x:s,weights:o},r={size:e};return E.runKernel(bd,i,r)}const lS=M({bincount_:aS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n,t){let e=R(n,"broadcastTo","x");const s=e.shape;if(ps(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=D(e,c)}const o=e.shape,i=Array.from(t);for(let c=t.length-1;c>=0;c--)if(o[c]===t[c])i[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(i.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return yo(e);const a={x:e},l={reps:i};return E.runKernel(Jr,a,l)}const aa=M({broadcastTo_:cS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n){const e={x:R(n,"x","ceil","float32")};return E.runKernel(hr,e)}const dS=M({ceil_:uS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rc(n,t,e){ps(n);const s={shape:n,value:t,dtype:e};return E.runKernel(Ld,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n,t,e){const s=R(n,"x","clipByValue");if(S(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Rc(s.shape,t,s.dtype);const o={x:s},i={clipValueMin:t,clipValueMax:e};return E.runKernel(pr,o,i)}const cn=M({clipByValue_:hS});function pS(n){return Oe(n,0)}const fS=M({concat1d_:pS});function mS(n,t){return Oe(n,t)}const gS=M({concat2d_:mS});function bS(n,t){return Oe(n,t)}const xS=M({concat3d_:bS});function yS(n,t){return Oe(n,t)}const wS=M({concat4d_:yS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IS(n,t,e,s,o="NHWC",i=[1,1],r){const a=R(n,"x","conv2d","float32"),l=R(t,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=D(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),S(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Xe("conv2d",s,r);const d=o==="NHWC"?c.shape[3]:c.shape[1];S(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),S(Ge(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);const h={x:c,filter:l},p={strides:e,pad:s,dataFormat:o,dilations:i,dimRoundingMode:r},f=E.runKernel(kl,h,p);return u?D(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const vo=M({conv2d_:IS});function CS(n,t,e,s,o="NWC",i=1,r){const a=R(n,"x","conv1d"),l=R(t,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=D(a,[1,a.shape[0],a.shape[1]])),S(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),S(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Xe("conv1d",s,r),S(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),S(Ge(e,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${i}'`),S(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const d=D(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=D(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=vo(h,d,[1,e],s,"NHWC",[1,i],r);return u?D(g,[g.shape[2],g.shape[3]]):D(g,[g.shape[0],g.shape[2],g.shape[3]])}const R0=M({conv1d_:CS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(n,t,e,s,o,i="NHWC",r){S(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,l=t,c=!1;t.rank===3&&(c=!0,l=D(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,n[0],n[1],n[2]]),S(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),S(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),S(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const u=i==="NHWC"?a[3]:a[1],d=i==="NHWC"?l.shape[3]:l.shape[1];S(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),S(d===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${e.shape[3]}.`),Xe("conv2dDerInput",o,r);const h={dy:l,filter:e},p={strides:s,pad:o,dataFormat:i,dimRoundingMode:r,inputShape:a},f=E.runKernel(Sl,h,p);return c?D(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Eh=M({conv2DBackpropInput_:vS});function kS(n,t,e,s,o,i){const r=R(n,"x","conv2dTranspose"),a=R(t,"filter","conv2dTranspose");return Eh(e,r,a,s,o,"NHWC",i)}const $0=M({conv2dTranspose_:kS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SS(n,t,e,s,o="NDHWC",i=[1,1,1]){const r=R(n,"x","conv3d"),a=R(t,"filter","conv3d");let l=r,c=!1;r.rank===4&&(c=!0,l=D(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),S(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),S(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),S(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),S(Ge(e,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),S(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);const u={x:l,filter:a},d={strides:e,pad:s,dataFormat:o,dilations:i},h=E.runKernel(Tl,u,d);return c?D(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const TS=M({conv3d_:SS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NS(n,t,e,s,o){S(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,r=t,a=!1;t.rank===4&&(a=!0,r=D(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],c=r.shape[4];S(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),S(r.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${r.rank}`),S(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),S(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),S(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const u={dy:r,filter:e},d={pad:o,strides:s,inputShape:i},h=E.runKernel(Id,u,d);return a?D(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const G0=M({conv3DBackpropInput_:NS});function RS(n,t,e,s,o){const i=R(n,"x","conv3dTranspose"),r=R(t,"filter","conv3dTranspose");return G0(e,i,r,s,o)}const $S=M({conv3dTranspose_:RS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(n){const e={x:R(n,"x","cos","float32")};return E.runKernel(fr,e)}const Lh=M({cos_:GS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(n){const e={x:R(n,"x","cosh","float32")};return E.runKernel(mr,e)}const E0=M({cosh_:ES});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LS(n,t=0,e=!1,s=!1){const i={x:R(n,"x","cumprod")},r={axis:t,exclusive:e,reverse:s};return E.runKernel(Cd,i,r)}const Dh=M({cumprod_:LS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(n,t=0,e=!1,s=!1){const i={x:R(n,"x","cumsum")},r={axis:t,exclusive:e,reverse:s};return E.runKernel(Nl,i,r)}const L0=M({cumsum_:DS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MS(n,t,e,s=!1){const o=R(n,"x","denseBincount"),i=R(t,"weights","denseBincount");S(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),S(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),S(e>=0,()=>`size must be non-negative, but got ${e}.`),S(i.size===o.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${i.shape}.`);const r={x:o,weights:i},a={size:e,binaryOutput:s};return E.runKernel(kd,r,a)}const D0=M({denseBincount_:MS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zS(n,t,e="NHWC"){const s=R(n,"x","depthToSpace","float32"),o=e==="NHWC"?s.shape[1]:s.shape[2],i=e==="NHWC"?s.shape[2]:s.shape[3],r=e==="NHWC"?s.shape[3]:s.shape[1];S(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),S(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${s.shape}`),S(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${s.shape}`),S(r%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${r} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:t,dataFormat:e};return E.runKernel(Sd,a,l)}const FS=M({depthToSpace_:zS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WS(n,t,e,s,o="NHWC",i=[1,1],r){const a=R(n,"x","depthwiseConv2d","float32"),l=R(t,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=D(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),S(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const d=o==="NHWC"?c.shape[3]:c.shape[1];S(d===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`),Xe("depthwiseConv2d",s,r);const h={x:c,filter:l},p={strides:e,pad:s,dataFormat:o,dilations:i,dimRoundingMode:r},f=E.runKernel(Rl,h,p);return u?D(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Mh=M({depthwiseConv2d_:WS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(n,t,e,s,o=[1,1],i="NHWC"){const r=R(n,"x","dilation2d"),a=R(t,"filter","dilation2d");S(r.rank===3||r.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${r.rank}.`),S(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),S(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=r,c=!1;r.rank===3&&(l=D(r,[1,r.shape[0],r.shape[1],r.shape[2]]),c=!0);const u={x:l,filter:a},d={strides:e,pad:s,dilations:o},h=E.runKernel($l,u,d);return c?D(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const _S=M({dilation2d_:VS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(n,t){let e=R(n,"a","equal","string_or_numeric"),s=R(t,"b","equal","string_or_numeric");[e,s]=ee(e,s),gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(Gl,o)}const Qn=M({equal_:AS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(n,t,e){const s=R(t,"a","where"),o=R(e,"b","where"),i=R(n,"condition","where","bool"),r=gt(gt(i.shape,s.shape),o.shape),a=aa(i,r),l=aa(s,r),c=aa(o,r),u={condition:a,t:l,e:c};return E.runKernel(rc,u)}const Je=M({where_:XS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n){const e={x:R(n,"x","zerosLike")};return E.runKernel(fc,e)}const St=M({zerosLike_:OS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(n,t){let e=R(n,"a","div"),s=R(t,"b","div");[e,s]=ee(e,s);const o=ht(e,s),i=St(o),r=Qn(s,i);return Je(r,i,o)}const ZS=M({divNoNan_:PS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(n,t){const e=R(n,"t1","dot"),s=R(t,"t2","dot");S((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const o=e.rank===1?e.size:e.shape[1],i=s.rank===1?s.size:s.shape[0];if(S(o===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${i}.`),e.rank===1&&s.rank===1){const r=D(e,[1,-1]),a=D(s,[-1,1]),l=Gt(r,a);return D(l,[])}else if(e.rank===1&&s.rank===2){const r=D(e,[1,-1]),a=D(s,[s.shape[0],s.shape[1]]),l=Gt(r,a);return D(l,[l.size])}else if(e.rank===2&&s.rank===1){const r=D(s,[-1,1]),a=Gt(e,r);return D(a,[a.size])}else{const r=D(s,[s.shape[0],s.shape[1]]);return Gt(e,r)}}const BS=M({dot_:KS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n){const e={x:R(n,"x","elu","float32")};return E.runKernel(br,e)}const $c=M({elu_:HS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(n){let t=R(n,"x","erf");S(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ot(t,"float32"));const e={x:t};return E.runKernel(xr,e)}const YS=M({erf_:US});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zh(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function M0(n,t,e){const s=n.length+t.length,o=[];let i=0,r=0;for(let a=0;a<s;a++)e.indexOf(a)===-1?o.push(n[i++]):o.push(t[r++]);return o}function be(n,t){const e=[],s=n.length;for(let i=0;i<s;i++)t.indexOf(i)===-1&&e.push(n[i]);const o=t.map(i=>n[i]);return[e,o]}function le(n,t){const e=t.map(s=>1);return M0(n,e,t)}function ve(n,t,e){S(zh(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function Jt(n,t){if(zh(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function Ws(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function ne(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QS(n,t=null,e=!1){const o={x:R(n,"x","max")},i={reductionIndices:t,keepDims:e};return E.runKernel(Ol,o,i)}const Fn=M({max_:QS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(n,t=null,e=!1){const o={x:R(n,"x","min")},i={axis:t,keepDims:e};return E.runKernel(Bl,o,i)}const Gc=M({min_:JS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n,t){let e=R(n,"base","pow"),s=R(t,"exp","pow");[e,s]=ee(e,s);const o={a:e,b:s};return E.runKernel(Mr,o)}const yi=M({pow_:jS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Et(n,t){if((Hn(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Hn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sa(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qS(n){const e={x:R(n,"x","sqrt","float32")};return E.runKernel(Br,e)}const ze=M({sqrt_:qS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tT(n){const t=R(n,"x","square"),e={};return E.runKernel("Square",{x:t},e)}const Kt=M({square_:tT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT(n,t=null,e=!1){let s=R(n,"x","sum");s.dtype==="bool"&&(s=ot(s,"int32"));const o={x:s},i={axis:t,keepDims:e};return E.runKernel(lc,o,i)}const ut=M({sum_:eT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(n,t="euclidean",e=null,s=!1){n=R(n,"x","norm");const o=z0(n,t,e);let i=o.shape;if(s){const r=yt(e,n.shape);i=le(o.shape,r)}return D(o,i)}function z0(n,t,e=null){if(n.rank===0)return Me(n);if(n.rank!==1&&e===null)return z0(D(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return ut(Me(n),e);if(t===1/0)return Fn(Me(n),e);if(t===-1/0)return Gc(Me(n),e);if(t==="euclidean"||t===2)return ze(ut(yi(Me(n),Et(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Fn(ut(Me(n),e[0]),e[1]-1);if(t===1/0)return Fn(ut(Me(n),e[1]),e[0]);if(t===-1/0)return Gc(ut(Me(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return ze(ut(Kt(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Ec=M({norm_:nT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n,t=null,e=!1){return Ec(n,"euclidean",t,e)}const oT=M({euclideanNorm_:sT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(n){const e={x:R(n,"x","exp")};return E.runKernel(yr,e)}const bs=M({exp_:iT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,t=0){const e=R(n,"x","expandDims","string_or_numeric");S(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},o={dim:t};return E.runKernel(El,s,o)}const je=M({expandDims_:rT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(n){const e={x:R(n,"x","expm1")};return E.runKernel(wr,e)}const lT=M({expm1_:aT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n,t){const e=R(n,"x","tile","string_or_numeric");S(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},o={reps:t};return E.runKernel(Jr,s,o)}const Wn=M({tile_:cT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n,t,e,s="float32"){t==null&&(t=n);const o=wt([n,t],s),i=n<=t?n:t;for(let a=0;a<i;++a)o.set(1,a,a);const r=D(o.toTensor(),[n,t]);if(e==null)return r;if(e.length===1)return Wn(je(r,0),[e[0],1,1]);if(e.length===2)return Wn(je(je(r,0),0),[e[0],e[1],1,1]);if(e.length===3)return Wn(je(je(je(r,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const F0=M({eye_:uT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dT(n){const e={x:R(n,"x","floor","float32")};return E.runKernel(Ir,e)}const Lc=M({floor_:dT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n,t,e=0,s=0){const o=R(n,"x","gather"),i=R(t,"indices","gather","int32"),r={x:o,indices:i},a={axis:e,batchDims:s};return E.runKernel(Dl,r,a)}const Fh=M({gather_:hT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pT(n,t){let e=R(n,"a","greater","string_or_numeric"),s=R(t,"b","greater","string_or_numeric");[e,s]=ee(e,s),gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(Ml,o)}const un=M({greater_:pT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n,t){let e=R(n,"a","greaterEqual","string_or_numeric"),s=R(t,"b","greaterEqual","string_or_numeric");[e,s]=ee(e,s),gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(vr,o)}const ko=M({greaterEqual_:fT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n){const e={x:R(n,"x","isFinite")};return E.runKernel(Sr,e)}const gT=M({isFinite_:mT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n){const e={x:R(n,"x","isInf")};return E.runKernel(Tr,e)}const xT=M({isInf_:bT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yT(n){const e={x:R(n,"x","isNaN")};return E.runKernel(Nr,e)}const wT=M({isNaN_:yT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(n,t=.2){const s={x:R(n,"x","leakyRelu")},o={alpha:t};return E.runKernel(zl,s,o)}const Wh=M({leakyRelu_:IT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CT(n,t){let e=R(n,"a","less","string_or_numeric"),s=R(t,"b","less","string_or_numeric");[e,s]=ee(e,s),gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(Fl,o)}const W0=M({less_:CT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vT(n,t){let e=R(n,"a","lessEqual","string_or_numeric"),s=R(t,"b","lessEqual","string_or_numeric");[e,s]=ee(e,s),gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(Wl,o)}const wi=M({lessEqual_:vT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(n,t=5,e=1,s=1,o=.5){const i=R(n,"x","localResponseNormalization");S(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),S(oi(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let r=i,a=!1;i.rank===3&&(a=!0,r=D(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:r},c={depthRadius:t,bias:e,alpha:s,beta:o},u=E.runKernel(Xl,l,c);return a?D(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const ST=M({localResponseNormalization_:kT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n){const e={x:R(n,"x","log","float32")};return E.runKernel(Rr,e)}const Jn=M({log_:TT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NT(n){const e={x:R(n,"x","log1p")};return E.runKernel($r,e)}const V0=M({log1p_:NT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n,t){S(ad(n),()=>"The f passed in variableGrads(f) must be a function"),S(t==null||Array.isArray(t)&&t.every(c=>c instanceof Cc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in E.registeredVariables)t.push(E.registeredVariables[c])}const s=e?t.filter(c=>!c.trainable):null,o=t.length;t=t.filter(c=>c.trainable),S(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const i=!0,{value:r,grads:a}=E.gradients(n,t,null,i);S(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),S(r.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${r.rank} tensor`);const l={};return t.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:r,grads:l}}function Ii(n){return E.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $T(n){const e={x:R(n,"x","softplus")};return E.runKernel(Kr,e)}const la=M({softplus_:$T});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(n){const t=R(n,"x","logSigmoid");return Ii(s=>({value:ae(la(ae(s))),gradFunc:r=>L(r,xi(ae(s)))}))(t)}const ET=M({logSigmoid_:GT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LT(n,t){let e=R(n,"a","sub"),s=R(t,"b","sub");[e,s]=ee(e,s);const o={a:e,b:s};return E.runKernel(Ur,o)}const ft=M({sub_:LT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(n,t=-1){const e=R(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Ii((o,i)=>{const a=Fn(o,t,!0),l=ft(o,a),c=ft(ot(l,"float32"),Jn(ut(bs(l),t,!0)));return i([c]),{value:c,gradFunc:(d,h)=>{const[p]=h,f=!0,m=bs(p);return ft(d,L(ut(d,t,f),m))}}})(e)}const _0=M({logSoftmax_:DT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(n,t=null,e=!1){const s=R(n,"x","logSumExp"),o=yt(t,s.shape),i=Fn(s,o,!0),r=ft(s,i),a=bs(r),l=ut(a,o),c=Jn(l),u=Q(D(i,c.shape),c);if(e){const d=le(u.shape,o);return D(u,d)}return u}const zT=M({logSumExp_:MT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n,t){const e=R(n,"a","logicalAnd","bool"),s=R(t,"b","logicalAnd","bool");gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(Vl,o)}const xs=M({logicalAnd_:FT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(n){const e={x:R(n,"x","logicalNot","bool")};return E.runKernel(_l,e)}const Vh=M({logicalNot_:WT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(n,t){const e=R(n,"a","logicalOr","bool"),s=R(t,"b","logicalOr","bool");gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(Al,o)}const A0=M({logicalOr_:VT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(n,t){const e=R(n,"a","logicalXor","bool"),s=R(t,"b","logicalXor","bool");return gt(e.shape,s.shape),xs(A0(n,t),Vh(xs(n,t)))}const AT=M({logicalXor_:_T});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(n,t,e,s,o){const i=R(n,"x","maxPool"),r=1;let a=i,l=!1;i.rank===3&&(l=!0,a=D(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),S(Ge(e,r),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),Xe("maxPool",s,o);const c={x:a},u={filterSize:t,strides:e,pad:s,dimRoundingMode:o},d=E.runKernel(Pl,c,u);return l?D(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const _h=M({maxPool_:XT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(n,t=[1,1,1],e,s,o,i="NDHWC"){const r=R(n,"x","maxPool3d");let a=r,l=!1;r.rank===4&&(l=!0,a=D(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),S(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),S(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Xe("maxPool3d",s,o);const c={x:a},u={filterSize:t,strides:e,pad:s,dimRoundingMode:o,dataFormat:i},d=E.runKernel(Zl,c,u);return l?D(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const PT=M({maxPool3d_:OT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(n,t){let e=R(n,"a","maximum"),s=R(t,"b","maximum");[e,s]=ee(e,s),e.dtype==="bool"&&(e=ot(e,"int32"),s=ot(s,"int32")),gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(Gr,o)}const Vs=M({maximum_:ZT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(n,t=null,e=!1){const o={x:R(n,"x","mean")},i={axis:t,keepDims:e};return E.runKernel(Kl,o,i)}const ce=M({mean_:KT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(n,t="float32"){if(ps(n),t==="complex64"){const s=xe(n,"float32"),o=xe(n,"float32");return pi(s,o)}const e=Re(Z(n),t);return E.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function So(n,t="float32"){if(ps(n),t==="complex64"){const s=So(n,"float32"),o=xe(n,"float32");return pi(s,o)}const e=cd(Z(n),t);return E.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT(n,t){let e=R(n,"a","minimum"),s=R(t,"b","minimum");[e,s]=ee(e,s),e.dtype==="bool"&&(e=ot(e,"int32"),s=ot(s,"int32")),gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(Er,o)}const Ah=M({minimum_:BT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HT(n,t,e){S(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=R(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");S(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const o=e==="reflect"?1:0;for(let a=0;a<s.rank;a++)S(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),S(t[a][0]>=0&&t[a][0]<=s.shape[a]-o&&t[a][1]>=0&&t[a][1]<=s.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-o} or less than 0 for input of shape ${s.shape}`);const i={paddings:t,mode:e},r={x:s};return E.runKernel(Hl,r,i)}const UT=M({mirrorPad_:HT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n,t){let e=R(n,"a","mod"),s=R(t,"b","mod");[e,s]=ee(e,s);const o={a:e,b:s};return E.runKernel(Lr,o)}const QT=M({mod_:YT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JT(n,t=null,e=!1){n=R(n,"x","moments");const s=yt(t,n.shape),o=ce(n,s,e);let i=o.shape;e||(i=le(o.shape,s));const r=Kt(ft(ot(n,"float32"),D(o,i))),a=ce(r,s,e);return{mean:o,variance:a}}const Xh=M({moments_:JT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,t){let e=R(n,"a","notEqual","string_or_numeric"),s=R(t,"b","notEqual","string_or_numeric");[e,s]=ee(e,s),gt(e.shape,s.shape);const o={a:e,b:s};return E.runKernel(Yl,o)}const Dc=M({notEqual_:jT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qT(n){const e={x:R(n,"x","onesLike")};return E.runKernel(Ql,e)}const vn=M({onesLike_:qT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n,t,e=0){const s=R(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:e},i={x:s};return E.runKernel(ql,i,o)}const Oh=M({pad_:tN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n,t,e){const s=R(n,"x","spaceToBatchND");S(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),S(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),S(s.shape.reduce((r,a,l)=>l>0&&l<=t.length?r&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:r,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const o={x:s},i={blockShape:t,paddings:e};return E.runKernel(cc,o,i)}const Ph=M({spaceToBatchND_:eN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,t,e,s,o,i,r){o==null&&(o=[1,1]),i==null&&(i=1),s===0&&(s="valid");const a=R(n,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=D(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(Ge(i,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${o}'`);const u=Cn(l.shape,t,i,o,s),d=[u.dilationHeight,u.dilationWidth];let h;s==="same"?h=oN([u.filterHeight,u.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,m]=sN([u.inHeight,u.inWidth],d,h),g=p?s:"valid",b=p?l:Ph(l,d,f),w=(e==="avg"?()=>Rh(b,t,i,g,r):()=>_h(b,t,i,g,r))(),y=p?w:Gh(w,d,m);return c?D(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function sN(n,t,e){const s=e.map(u=>u[0]),o=e.map(u=>u[1]),i=n.concat(s,o),r=t.map((u,d)=>(u-i[d]%u)%u),a=o.map((u,d)=>u+r[d]),l=t.map((u,d)=>[s[d],a[d]]),c=t.map((u,d)=>[0,r[d]]);return[l,c]}function oN(n,t){const s=n.map((r,a)=>r+(r-1)*(t[a]-1)).map(r=>r-1),o=s.map(r=>Math.floor(r/2)),i=s.map((r,a)=>r-o[a]);return s.map((r,a)=>[o[a],i[a]])}const iN=M({pool_:nN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(n,t){const e=R(n,"x","prelu"),s=R(t,"alpha","prelu"),o={x:e,alpha:s};return E.runKernel(tc,o)}const Zh=M({prelu_:rN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n,t=null,e=!1){let s=R(n,"x","prod");s.dtype==="bool"&&(s=ot(s,"int32"));const o={x:s},i={axis:t,keepDims:e};return E.runKernel(ec,o,i)}const lN=M({prod_:aN});var Kh={},cN={get exports(){return Kh},set exports(n){Kh=n}};(function(n){(function(t,e,s){function o(l){var c=this,u=a();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function i(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function r(l,c){var u=new o(l),d=c&&c.state,h=u.next;return h.int32=function(){return u.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,u),h.state=function(){return i(u,{})}),h}function a(){var l=4022871197,c=function(u){u=String(u);for(var d=0;d<u.length;d++){l+=u.charCodeAt(d);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=r:s&&s.amd?s(function(){return r}):this.alea=r})(co,n,!1)})(cN);var Bh={},uN={get exports(){return Bh},set exports(n){Bh=n}};(function(n){(function(t,e,s){function o(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var d=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^d^d>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function r(a,l){var c=new o(a),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(typeof u=="object"&&i(u,c),d.state=function(){return i(c,{})}),d}e&&e.exports?e.exports=r:s&&s.amd?s(function(){return r}):this.xor128=r})(co,n,!1)})(uN);var Hh={},dN={get exports(){return Hh},set exports(n){Hh=n}};(function(n){(function(t,e,s){function o(a){var l=this,c="";l.next=function(){var d=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(d^d<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function r(a,l){var c=new o(a),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(typeof u=="object"&&i(u,c),d.state=function(){return i(c,{})}),d}e&&e.exports?e.exports=r:s&&s.amd?s(function(){return r}):this.xorwow=r})(co,n,!1)})(dN);var Uh={},hN={get exports(){return Uh},set exports(n){Uh=n}};(function(n){(function(t,e,s){function o(a){var l=this;l.next=function(){var u=l.x,d=l.i,h,p;return h=u[d],h^=h>>>7,p=h^h<<24,h=u[d+1&7],p^=h^h>>>10,h=u[d+3&7],p^=h^h>>>3,h=u[d+4&7],p^=h^h<<7,h=u[d+7&7],h=h^h<<13,p^=h^h<<9,u[d]=p,l.i=d+1&7,p};function c(u,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],u.x=p,u.i=0,h=256;h>0;--h)u.next()}c(l,a)}function i(a,l){return l.x=a.x.slice(),l.i=a.i,l}function r(a,l){a==null&&(a=+new Date);var c=new o(a),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(u.x&&i(u,c),d.state=function(){return i(c,{})}),d}e&&e.exports?e.exports=r:s&&s.amd?s(function(){return r}):this.xorshift7=r})(co,n,!1)})(hN);var Yh={},pN={get exports(){return Yh},set exports(n){Yh=n}};(function(n){(function(t,e,s){function o(a){var l=this;l.next=function(){var u=l.w,d=l.X,h=l.i,p,f;return l.w=u=u+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,l.i=h,f+(u^u>>>16)|0};function c(u,d){var h,p,f,m,g,b=[],x=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,x=Math.max(x,d.length)),f=0,m=-32;m<x;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=b[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=b[f+34&127],h=b[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,b[f]=p^h;u.w=g,u.X=b,u.i=f}c(l,a)}function i(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function r(a,l){a==null&&(a=+new Date);var c=new o(a),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(u.X&&i(u,c),d.state=function(){return i(c,{})}),d}e&&e.exports?e.exports=r:s&&s.amd?s(function(){return r}):this.xor4096=r})(co,n,!1)})(pN);var Qh={},fN={get exports(){return Qh},set exports(n){Qh=n}};(function(n){(function(t,e,s){function o(a){var l=this,c="";l.next=function(){var d=l.b,h=l.c,p=l.d,f=l.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,l.b=d=d<<20^d>>>12^h,l.c=h=h-p|0,l.d=p<<16^h>>>16^f,l.a=f-d|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function i(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function r(a,l){var c=new o(a),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(typeof u=="object"&&i(u,c),d.state=function(){return i(c,{})}),d}e&&e.exports?e.exports=r:s&&s.amd?s(function(){return r}):this.tychei=r})(co,n,!1)})(fN);var Jh={},mN={get exports(){return Jh},set exports(n){Jh=n}};const gN=lv(Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"})));(function(n){(function(t,e,s){var o=256,i=6,r=52,a="random",l=s.pow(o,i),c=s.pow(2,r),u=c*2,d=o-1,h;function p(y,I,C){var v=[];I=I==!0?{entropy:!0}:I||{};var k=b(g(I.entropy?[y,w(e)]:y??x(),3),v),T=new f(v),N=function(){for(var $=T.g(i),F=l,W=0;$<c;)$=($+W)*o,F*=o,W=T.g(1);for(;$>=u;)$/=2,F/=2,W>>>=1;return($+W)/F};return N.int32=function(){return T.g(4)|0},N.quick=function(){return T.g(4)/4294967296},N.double=N,b(w(T.S),e),(I.pass||C||function($,F,W,V){return V&&(V.S&&m(V,T),$.state=function(){return m(T,{})}),W?(s[a]=$,F):$})(N,k,"global"in I?I.global:this==s,I.state)}function f(y){var I,C=y.length,v=this,k=0,T=v.i=v.j=0,N=v.S=[];for(C||(y=[C++]);k<o;)N[k]=k++;for(k=0;k<o;k++)N[k]=N[T=d&T+y[k%C]+(I=N[k])],N[T]=I;(v.g=function($){for(var F,W=0,V=v.i,_=v.j,X=v.S;$--;)F=X[V=d&V+1],W=W*o+X[d&(X[V]=X[_=d&_+F])+(X[_]=F)];return v.i=V,v.j=_,W})(o)}function m(y,I){return I.i=y.i,I.j=y.j,I.S=y.S.slice(),I}function g(y,I){var C=[],v=typeof y,k;if(I&&v=="object")for(k in y)try{C.push(g(y[k],I-1))}catch{}return C.length?C:v=="string"?y:y+"\0"}function b(y,I){for(var C=y+"",v,k=0;k<C.length;)I[d&k]=d&(v^=I[d&k]*19)+C.charCodeAt(k++);return w(I)}function x(){try{var y;return h&&(y=h.randomBytes)?y=y(o):(y=new Uint8Array(o),(t.crypto||t.msCrypto).getRandomValues(y)),w(y)}catch{var I=t.navigator,C=I&&I.plugins;return[+new Date,t,C,t.screen,w(e)]}}function w(y){return String.fromCharCode.apply(0,y)}if(b(s.random(),e),n.exports){n.exports=p;try{h=gN}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:co,[],Math)})(mN);var bN=Kh,xN=Bh,yN=Hh,wN=Uh,IN=Yh,CN=Qh,To=Jh;To.alea=bN,To.xor128=xN,To.xorwow=yN,To.xorshift7=wN,To.xor4096=IN,To.tychei=CN;var jh=To;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X0{constructor(t,e,s,o,i){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const r=i||Math.random();this.random=jh.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let t,e,s=!1;for(;!s;){let o,i,r;do o=2*this.random()-1,i=2*this.random()-1,r=o*o+i*i;while(r>=1||r===0);const a=Math.sqrt(-2*Math.log(r)/r);t=this.mean+this.stdDev*o*a,e=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class vN{constructor(t=0,e=1,s,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=jh.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n,t=0,e=1,s,o){if(ps(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new X0(t,e,s,!1,o),r=wt(n,s);for(let a=0;a<r.values.length;a++)r.values[a]=i.nextValue();return r.toTensor()}const SN=M({randomNormal_:kN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n,t=0,e=1,s="float32",o){ps(n);const i=wt(n,s),r=new vN(t,e,null,o);for(let a=0;a<i.values.length;a++)i.values[a]=r.nextValue();return i.toTensor()}const Mc=M({randomUniform_:TN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ca(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const o={start:n,stop:t,step:e,dtype:s};return E.runKernel(Od,{},o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NN(n){const e={x:R(n,"x","reciprocal")};return E.runKernel(zr,e)}const RN=M({reciprocal_:NN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n){const e={x:R(n,"x","relu")};return E.runKernel(Fr,e)}const No=M({relu_:$N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(n){const e={x:R(n,"x","relu6")};return E.runKernel(Wr,e)}const O0=M({relu6_:GN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n,t){const s={x:R(n,"x","reverse")},o={dims:t};return E.runKernel(ic,s,o)}const Ro=M({reverse_:EN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(n){const e={x:R(n,"x","round")};return E.runKernel(Vr,e)}const P0=M({round_:LN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(n){const e={x:R(n,"x","rsqrt","float32")};return E.runKernel(_r,e)}const Z0=M({rsqrt_:DN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(n){const e={x:R(n,"x","selu")};return E.runKernel(Ar,e)}const K0=M({selu_:MN});function zN(n,t,e,s,o,i=[1,1],r="NHWC"){const a=R(n,"x","separableConv2d"),l=R(t,"depthwiseFilter","separableConv2d"),c=R(e,"pointwiseFilter","separableConv2d");let u=a,d=!1;if(a.rank===3&&(d=!0,u=D(a,[1,a.shape[0],a.shape[1],a.shape[2]])),r==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");S(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),S(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),S(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),S(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),S(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const h=l.shape[2],p=l.shape[3];S(c.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`);const f=Mh(u,l,s,o,r,i),g=vo(f,c,1,"valid",r);return d?D(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const B0=M({separableConv2d_:zN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FN(n){const e={x:R(n,"x","sign")};return E.runKernel(Pr,e)}const WN=M({sign_:FN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n){const e={x:R(n,"x","sin","float32")};return E.runKernel(Xr,e)}const H0=M({sin_:VN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n){const e={x:R(n,"x","sinh")};return E.runKernel(Or,e)}const U0=M({sinh_:_N});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AN(n,t,e){const s=R(n,"x","slice1d");return S(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),_t(s,[t],[e])}const qh=M({slice1d_:AN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n,t,e){const s=R(n,"x","slice2d");return S(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),_t(s,t,e)}const Y0=M({slice2d_:XN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n,t,e){const s=R(n,"x","slice3d");return S(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),_t(s,t,e)}const tp=M({slice3d_:ON});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(n,t,e){const s=R(n,"x","slice4d");return S(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),_t(s,t,e)}const zc=M({slice4d_:PN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(n,t=-1){const e=R(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},o={dim:t};return E.runKernel(dc,s,o)}const ep=M({softmax_:ZN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n){S(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return E.runKernel(Ed,t)}const Q0=M({fft_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(n){S(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return E.runKernel(Md,t)}const np=M({ifft_:BN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const o=D(n,[e,t]);s=np(o)}else{const o=[e,2*(t-1)],i=D(kc(n),[e,t]),r=D(bh(n),[e,t]),a=Ro(_t(i,[0,1],[e,t-2]),1),l=L(Ro(_t(r,[0,1],[e,t-2]),1),Et(-1)),c=Oe([i,a],1),u=Oe([r,l],1),d=D(pi(c,u),[o[0],o[1]]);s=np(d)}if(s=kc(s),n.rank===3&&n.shape[0]!==0){const o=s,i=n.shape[0];s=D(s,[i,s.shape[0]/i,s.shape[1]]),o.dispose()}return s}const UN=M({irfft_:HN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(n,t,e=0){const o={x:R(n,"x","split")},i={numOrSizeSplits:t,axis:e};return E.runKernel(uc,o,i)}const dn=M({split_:YN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n,t){S(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let o;if(t!=null&&t<e){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=t,o=_t(n,f,m),e=t}else if(t!=null&&t>e){const f=n.shape.map(m=>m);f[n.shape.length-1]=t-e,o=Oe([n,xe(f)],n.shape.length-1),e=t}else o=n;const i=St(o),r=D(pi(o,i),[s,e]),a=Q0(r),l=Math.floor(e/2)+1,c=kc(a),u=bh(a),d=dn(c,[l,e-l],c.shape.length-1),h=dn(u,[l,e-l],u.shape.length-1),p=o.shape.slice();return p[o.shape.length-1]=l,D(pi(d[0],h[0]),p)}const JN=M({rfft_:QN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jN(n,t){let e=R(n,"a","squaredDifference"),s=R(t,"b","squaredDifference");[e,s]=ee(e,s),gt(e.shape,s.shape);const o={a:e,b:s},i={};return E.runKernel(Hr,o,i)}const qN=M({squaredDifference_:jN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(n,t){const e=R(n,"x","squeeze","string_or_numeric");return D(e,$s(e.shape,t).newShape)}const ua=M({squeeze_:tR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eR(n,t=0){const e=n0(n,"tensors","stack","string_or_numeric");S(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&S(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,o={axis:t};return E.runKernel(jl,s,o)}const ys=M({stack_:eR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nR(n,t=0){const s={x:R(n,"x","step")},o={alpha:t};return E.runKernel(jr,s,o)}const da=M({step_:nR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n,t,e,s,o=0,i=0,r=0,a=0,l=0){const u={x:R(n,"x","stridedSlice","string_or_numeric")},d={begin:t,end:e,strides:s,beginMask:o,endMask:i,ellipsisMask:r,newAxisMask:a,shrinkAxisMask:l};return E.runKernel(Hd,u,d)}const oR=M({stridedSlice_:sR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iR(n){const e={x:R(n,"x","tan","float32")};return E.runKernel(Yr,e)}const rR=M({tan_:iR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(n,t){sd(n);const e=na(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sa(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sp(n,t,e){if(sd(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=na(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sa(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(n,t=1,e=!0){const s=R(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const i={x:s},r={k:t,sorted:e},[a,l]=E.runKernel(Ud,i,r);return{values:a,indices:l}}const lR=M({topk_:aR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(n,t=0,e=1,s,o){if(ps(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new X0(t,e,s,!0,o),r=wt(n,s);for(let a=0;a<r.values.length;a++)r.values[a]=i.nextValue();return r.toTensor()}const J0=M({truncatedNormal_:cR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uR(n,t=0){const e=R(n,"x","unique","string_or_numeric");S(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},o={axis:t},[i,r]=E.runKernel(Qd,s,o);return{values:i,indices:r}}const dR=M({unique_:uR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hR(n,t,e){const s=R(n,"x","unsortedSegmentSum"),o=R(t,"segmentIds","unsortedSegmentSum","int32");S(oi(e),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:o},r={numSegments:e};return E.runKernel(pc,i,r)}const j0=M({unsortedSegmentSum_:hR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,t=0){const e=R(n,"x","unstack","string_or_numeric");S(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},o={axis:t};return E.runKernel(hc,s,o)}const $o=M({unstack_:pR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(n,t=!0,e,s){return E.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q0(n,t){const e=[];for(let i=0;i<t.length;i++)t[i]&&e.push(i);const s=wt(n,"int32"),o=wt([e.length,n.length],"int32");for(let i=0;i<e.length;i++){const r=s.indexToLoc(e[i]),a=i*n.length;o.values.set(r,a)}return o.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(n,t){if(t==null)return n.shape.slice();if($t(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(n,t,e,s){const o=R(n,"x","dropout");if(S(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),S(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof re?o.clone():o;const i=mR(o,e),r=1-t,a=ht(Lc(Q(Mc(i,0,1,"float32",s),r)),r);return L(o,a)}const bR=M({dropout_:gR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(n,t,e,s,o,i="NHWC",r){let a=n;n.rank===3&&(a=D(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=D(t,[1,t.shape[0],t.shape[1],t.shape[2]])),S(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),S(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),S(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=i==="NHWC"?a.shape[3]:a.shape[1],u=i==="NHWC"?l.shape[3]:l.shape[1];S(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),S(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),Xe("conv2dDerFilter",o,r);const d={x:a,dy:l},h={strides:s,pad:o,dataFormat:i,dimRoundingMode:r,filterShape:e};return E.runKernel(yd,d,h)}const op=M({conv2DBackpropFilter_:xR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ip(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return L(n,da(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function rp(n,t){let e=t;const s=de(n.shape,t.shape);return s.length>0&&(e=ut(e,s)),D(e,n.shape)}function ap(n,t,e,s){if(t==="linear")return n;if(t==="relu")return No(n);if(t==="elu")return $c(n);if(t==="relu6")return O0(n);if(t==="prelu")return Zh(n,e);if(t==="leakyrelu")return Wh(n,s);if(t==="sigmoid")return xi(n);throw new Error(`Unknown fused activation ${t}.`)}const lp=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR({x:n,filter:t,strides:e,pad:s,dataFormat:o="NHWC",dilations:i=[1,1],dimRoundingMode:r,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",lp(E.state.gradientDepth,l)===!1){S(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=vo(n,t,e,s,o,i,r);return a!=null&&(C=Q(C,a)),ap(C,l,c,u)}const d=R(n,"x","conv2d","float32"),h=R(t,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=D(d,[1,d.shape[0],d.shape[1],d.shape[2]])),S(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),S(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Xe("fused conv2d",s,r);const m=o==="NHWC"?p.shape[3]:p.shape[1];S(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),S(Ge(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);const g=Ce(p.shape,h.shape,e,i,s,r);let b;a!=null&&(b=R(a,"bias","fused conv2d"),[b]=ee(b,d),o==="NHWC"?gt(g.outShape,b.shape):(S(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),S(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(c!=null){const C=c.shape;if(S(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)S(C[0]===1||C[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${g.outChannels}).`);else if(C.length===3)try{gt(C,g.outShape)}catch{const k=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(k)}x=R(c,"prelu weights","fused conv2d")}const w=(C,v)=>{S(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);const[k,T,N,$]=v,F=ip(C,N,l);S(Co(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const W=Eh(T.shape,F,k,e,s),V=op(T,F,k.shape,e,s),_=[W,V];if($!=null){const X=rp($,F);_.push(X)}return _},y={x:p,filter:h,bias:b,preluActivationWeights:x},I={strides:e,pad:s,dataFormat:o,dilations:i,dimRoundingMode:r,activation:l,leakyreluAlpha:u};return a==null?Ii((v,k,T)=>{let N=E.runKernel(gc,y,I);return T([k,v,N]),f&&(N=D(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:w}})(p,h):Ii((v,k,T,N)=>{let $=E.runKernel(gc,y,I);return N([k,v,$,T]),f&&($=D($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:w}})(p,h,b)}const wR=M({fusedConv2d_:yR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n,t,e,s,o,i=[1,1],r){let a=n;n.rank===3&&(a=D(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=D(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:a,dy:l},u={strides:s,pad:o,dimRoundingMode:r,dilations:i,filterShape:e};return E.runKernel(Td,c,u)}const CR=M({depthwiseConv2dNativeBackpropFilter_:IR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n,t,e,s,o,i=[1,1],r){let a=t,l=!1;t.rank===3&&(l=!0,a=D(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:a,filter:e},u={strides:s,pad:o,dimRoundingMode:r,dilations:i,inputShape:n},d=E.runKernel(Nd,c,u);return l?D(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const kR=M({depthwiseConv2dNativeBackpropInput_:vR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:o,activation:i="linear",preluActivationWeights:r,leakyreluAlpha:a=.2}){if(lp(E.state.gradientDepth,i)===!1){let $=Gt(n,t,e,s);return o!=null&&($=Q($,o)),ap($,i,r,a)}let l=R(n,"a","fused matMul"),c=R(t,"b","fused matMul");[l,c]=ee(l,c);const u=e?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],h=e?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=Z(f),b=Z(m);S(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${s} must match.`);const w=gt(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,p]),y=e?D(l,[g,u,h]):D(l,[g,h,u]),I=s?D(c,[b,p,d]):D(c,[b,d,p]);let C;o!=null&&(C=R(o,"bias","fused matMul"),[C]=ee(C,l),gt(w,C.shape));let v;r!=null&&(v=R(r,"prelu weights","fused matMul"));const k=($,F)=>{const[W,V,_,X]=F,K=ip(D($,_.shape),_,i);let P,B;if(!e&&!s?(P=Gt(K,V,!1,!0),B=Gt(W,K,!0,!1)):!e&&s?(P=Gt(K,V,!1,!1),B=Gt(K,W,!0,!1)):e&&!s?(P=Gt(V,K,!1,!0),B=Gt(W,K,!1,!1)):(P=Gt(V,K,!0,!0),B=Gt(K,W,!0,!0)),o!=null){const U=rp(X,K);return[P,B,U]}else return[P,B]},T={a:y,b:I,bias:C,preluActivationWeights:v},N={transposeA:e,transposeB:s,activation:i,leakyreluAlpha:a};return o==null?Ii((F,W,V)=>{const _=E.runKernel(mc,T,N);return V([F,W,_]),{value:D(_,w),gradFunc:k}})(y,I):Ii((F,W,V,_)=>{const X=E.runKernel(mc,T,N);return _([F,W,X,V]),{value:D(X,w),gradFunc:k}})(y,I,C)}const tb=M({fusedMatMul_:SR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TR(n,t,e,s,o="bilinear",i=0){const r=R(n,"image","cropAndResize"),a=R(t,"boxes","cropAndResize","float32"),l=R(e,"boxInd","cropAndResize","int32"),c=a.shape[0];S(r.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${r.rank}.`),S(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),S(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),S(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),S(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),S(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const u={image:r,boxes:a,boxInd:l},d={method:o,extrapolationValue:i,cropSize:s};return E.runKernel(vd,u,d)}const NR=M({cropAndResize_:TR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(n){const t=R(n,"image","flipLeftRight","float32");S(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return E.runKernel(Dd,e,{})}const $R=M({flipLeftRight_:RR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n){const t=R(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];S(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),S(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const o=new Array(t.rank);return o.fill(1,0,e),o[e]=3,Wn(t,o)}const ER=M({grayscaleToRGB_:GR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n,t,e=0,s=.5){const o=R(n,"image","rotateWithOffset","float32");S(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const i={image:o},r={radians:t,fillValue:e,center:s};return E.runKernel(jd,i,r)}const DR=M({rotateWithOffset_:LR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ci(n,t,e,s,o,i){s==null&&(s=.5),o==null&&(o=Number.NEGATIVE_INFINITY),i==null&&(i=0);const r=n.shape[0];return e=Math.min(e,r),S(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),S(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),S(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),S(t.rank===1,()=>"scores must be a 1D tensor"),S(t.shape[0]===r,()=>`scores has incompatible shape with boxes. Expected ${r}, but was ${t.shape[0]}`),S(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:o,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY){const i=R(n,"boxes","nonMaxSuppression","float32"),r=R(t,"scores","nonMaxSuppression","float32"),a=Ci(i,r,e,s,o);e=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const l={maxOutputSize:e,iouThreshold:s,scoreThreshold:o};return E.runKernel(_d,{boxes:i,scores:r},l)}const zR=M({nonMaxSuppression_:MR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n,t,e){const s=WR(n,t,e),o=s<0?-(s+1):s;n.splice(o,0,t)}function WR(n,t,e){return _R(n,t,e||VR)}function VR(n,t){return n>t?1:n<t?-1:0}function _R(n,t,e){let s=0,o=n.length,i=0,r=!1;for(;s<o;){i=s+(o-s>>>1);const a=e(t,n[i]);a>0?s=i+1:(o=i,r=!a)}return r?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cp(n,t,e,s,o){return hp(n,t,e,s,o,0)}function up(n,t,e,s,o,i){return hp(n,t,e,s,o,0,!1,i,!0)}function dp(n,t,e,s,o,i){return hp(n,t,e,s,o,i,!0)}function hp(n,t,e,s,o,i,r=!1,a=!1,l=!1){const c=[];for(let g=0;g<t.length;g++)t[g]>o&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(eb);const u=i>0?-.5/i:0,d=[],h=[];for(;d.length<e&&c.length>0;){const g=c.pop(),{score:b,boxIndex:x,suppressBeginIndex:w}=g;if(b<o)break;let y=!1;for(let I=d.length-1;I>=w;--I){const C=AR(n,x,d[I]);if(C>=s){y=!0;break}if(g.score=g.score*XR(s,u,C),g.score<=o)break}g.suppressBeginIndex=d.length,y||(g.score===b?(d.push(x),h.push(g.score)):g.score>o&&FR(c,g,eb))}const p=d.length,f=e-p;a&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return r&&(m.selectedScores=h),l&&(m.validOutputs=p),m}function AR(n,t,e){const s=n.subarray(t*4,t*4+4),o=n.subarray(e*4,e*4+4),i=Math.min(s[0],s[2]),r=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(o[0],o[2]),u=Math.min(o[1],o[3]),d=Math.max(o[0],o[2]),h=Math.max(o[1],o[3]),p=(a-i)*(l-r),f=(d-c)*(h-u);if(p<=0||f<=0)return 0;const m=Math.max(i,c),g=Math.max(r,u),b=Math.min(a,d),x=Math.min(l,h),w=Math.max(b-m,0)*Math.max(x-g,0);return w/(p+f-w)}function XR(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function eb(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function OR(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY){const i=R(n,"boxes","nonMaxSuppressionAsync"),r=R(t,"scores","nonMaxSuppressionAsync"),a=Ci(i,r,e,s,o);e=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const l=await Promise.all([i.data(),r.data()]),c=l[0],u=l[1],{selectedIndices:d}=cp(c,u,e,s,o);return i!==n&&i.dispose(),r!==t&&r.dispose(),hn(d,"int32")}const PR=OR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY,i=0){const r=R(n,"boxes","nonMaxSuppression"),a=R(t,"scores","nonMaxSuppression"),l=Ci(r,a,e,s,o,i);e=l.maxOutputSize,s=l.iouThreshold,o=l.scoreThreshold,i=l.softNmsSigma;const c={boxes:r,scores:a},u={maxOutputSize:e,iouThreshold:s,scoreThreshold:o,softNmsSigma:i},d=E.runKernel(Xd,c,u);return{selectedIndices:d[0],selectedScores:d[1]}}const KR=M({nonMaxSuppressionWithScore_:ZR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function BR(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY,i=0){const r=R(n,"boxes","nonMaxSuppressionAsync"),a=R(t,"scores","nonMaxSuppressionAsync"),l=Ci(r,a,e,s,o,i);e=l.maxOutputSize,s=l.iouThreshold,o=l.scoreThreshold,i=l.softNmsSigma;const c=await Promise.all([r.data(),a.data()]),u=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=dp(u,d,e,s,o,i);return r!==n&&r.dispose(),a!==t&&a.dispose(),{selectedIndices:hn(h,"int32"),selectedScores:hn(p)}}const HR=BR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY,i=!1){const r=R(n,"boxes","nonMaxSuppression"),a=R(t,"scores","nonMaxSuppression"),l=Ci(r,a,e,s,o,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,h={boxes:r,scores:a},p={maxOutputSize:c,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:i},f=E.runKernel(Ad,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const YR=M({nonMaxSuppressionPadded_:UR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function QR(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY,i=!1){const r=R(n,"boxes","nonMaxSuppressionAsync"),a=R(t,"scores","nonMaxSuppressionAsync"),l=Ci(r,a,e,s,o,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[h,p]=await Promise.all([r.data(),a.data()]),{selectedIndices:f,validOutputs:m}=up(h,p,c,u,d,i);return r!==n&&r.dispose(),a!==t&&a.dispose(),{selectedIndices:hn(f,"int32"),validOutputs:Et(m,"int32")}}const JR=QR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n,t,e=!1,s=!1){const o=R(n,"images","resizeBilinear");S(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),S(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),S(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=o,r=!1;o.rank===3&&(r=!0,i=D(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:i},l={alignCorners:e,halfPixelCenters:s,size:t},c=E.runKernel(oc,a,l);return r?D(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const nb=M({resizeBilinear_:jR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,t,e=!1,s=!1){const o=R(n,"images","resizeNearestNeighbor");S(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),S(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),S(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),S(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=o,r=!1;o.rank===3&&(r=!0,i=D(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:i},l={alignCorners:e,halfPixelCenters:s,size:t},c=E.runKernel(sc,a,l);return r?D(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const sb=M({resizeNearestNeighbor_:qR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n,t="binary",e=!1,s=.5){const o=R(n,"image","threshold"),i=.2989,r=.587,a=.114,l=o.shape[0]*o.shape[1];let c=L(hn([s]),255),u,d,h,p;if(S(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),S(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),S(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),S(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[u,d,h]=dn(o,[1,1,1],-1);const g=L(u,i),b=L(d,r),x=L(h,a);p=Q(Q(g,b),x)}else p=n;if(t==="otsu"){const g=lS(ot(P0(p),"int32"),an([]),256);c=e$(g,l)}const f=e?wi(p,c):un(p,c);return ot(L(f,255),"int32")}function e$(n,t){let e=hn([-1]),s=hn([0]),o=hn([0]),i,r,a,l,c,u;for(let d=0;d<n.size-1;d++){i=_t(n,0,d+1),r=_t(n,d+1),c=ht(ut(i),t),u=ht(ut(r),t);const h=ut(L(i,ca(0,i.size)));a=ht(h,ut(i));const p=Rc(r.shape,i.size),f=Q(ca(0,r.size),p),m=L(r,f);l=ht(ut(m),ut(r));const g=ft(a,l),b=ft(a,l),x=L(c,u);o=L(L(x,g),b);const w=un(o,s);s=Je(w,o,s),e=Je(w,hn([d]),e)}return e}const n$=M({threshold_:t$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(n,t,e="nearest",s="constant",o=0,i){const r=R(n,"image","transform","float32"),a=R(t,"transforms","transform","float32");S(r.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${r.rank}.`),S(a.rank===2&&(a.shape[0]===r.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),S(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:r,transforms:a},c={interpolation:e,fillMode:s,fillValue:o,outputShape:i};return E.runKernel(Yd,l,c)}const o$=M({transform_:s$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n,t,e){S(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),S(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const s=R(n,"a","bandPart");S(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const o=s.shape,[i,r]=s.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(e<=r))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${r}).`);t<0&&(t=i),e<0&&(e=r);const a=D(ca(0,i,1,"int32"),[-1,1]),l=ca(0,r,1,"int32"),c=ft(a,l),u=xs(wi(c,Et(+t,"int32")),ko(c,Et(-e,"int32"))),d=xe([i,r],s.dtype);return D(ys($o(D(s,[-1,i,r])).map(h=>Je(u,h,d))),o)}const r$=M({bandPart_:i$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n){let t;if(Array.isArray(n)){t=!1,S(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=n[0].shape[0];for(let i=1;i<n.length;++i)S(n[i].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${o})`)}else t=!0,n=dn(n,n.shape[0],0).map(o=>ua(o,[0]));S(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let o=0;o<n.length;++o)e.push(E.tidy(()=>{let i=s[o];if(o>0)for(let r=0;r<o;++r){const a=L(ut(L(e[r],i)),e[r]);i=ft(i,a)}return ht(i,Ec(i,"euclidean"))}));return t?ys(e,0):e}const l$=M({gramSchmidt_:a$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(n,t=!1){if(S(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return ob(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=$o(D(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),o=[],i=[];s.forEach(l=>{const[c,u]=ob(l,t);o.push(c),i.push(u)});const r=D(ys(o,0),n.shape),a=D(ys(i,0),n.shape);return[r,a]}}function ob(n,t=!1){return E.tidy(()=>{S(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let o=F0(e),i=yo(n);const r=sp([[1]],[1,1]);let a=yo(r);const l=e>=s?s:e;for(let c=0;c<l;++c){const u=i,d=a,h=o;[a,i,o]=E.tidy(()=>{const p=_t(i,[c,c],[e-c,1]),f=Ec(p),m=_t(i,[c,c],[1,1]),g=Je(un(m,0),sp([[-1]]),sp([[1]])),b=ft(m,L(g,f)),x=ht(p,b);x.shape[0]===1?a=yo(r):a=Oe([r,_t(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const w=ae(ht(Gt(g,b),f)),y=_t(i,[c,0],[e-c,s]),I=L(w,a),C=kt(a);if(c===0)i=ft(y,Gt(I,Gt(C,y)));else{const T=ft(y,Gt(I,Gt(C,y)));i=Oe([_t(i,[0,0],[c,s]),T],0)}const v=kt(I),k=_t(o,[0,c],[e,o.shape[1]-c]);if(c===0)o=ft(k,Gt(Gt(k,a),v));else{const T=ft(k,Gt(Gt(k,a),v));o=Oe([_t(o,[0,0],[e,c]),T],1)}return[a,i,o]}),It([u,d,h])}return!t&&e>s&&(o=_t(o,[0,0],[e,s]),i=_t(i,[0,0],[s,s])),[o,i]})}const u$=M({qr_:c$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Go={flipLeftRight:$R,grayscaleToRGB:ER,resizeNearestNeighbor:sb,resizeBilinear:nb,rotateWithOffset:DR,cropAndResize:NR,nonMaxSuppression:zR,nonMaxSuppressionAsync:PR,nonMaxSuppressionWithScore:KR,nonMaxSuppressionWithScoreAsync:HR,nonMaxSuppressionPadded:YR,nonMaxSuppressionPaddedAsync:JR,threshold:n$,transform:o$},d$={bandPart:r$,gramSchmidt:l$,qr:u$};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _s extends gi{minimize(t,e=!1,s){const{value:o,grads:i}=this.computeGradients(t,s);if(s!=null){const r=s.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(r)}else this.applyGradients(i);return It(i),e?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return RT(t,e)}dispose(){this.iterations_!=null&&It(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Et(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(_s,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pp extends _s{constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=E.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const i=E.registeredVariables[s],r=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accum_grad`,variable:z(()=>St(i).variable(r))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${s}/accum_var`,variable:z(()=>St(i).variable(r))});const a=Array.isArray(t)?t[o].tensor:t[s];if(a==null)return;const l=this.accumulatedGrads[o].variable,c=this.accumulatedUpdates[o].variable;z(()=>{const u=Q(L(l,this.rho),L(Kt(a),1-this.rho)),d=L(ht(ze(Q(c,this.epsilon)),ze(Q(l,this.epsilon))),a),h=Q(L(c,this.rho),L(Kt(d),1-this.rho));l.assign(u),c.assign(h);const p=Q(L(d,-this.learningRate),i);i.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(It(this.accumulatedGrads.map(t=>t.variable)),It(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}pp.className="Adadelta",H(pp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fp extends _s{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const i=E.registeredVariables[s];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accumulator`,variable:z(()=>Rc(i.shape,this.initialAccumulatorValue).variable(!1))});const r=Array.isArray(t)?t[o].tensor:t[s];if(r==null)return;const a=this.accumulatedGrads[o].variable;z(()=>{const l=Q(a,Kt(r));a.assign(l);const c=Q(L(ht(r,ze(Q(l,E.backend.epsilon()))),-this.learningRate),i);i.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&It(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}fp.className="Adagrad",H(fp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mp extends _s{constructor(t,e,s,o=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],z(()=>{this.accBeta1=Et(e).variable(),this.accBeta2=Et(s).variable()}),o==null&&(this.epsilon=E.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);z(()=>{const s=ft(1,this.accBeta1),o=ft(1,this.accBeta2);e.forEach((i,r)=>{const a=E.registeredVariables[i],l=!1;this.accumulatedFirstMoment[r]==null&&(this.accumulatedFirstMoment[r]={originalName:`${i}/m`,variable:z(()=>St(a).variable(l))}),this.accumulatedSecondMoment[r]==null&&(this.accumulatedSecondMoment[r]={originalName:`${i}/v`,variable:z(()=>St(a).variable(l))});const c=Array.isArray(t)?t[r].tensor:t[i];if(c==null)return;const u=this.accumulatedFirstMoment[r].variable,d=this.accumulatedSecondMoment[r].variable,h=Q(L(u,this.beta1),L(c,1-this.beta1)),p=Q(L(d,this.beta2),L(Kt(c),1-this.beta2)),f=ht(h,s),m=ht(p,o);u.assign(h),d.assign(p);const g=Q(L(ht(f,Q(ze(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&It(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&It(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),z(()=>{this.accBeta1.assign(yi(this.beta1,this.iterations_+1)),this.accBeta2.assign(yi(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}mp.className="Adam",H(mp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gp extends _s{constructor(t,e,s,o=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=o,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],z(()=>{this.iteration=Et(0).variable(),this.accBeta1=Et(e).variable()}),o==null&&(this.epsilon=E.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);z(()=>{const s=ft(1,this.accBeta1),o=ht(-this.learningRate,Q(L(this.iteration,this.decay),1));e.forEach((i,r)=>{const a=E.registeredVariables[i],l=!1;this.accumulatedFirstMoment[r]==null&&(this.accumulatedFirstMoment[r]={originalName:`${i}/m`,variable:St(a).variable(l)}),this.accumulatedWeightedInfNorm[r]==null&&(this.accumulatedWeightedInfNorm[r]={originalName:`${i}/v`,variable:St(a).variable(l)});const c=Array.isArray(t)?t[r].tensor:t[i];if(c==null)return;const u=this.accumulatedFirstMoment[r].variable,d=this.accumulatedWeightedInfNorm[r].variable,h=Q(L(u,this.beta1),L(c,1-this.beta1)),p=L(d,this.beta2),f=Me(c),m=Vs(p,f);u.assign(h),d.assign(m);const g=Q(L(ht(o,s),ht(h,Q(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(Q(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&It(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&It(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}gp.className="Adamax",H(gp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fc extends _s{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const i=Array.isArray(t)?t[o].tensor:t[s];if(i==null)return;const r=E.registeredVariables[s];z(()=>{const a=Q(L(this.c,i),r);r.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=ln(Et(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Fc.className="SGD",H(Fc);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bp extends Fc{constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Et(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const i=E.registeredVariables[s];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${s}/momentum`,variable:z(()=>St(i).variable(!1))});const r=this.accumulations[o].variable,a=Array.isArray(t)?t[o].tensor:t[s];a!=null&&z(()=>{let l;const c=Q(L(this.m,r),a);this.useNesterov?l=Q(L(this.c,Q(a,L(c,this.m))),i):l=Q(L(this.c,c),i),r.assign(c),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&It(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}bp.className="Momentum",H(bp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xp extends _s{constructor(t,e=.9,s=0,o=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,o==null&&(this.epsilon=E.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const i=E.registeredVariables[s],r=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${s}/rms`,variable:z(()=>St(i).variable(r))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${s}/momentum`,variable:z(()=>St(i).variable(r))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${s}/mg`,variable:z(()=>St(i).variable(r))});const a=Array.isArray(t)?t[o].tensor:t[s];if(a==null)return;const l=this.accumulatedMeanSquares[o].variable,c=this.accumulatedMoments[o].variable;z(()=>{const u=Q(L(l,this.decay),L(Kt(a),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[o].variable,h=Q(L(d,this.decay),L(a,1-this.decay)),p=ht(L(a,this.learningRate),ze(ft(u,Q(Kt(h),this.epsilon)))),f=Q(L(c,this.momentum),p);l.assign(u),d.assign(h),c.assign(f);const m=ft(i,f);i.assign(m)}else{const d=Q(L(l,this.decay),L(Kt(a),1-this.decay)),h=Q(L(c,this.momentum),ht(L(a,this.learningRate),ze(Q(d,this.epsilon))));l.assign(d),c.assign(h);const p=ft(i,h);i.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&It(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&It(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&It(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}xp.className="RMSProp",H(xp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eo{static sgd(t){return new Fc(t)}static momentum(t,e,s=!1){return new bp(t,e,s)}static rmsprop(t,e=.9,s=0,o=null,i=!1){return new xp(t,e,s,o,i)}static adam(t=.001,e=.9,s=.999,o=null){return new mp(t,e,s,o)}static adadelta(t=.001,e=.95,s=null){return new pp(t,e,s)}static adamax(t=.002,e=.9,s=.999,o=null,i=0){return new gp(t,e,s,o,i)}static adagrad(t,e=.1){return new fp(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vi={sgd:Eo.sgd,momentum:Eo.momentum,adadelta:Eo.adadelta,adagrad:Eo.adagrad,rmsprop:Eo.rmsprop,adamax:Eo.adamax,adam:Eo.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h$=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function Wc(){return new Promise(n=>h$(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yp(n,t){const e=n[0].length;n.forEach((o,i)=>{S(o.length===e,()=>`Error in concat${e}D: rank of tensors[${i}] must be the same as the rank of the rest (${e})`)}),S(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((o,i)=>{for(let r=0;r<e;r++)S(r===t||o[r]===s[r],()=>`Error in concat${e}D: Shape of tensors[${i}] (${o}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function jn(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Vn;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Vn||(Vn={}));function ib(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let o=1;o<e.length;++o){const i=e[o],r=s[s.length-e.length+o],a=s[r];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${o+n}] = ${i} but shape[${o+n}] = ${a}`)}else s[r]=i}return s}function rb(n){const t={FIRST_DIM_SIZE:Vn.FIRST_DIM_SIZE,VALUE_ROWIDS:Vn.VALUE_ROWIDS,ROW_LENGTHS:Vn.ROW_LENGTHS,ROW_SPLITS:Vn.ROW_SPLITS,ROW_LIMITS:Vn.ROW_LIMITS,ROW_STARTS:Vn.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function ab(n){return n.length===0?0:n[0]===Vn.FIRST_DIM_SIZE?n.length-1:n.length}function lb(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let o=0;o<Math.min(e,s-1);++o){const i=n[o],r=t[o+1];if(i>=0&&r>=0&&i!==1&&i!==r)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${o-n.length}] = ${i} but ragged tensor input.flatValues.shape[${o-n.length}] = ${r}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wp=30;function Vc(n){return n<=wp?n:ld(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ip(n,t,e){const s=e*(typeof n=="number"?n:n[0]),o=t*(typeof n=="number"?n:n[1]);return[s,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ha(n,t,e,s=!0){let o=[];if(s)o=o.concat(t.slice(0)),o.push(n[0]/e),o=o.concat(n.slice(1));else{o=o.concat(n[0]);const i=t.length;for(let r=0;r<i;++r)o=o.concat([n[r+1]/t[r],t[r]]);o=o.concat(n.slice(i+1))}return o}function pa(n,t,e=!0){const s=[];if(e){s.push(t);for(let o=t+1;o<n;++o)o<=2*t?(s.push(o),s.push(o-(t+1))):s.push(o)}else{const o=[],i=[];for(let r=1;r<n;++r)r>=t*2+1||r%2===1?i.push(r):o.push(r);s.push(...o),s.push(0),s.push(...i)}return s}function fa(n,t,e,s=!0){const o=[];s?o.push(n[0]/e):o.push(n[0]*e);for(let i=1;i<n.length;++i)i<=t.length?s?o.push(t[i-1]*n[i]):o.push(n[i]/t[i-1]):o.push(n[i]);return o}function Cp(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function vp(n,t,e){const s=n.slice(0,1);for(let o=0;o<e;++o)s.push(n[o+1]-t[o][0]-t[o][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _c=1.7580993408473768,Ac=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kp=.3275911,Sp=.254829592,Tp=-.284496736,Np=1.421413741,Rp=-1.453152027,$p=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function cb(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function ub(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let o=0;o<n.length;o+=4)e[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:e,imag:s}}function db(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let o=2;o<n.length;o+=4)e[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:e,imag:s}}function Gp(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function hb(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function pb(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let o=0;o<Math.ceil(n/2);o++){const i=(t?2:-2)*Math.PI*(o/n);e[o]=Math.cos(i),s[o]=Math.sin(i)}return{real:e,imag:s}}function fb(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),o=Math.cos(s),i=Math.sin(s);return{real:o,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ep="->",p$=/->/g,mb=",",gb="...";function Lp(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(p$,"").length)/Ep.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Ep}").`);const[s,o]=n.split(Ep);S(s.indexOf(gb)===-1,()=>`The ellipsis notation ("${gb}") is not supported yet.`);const i=s.split(mb),r=i.length;if(t!==r)throw new Error(`Expected ${r} input tensors, received ${t}`);if(r>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let h=0;h<o.length;++h){const p=o[h];if(!i.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let h=0;h<s.length;++h){const p=s[h];a.indexOf(p)===-1&&p!==mb&&a.push(p)}const l=new Array(i.length);for(let h=0;h<r;++h){if(new Set(i[h].split("")).size!==i[h].length)throw new Error(`Found duplicate axes in input component ${i[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let p=0;p<i[h].length;++p)l[h].push(a.indexOf(i[h][p]))}const c=a.length,u=o.length,d=[];for(let h=u;h<c;++h)d.push(h);return{allDims:a,summedDims:d,idDims:l}}function Dp(n,t){let e=new Array(n);e.fill(-1);for(let o=0;o<t.length;++o)e[t[o]]=o;const s=[];for(let o=0;o<n;++o)e[o]===-1&&s.push(o);return e=e.filter(o=>o!==-1),{permutationIndices:e,expandDims:s}}function Mp(n,t,e){const s=new Array(n);for(let o=0;o<e.length;++o){const i=e[o].shape;for(let r=0;r<t[o].length;++r)s[t[o][r]]===void 0?s[t[o][r]]=i[r]:S(s[t[o][r]]===i[r],()=>`Expected dimension ${s[t[o][r]]} at axis ${r} of input shaped ${JSON.stringify(i)}, but got dimension ${i[r]}`)}}function zp(n,t){const e=n,s=[];let o=0;n.length===0&&e.push(-1),o=n.length+1;for(let r=0;r<o;++r)s.push([]);const i=[];for(let r=0;r<e.length;++r){const a=e[r],l=f$(t,a);for(const c of l)i.indexOf(c)===-1&&(s[r].push(c),i.push(c))}return{path:e,steps:s}}function Fp(n){return n.every((t,e)=>t===e)}function f$(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function Wp(n,t,e=0){let s=[];if(typeof t=="number")S(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const o=t.reduce((r,a)=>(a===-1&&(r+=1),r),0);S(o<=1,()=>"There should be only one negative value in split array.");const i=t.indexOf(-1);if(i!==-1){const r=t.reduce((a,l)=>l>0?a+l:a);t[i]=n.shape[e]-r}S(n.shape[e]===t.reduce((r,a)=>r+a),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function xb(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function yb(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wb(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function Ib(n,t){return`size ${n} must be non-negative, not ${t}`}function Cb(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function vb(n,t){const e=Z(n),s=Z(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function kb(n,t){const e=Z(n),s=Z(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vp(){return"segment ids must be >= 0"}function Sb(){return"segment ids are not increasing"}function Tb(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Nb(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rb(n,t){let e=!1,s;for(n<=wp?(s=n,e=!0):s=ld(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=ld(n,s+1);return s}function $b(n,t,e){const s=[],o=n.length;for(let i=0;i<o;i++)i!==t?s.push(n[i]):s.push(e);return s}function _p(n,t,e,s){const o=t.shape.length,i=n.shape.length;if(s!==0&&(s<-o||s>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${s}`);if(s<0&&(s+=o),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let d=0;d<s;++d)if(n.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const r=n.shape[e],a=[];let l=1,c=1,u=1;for(let d=0;d<s;++d)a.push(n.shape[d]),l*=n.shape[d];for(let d=s;d<e;d++)a.push(n.shape[d]),c*=n.shape[d];for(let d=s;d<o;d++)a.push(t.shape[d]);for(let d=e+1;d<i;d++)a.push(n.shape[d]),u*=n.shape[d];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:r,outputShape:a}}const m$=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:_p,computeOutShape:$b,segOpComputeOptimalWindowSize:Rb},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lo(n){try{return n.map(t=>Ds(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Gb(n){return n.map(t=>Ls(t))}const g$=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Sp,ERF_A2:Tp,ERF_A3:Np,ERF_A4:Rp,ERF_A5:$p,ERF_P:kp,PARALLELIZE_THRESHOLD:wp,get RowPartitionType(){return Vn},SELU_SCALE:Ac,SELU_SCALEALPHA:_c,applyActivation:ap,assertAndGetBroadcastShape:gt,assertAxesAreInnerMostDims:ve,assertParamsConsistent:yp,assignToTypedArray:hb,axesAreInnerMostDims:zh,calculateShapes:oa,checkEinsumDimSizes:Mp,checkPadOnDimRoundingMode:Xe,combineLocations:M0,combineRaggedTensorToTensorShapes:ib,complexWithEvenIndex:ub,complexWithOddIndex:db,computeConv2DInfo:Ce,computeConv3DInfo:Fs,computeDefaultPad:Th,computeDilation2DInfo:ra,computeOptimalWindowSize:Vc,computeOutAndReduceShapes:be,computeOutShape:jn,computePool2DInfo:Cn,computePool3DInfo:ms,convertConv2DDataFormat:gs,decodeEinsumEquation:Lp,eitherStridesOrDilationsAreOne:Ge,expandShapeToKeepDim:le,exponent:fb,exponents:pb,fromStringArrayToUint8:Gb,fromUint8ToStringArray:Lo,getAxesPermutation:Jt,getBroadcastDims:mi,getComplexWithIndex:Gp,getEinsumComputePath:zp,getEinsumPermutation:Dp,getFusedBiasGradient:rp,getFusedDyActivation:ip,getImageCenter:Ip,getInnerMostAxes:ne,getPermuted:pa,getRaggedRank:ab,getReductionAxes:de,getReshaped:ha,getReshapedPermuted:fa,getRowPartitionTypesHelper:rb,getSliceBeginCoords:Cp,getSliceSize:vp,getSparseFillEmptyRowsIndicesDenseShapeMismatch:bb,getSparseFillEmptyRowsNegativeIndexErrorMessage:xb,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:yb,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Cb,getSparseReshapeInputOutputMismatchErrorMessage:kb,getSparseReshapeInputOutputMultipleErrorMessage:vb,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:wb,getSparseReshapeNegativeOutputDimErrorMessage:Ib,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:Nb,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Vp,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Sb,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Tb,getUndoAxesPermutation:Ws,isIdentityPermutation:Fp,log:rv,mergeRealAndImagArrays:ws,prepareAndValidate:xh,prepareSplitSize:Wp,segment_util:m$,shouldFuse:lp,slice_util:mk,splitRealAndImagArrays:cb,tupleValuesAreOne:Co,upcastType:Qe,validateDefaultValueShape:lb,validateInput:uk,validateUpdateShape:g0,warn:sn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eb={kernelName:ml,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(n,da(ot(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b$={kernelName:or,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Kt(ot(e,"float32")),o=ze(ft(Et(1),s));return ae(ht(n,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x$={kernelName:ir,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=ze(ft(Kt(ot(e,"float32")),1));return ht(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y$={kernelName:ai,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=gt(e.shape,s.shape);return{a:()=>{let a=n;const l=de(e.shape,o);return l.length>0&&(a=ut(a,l)),D(a,e.shape)},b:()=>{let a=n;const l=de(s.shape,o);return l.length>0&&(a=ut(a,l)),D(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w$={kernelName:hd,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,o)=>{e[o]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$={kernelName:gl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>St(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C$={kernelName:bl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>St(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v$={kernelName:rr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ht(n,ze(ft(Et(1),Kt(ot(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k$={kernelName:ar,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=ze(Q(Et(1),Kt(ot(e,"float32"))));return ht(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S$={kernelName:ur,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=gt(e.shape,s.shape);return{a:()=>{const a=Q(Kt(e),Kt(s));let l=L(n,ht(s,a));const c=de(e.shape,o);return c.length>0&&(l=ut(l,c)),D(l,e.shape)},b:()=>{const a=Q(Kt(e),Kt(s));let l=ae(L(n,ht(e,a)));const c=de(s.shape,o);return c.length>0&&(l=ut(l,c)),D(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T$={kernelName:lr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ht(n,Q(Kt(ot(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N$={kernelName:cr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ht(n,ft(Et(1),Kt(ot(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R$(n,t,e,s,o,i){const r=R(n,"dy","avgPool3dGrad"),a=R(t,"input","avgPool3dGrad");let l=r,c=a,u=!1;a.rank===4&&(u=!0,l=D(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]),c=D(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),S(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),S(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Xe("avgPool3dGrad",o,i);const d={dy:l,input:c},h={filterSize:e,strides:s,pad:o,dimRoundingMode:i},p=E.runKernel(gd,d,h);return u?D(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const $$=M({avgPool3dGrad_:R$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G$={kernelName:yl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:o,strides:i,pad:r,dimRoundingMode:a}=e;return{x:()=>$$(n,s,o,i,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(n,t,e,s,o){const i=R(n,"dy","avgPoolGrad"),r=R(t,"input","avgPoolGrad");S(r.rank===i.rank,()=>`Rank of input (${r.rank}) does not match rank of dy (${i.rank})`);let a=r,l=i,c=!1;r.rank===3&&(c=!0,a=D(r,[1,r.shape[0],r.shape[1],r.shape[2]]),l=D(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),S(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},d={filterSize:e,strides:s,pad:o},h=E.runKernel(md,u,d);return c?D(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const L$=M({avgPoolGrad_:E$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D$={kernelName:xl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:o,strides:i,pad:r}=e;return{x:()=>L$(n,s,o,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M$={kernelName:wl,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,o]=t,{transposeA:i,transposeB:r}=e;return!i&&!r?{a:()=>Gt(n,o,!1,!0),b:()=>Gt(s,n,!0,!1)}:!i&&r?{a:()=>Gt(n,o,!1,!1),b:()=>Gt(n,s,!0,!1)}:i&&!r?{a:()=>Gt(o,n,!1,!0),b:()=>Gt(s,n,!1,!1)}:{a:()=>Gt(o,n,!0,!0),b:()=>Gt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z$={kernelName:Il,gradFunc:(n,t,e)=>{const{blockShape:s,crops:o}=e;return{x:()=>Ph(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F$={kernelName:ov,gradFunc:(n,t,e)=>{const s=e,o=s.inputShape,i=s.shape,r=Array.from(i);for(let l=o.length-1;l>=0;l--)if(o[l]===i[l])r[l]=1;else if(o[l]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${i}].`);const a=[];for(let l=0;l<r.length;l++)r[l]>1&&a.push(l);return{x:()=>ut(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W$={kernelName:dr,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V$={kernelName:hr,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _$={kernelName:pr,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:o,clipValueMax:i}=e;return{x:()=>Je(xs(ko(s,o),wi(s,i)),n,St(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A$={kernelName:Cl,inputsToSave:["x"],gradFunc:Eb.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X$={kernelName:vl,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(l=>l.shape),{axis:o}=e,i=yt(o,t[0].shape)[0],r=s.map(l=>l[i]);return dn(n,r,i).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O$={kernelName:kl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,o]=t,{dilations:i,strides:r,pad:a,dataFormat:l}=e;return S(Co(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>Eh(s.shape,n,o,r,a,l),filter:()=>op(s,n,o.shape,r,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P$={kernelName:Sl,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,o]=t,{strides:i,pad:r,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>vo(n,o,i,r,a,1,l),filter:()=>op(n,s,o.shape,i,r,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,t,e,s,o){let i=n;n.rank===4&&(i=D(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let r=t;r.rank===4&&(r=D(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),S(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),S(r.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${r.shape}.`),S(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),S(i.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${e[3]}.`),S(r.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${r.shape[4]}) must match output depth for filter (${e[4]}).`);const a={x:i,dy:r},l={strides:s,pad:o,filterShape:e};return E.runKernel(wd,a,l)}const K$=M({conv3DBackpropFilter_:Z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B$={kernelName:Tl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:o,pad:i}=e;S(Co(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[r,a]=t;return{x:()=>G0(r.shape,n,a,o,i),filter:()=>K$(r,n,a.shape,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H$={kernelName:fr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(ae(H0(ot(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U$={kernelName:mr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(U0(ot(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y$={kernelName:Nl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:o,exclusive:i,reverse:r}=e;return{x:()=>{const a=Jt([o],s.rank);let l=L0(n,o,i,!r);return a!=null&&(l=kt(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q$={kernelName:Rl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:o,pad:i,dimRoundingMode:r}=e,a=s??[1,1];S(Co(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=t;return S(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),S(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),S(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),S(Ge(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),Xe("depthwiseConv2d",i,r),{x:()=>kR(l.shape,n,c,o,i,a,r),filter:()=>CR(l,n,c.shape,o,i,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J$={kernelName:$l,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,o]=t,i={x:s,filter:o,dy:n},r={x:s,filter:o,dy:n};return{x:()=>E.runKernel(Rd,i,e),filter:()=>E.runKernel($d,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j$={kernelName:br,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>E.runKernel(Gd,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q$={kernelName:xr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=L(bs(ae(Kt(e))),2/Math.sqrt(Math.PI));return{x:()=>L(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tG={kernelName:yr,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG={kernelName:El,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>D(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG={kernelName:wr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(n,bs(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sG={kernelName:Ir,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oG={kernelName:Cr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=gt(e.shape,s.shape);return{a:()=>{const a=ht(n,ot(s,"float32")),l=de(e.shape,o);return l.length>0?D(ut(a,l),e.shape):a},b:()=>{let a=L(n,ot(e,"float32"));const l=de(s.shape,o);l.length>0&&(a=D(ut(a,l),s.shape));const c=Kt(s);return ae(ht(a,ot(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG={kernelName:Ll,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[o,i,r,a]=t,l=a??Et(1),c=de(i.shape,o.shape),u=[];if(i.rank===1){for(let y=0;y<o.shape.length-1;++y)u.push(o.shape[y]);u.push(1)}const d=ft(o,i),h=L(n,l),p=Z0(Q(r,Et(s))),f=L(L(L(p,p),p),Et(-.5));return{x:()=>i.rank===1?D(L(L(n,Wn(D(p,[1,1,1,i.shape[0]]),u)),l),o.shape):D(L(L(n,p),l),o.shape),mean:()=>{let y=L(L(p,Et(-1)),h);return i.rank===1&&(y=ut(y,c)),D(y,i.shape)},variance:()=>{let y=L(L(f,d),h);return i.rank===1&&(y=ut(y,c)),D(y,i.shape)},scale:()=>{const y=L(d,p);let I=L(n,y);return i.rank===1&&(I=ut(I,c)),D(I,i.shape)},offset:()=>{let y=n;return i.rank===1&&(y=ut(y,c)),D(y,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rG={kernelName:Dl,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,o]=t,{axis:i}=e,r=yt(i,s.shape)[0];return{x:()=>{const l=s.shape,c=o.size,u=l.slice(0,r),d=u.length,h=l.slice(i,l.length).slice(1),p=h.length,f=Lb(0,d),m=Lb(d+1,d+1+p),g=Db([u,[c],h]),b=D(n,g),x=D(o,[c]),w=Db([[d],f,m]),y=kt(b,w);let I=j0(y,x,s.shape[r]);const C=Ws(w);return I=kt(I,C),I},indices:()=>o}}};function Lb(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function Db(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG={kernelName:vr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>St(e),b:()=>St(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG={kernelName:kr,gradFunc:n=>({x:()=>ot(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cG={kernelName:Sr,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uG={kernelName:Tr,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dG={kernelName:Nr,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hG={kernelName:zl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:o}=e,i=un(s,0);return{x:()=>Je(i,n,L(n,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pG={kernelName:$r,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ht(n,Q(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fG={kernelName:Rr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ht(n,ot(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mG={kernelName:iv,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:o}=e;return{logits:()=>{const r=bs(s);return ft(n,L(ut(n,o,!0),r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(n,t,e,s=5,o=1,i=1,r=.5){const a={x:n,y:t,dy:e},l={depthRadius:s,bias:o,alpha:i,beta:r};return E.runKernel(Fd,a,l)}const bG=M({localResponseNormalizationBackprop_:gG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xG={kernelName:Xl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,o]=t,{depthRadius:i,bias:r,alpha:a,beta:l}=e;return{x:()=>bG(s,o,n,i,r,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mb(n,t,e,s){return t.rank<e.rank&&(t=D(t,le(t.shape,s))),n.rank<e.rank&&(n=D(n,le(n.shape,s))),{x:()=>L(n,ot(Qn(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zb={kernelName:Ol,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:o}=s,i=t[0],r=t[1],a=yt(o,i.shape),l=Mb(n,r,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yG={kernelName:Gr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>L(n,ot(ko(e,s),"float32")),b:()=>L(n,ot(W0(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wG(n,t,e,s,o,i,r){const a=R(n,"dy","maxPool3dGrad"),l=R(t,"input","maxPool3dGrad"),c=R(e,"output","maxPool3dGrad");let u=a,d=l,h=c,p=!1;l.rank===4&&(p=!0,u=D(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),d=D(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=D(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),S(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),S(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),S(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),Xe("maxPool3dGrad",i,r);const f={dy:u,input:d,output:h},m={filterSize:s,strides:o,pad:i,dimRoundingMode:r},g=E.runKernel(Vd,f,m);return p?D(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const IG=M({maxPool3dGrad_:wG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CG={kernelName:Zl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,o]=t,{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=e;return{x:()=>IG(n,s,o,i,r,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(n,t,e,s,o,i,r){const a=R(n,"dy","maxPoolGrad"),l=R(t,"input","maxPoolGrad"),c=R(e,"output","maxPoolGrad");S(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),S(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),S(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Xe("maxPoolGrad",i,r);const u={dy:a,input:l,output:c},d={filterSize:s,strides:o,pad:i,dimRoundingMode:r};return E.runKernel(Wd,u,d)}const kG=M({maxPoolGrad_:vG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SG={kernelName:Pl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,o]=t,{filterSize:i,strides:r,pad:a}=e;return{x:()=>kG(n,s,o,i,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG={kernelName:Kl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:o}=e,i=yt(o,s.shape),a=be(s.shape,i)[1],l=Z(a);return{x:()=>{const u=s.shape.slice();i.forEach(p=>{u[p]=1});const d=D(n,u);return ht(L(d,So(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NG={kernelName:Bl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:o}=s,[i,r]=t,a=yt(o,i.shape),l=Mb(n,r,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG={kernelName:Er,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>L(n,ot(wi(e,s),"float32")),b:()=>L(n,ot(un(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $G={kernelName:Hl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:o}=e,i=o.map(r=>r[0]);return{x:()=>_t(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GG={kernelName:Lr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=gt(e.shape,s.shape);return{a:()=>{const a=de(e.shape,o);return a.length>0?D(ut(n,a),e.shape):n},b:()=>{const a=L(n,ae(Lc(ht(e,s)))),l=de(s.shape,o);return l.length>0?D(ut(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG={kernelName:Dr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=gt(e.shape,s.shape);return{a:()=>{const a=L(n,ot(s,"float32")),l=de(e.shape,o);return l.length>0?D(ut(a,l),e.shape):a},b:()=>{const a=L(n,ot(e,"float32")),l=de(s.shape,o);return l.length>0?D(ut(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG={kernelName:Ul,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG={kernelName:Jl,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>xe(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MG={kernelName:Ql,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG={kernelName:jl,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return $o(n,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fb={kernelName:ql,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:o}=e,i=o.map(r=>r[0]);return{x:()=>_t(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FG={kernelName:Mr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,o]=t,i=e,r=s,a=gt(i.shape,r.shape);return{a:()=>{const u=ot(r,"float32");let d=L(n,L(u,yi(i,ft(u,Et(1)))));const h=de(i.shape,a);return h.length>0&&(d=ut(d,h)),D(d,i.shape)},b:()=>{const u=un(i,0),d=Je(u,Jn(i),St(i));let h=L(n,L(o,d));const p=de(r.shape,a);return p.length>0&&(h=ut(h,p)),D(h,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WG={kernelName:tc,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,o=un(e,0);return{x:()=>Je(o,n,L(n,s)),alpha:()=>{let i=Je(o,St(n),L(n,e));const r=de(s.shape,n.shape);return r.length>0&&(i=ut(i,r)),D(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VG(n,t,e){const s=n.shape.slice();s[e]=1;const o=D(t,s),i=Dh(n,e,!0,!1),r=Dh(n,e,!0,!0),a=L(i,r);return L(o,a)}function _G(n,t,e){const s=n.shape.length,o=s-e.length,i=Jt(e,s);let r=n;i!=null&&(r=kt(n,i));const a=r.shape.slice(),c=a.splice(s-e.length,e.length).reduce((h,p)=>h*p,1);a.push(c);const u=r.reshape(a);let d=VG(u,t,o);if(d=d.reshape(r.shape),i!=null){const h=Ws(i);d=kt(d,h)}return d}const AG={kernelName:ec,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:o}=e;let i=[];return o==null?i=s.shape.map((r,a)=>a):typeof o=="number"?i=[o]:i=o,{x:()=>_G(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XG={kernelName:gr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=gt(e.shape,s.shape);return{a:()=>{const a=ht(n,ot(s,"float32")),l=de(e.shape,o);return l.length>0?D(ut(a,l),e.shape):a},b:()=>{let a=L(n,ot(e,"float32"));const l=de(s.shape,o);l.length>0&&(a=D(ut(a,l),s.shape));const c=Kt(s);return ae(ht(a,ot(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG={kernelName:zr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ht(n,ae(Kt(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PG={kernelName:Wr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=L(wi(e,6),da(e));return{x:()=>L(n,ot(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG={kernelName:Fr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(n,ot(da(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG={kernelName:nc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>D(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BG={kernelName:oc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,o={dy:n,images:s};return{images:()=>E.runKernel(Kd,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG={kernelName:sc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,o={dy:n,images:s};return{images:()=>E.runKernel(Zd,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UG={kernelName:ic,gradFunc:(n,t,e)=>{const{dims:s}=e,o=yt(s,n.shape);return{x:()=>Ro(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YG={kernelName:Vr,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QG={kernelName:_r,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ae(ht(n,L(yi(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JG={kernelName:rc,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>ot(St(e),"float32"),t:()=>L(n,ot(e,n.dtype)),e:()=>L(n,ot(Vh(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG={kernelName:Ar,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=un(e,Et(0)),o=Et(_c),i=Et(Ac),r=L(n,i),a=L(L(n,o),bs(ot(e,"float32")));return Je(s,r,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qG={kernelName:Zr,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(n,L(e,ft(Et(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tE={kernelName:Pr,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eE={kernelName:Xr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(Lh(ot(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nE={kernelName:Or,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(E0(ot(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sE={kernelName:ac,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:o,size:i}=e,r=s.shape,[a,l]=Sc(s,o,i),c=[];for(let u=0;u<n.rank;u++)c.push([a[u],r[u]-a[u]-l[u]]);return{x:()=>Oh(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oE={kernelName:dc,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:o}=e,i=!0,r=L(n,s);return{logits:()=>ft(r,L(ut(r,[o],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iE={kernelName:Kr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(n,xi(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wb={kernelName:cc,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:o}=e;return{x:()=>Gh(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vb={kernelName:uc,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>Oe(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rE={kernelName:Br,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ht(n,L(ze(ot(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aE={kernelName:Bd,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(n,L(ot(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lE={kernelName:Hr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=Et(2);return{a:()=>L(n,L(o,ft(e,s))),b:()=>L(n,L(o,ft(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cE={kernelName:jr,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uE={kernelName:Ur,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=gt(e.shape,s.shape);return{a:()=>{let a=n;const l=de(e.shape,o);return l.length>0&&(a=ut(a,l)),D(a,e.shape)},b:()=>{let a=n;const l=de(s.shape,o);return l.length>0&&(a=ut(a,l)),D(ae(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dE={kernelName:lc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,o=s.shape.slice(),{axis:i}=e;yt(i,s.shape).forEach(c=>{o[c]=1});const a=D(n,o),l=L(a,So(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hE={kernelName:Yr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ht(n,Kt(Lh(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pE={kernelName:Qr,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>L(ft(Et(1),Kt(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fE={kernelName:Jr,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:o}=e;return{x:()=>{let r=St(s);if(s.rank===1)for(let a=0;a<o[0];++a)r=Q(r,_t(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)r=Q(r,_t(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let c=0;c<o[2];++c)r=Q(r,_t(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let c=0;c<o[2];++c)for(let u=0;u<o[3];++u)r=Q(r,_t(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return r}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mE={kernelName:li,gradFunc:(n,t,e)=>{const s=e,{perm:o}=s,i=Ws(o);return{x:()=>kt(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE={kernelName:hc,gradFunc:(n,t,e)=>{const s=e,{axis:o}=s;return{value:()=>ys(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE={kernelName:pc,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>xE(n,e)}}};function xE(n,t){const e=Vs(t,St(t)),s=Fh(n,e);let o=ko(t,Et(0,"int32"));const i=s.rank-o.rank;for(let a=0;a<i;++a)o=je(o,a+1);o=xs(o,So(s.shape,"bool"));const r=St(s);return Je(o,s,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yE={kernelName:fc,gradFunc:n=>({x:()=>St(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wE=[Eb,b$,x$,y$,w$,I$,C$,v$,k$,S$,T$,N$,G$,D$,M$,z$,F$,W$,V$,_$,A$,X$,P$,O$,B$,H$,U$,Y$,Q$,J$,XG,j$,q$,tG,eG,nG,oG,sG,iG,rG,aG,lG,cG,uG,dG,hG,pG,fG,mG,xG,zb,zb,yG,CG,SG,TG,NG,RG,$G,GG,EG,LG,DG,MG,zG,Fb,Fb,FG,WG,AG,OG,PG,ZG,KG,BG,HG,UG,YG,QG,JG,jG,qG,tE,eE,nE,sE,oE,iE,Wb,Wb,Vb,Vb,rE,lE,aE,cE,uE,dE,hE,pE,fE,mE,gE,bE,yE];for(const n of wE)av(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.abs=function(){return this.throwIfDisposed(),Me(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.acos=function(){return this.throwIfDisposed(),Ck(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.acosh=function(){return this.throwIfDisposed(),kk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.add=function(n){return this.throwIfDisposed(),Q(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.all=function(n,t){return this.throwIfDisposed(),N0(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.any=function(n,t){return this.throwIfDisposed(),Sh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.argMax=function(n){return this.throwIfDisposed(),ia(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.argMin=function(n){return this.throwIfDisposed(),$k(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.asScalar=function(){return this.throwIfDisposed(),S(this.size===1,()=>"The array must have only 1 element."),D(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.asType=function(n){return this.throwIfDisposed(),ot(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.as1D=function(){return this.throwIfDisposed(),D(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.as2D=function(n,t){return this.throwIfDisposed(),D(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),D(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),D(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.as5D=function(n,t,e,s,o){return this.throwIfDisposed(),D(this,[n,t,e,s,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.asin=function(){return this.throwIfDisposed(),Ek(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.asinh=function(){return this.throwIfDisposed(),Dk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.atan=function(){return this.throwIfDisposed(),zk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.atan2=function(n){return this.throwIfDisposed(),Wk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.atanh=function(){return this.throwIfDisposed(),_k(this)},O().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),Rh(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),Gh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.batchNorm=function(n,t,e,s,o){return this.throwIfDisposed(),Nc(this,n,t,e,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.broadcastTo=function(n){return this.throwIfDisposed(),aa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.cast=function(n){return this.throwIfDisposed(),ot(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.ceil=function(){return this.throwIfDisposed(),dS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),cn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof re&&(n=[n]),Oe([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.conv1d=function(n,t,e,s,o,i){return this.throwIfDisposed(),R0(this,n,t,e,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.conv2dTranspose=function(n,t,e,s,o){return this.throwIfDisposed(),$0(this,n,t,e,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.conv2d=function(n,t,e,s,o,i){return this.throwIfDisposed(),vo(this,n,t,e,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.cos=function(){return this.throwIfDisposed(),Lh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.cosh=function(){return this.throwIfDisposed(),E0(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),Dh(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),L0(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),FS(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.depthwiseConv2d=function(n,t,e,s,o,i){return this.throwIfDisposed(),Mh(this,n,t,e,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.dilation2d=function(n,t,e,s,o){return this.throwIfDisposed(),_S(this,n,t,e,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.divNoNan=function(n){return this.throwIfDisposed(),ZS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.div=function(n){return this.throwIfDisposed(),ht(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.dot=function(n){return this.throwIfDisposed(),BS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.elu=function(){return this.throwIfDisposed(),$c(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.equal=function(n){return this.throwIfDisposed(),Qn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.erf=function(){return this.throwIfDisposed(),YS(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),oT(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.exp=function(){return this.throwIfDisposed(),bs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.expandDims=function(n){return this.throwIfDisposed(),je(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.expm1=function(){return this.throwIfDisposed(),lT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.fft=function(){return this.throwIfDisposed(),Q0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.flatten=function(){return this.throwIfDisposed(),D(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.floor=function(){return this.throwIfDisposed(),Lc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.floorDiv=function(n){return this.throwIfDisposed(),T0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.gather=function(n,t){return this.throwIfDisposed(),Fh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.greaterEqual=function(n){return this.throwIfDisposed(),ko(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.greater=function(n){return this.throwIfDisposed(),un(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.ifft=function(){return this.throwIfDisposed(),np(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.irfft=function(){return this.throwIfDisposed(),UN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.isFinite=function(){return this.throwIfDisposed(),gT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.isInf=function(){return this.throwIfDisposed(),xT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.isNaN=function(){return this.throwIfDisposed(),wT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Wh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.lessEqual=function(n){return this.throwIfDisposed(),wi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.less=function(n){return this.throwIfDisposed(),W0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),ST(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.logSigmoid=function(){return this.throwIfDisposed(),ET(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.logSoftmax=function(n){return this.throwIfDisposed(),_0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),zT(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.log=function(){return this.throwIfDisposed(),Jn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.log1p=function(){return this.throwIfDisposed(),V0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.logicalAnd=function(n){return this.throwIfDisposed(),xs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.logicalNot=function(){return this.throwIfDisposed(),Vh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.logicalOr=function(n){return this.throwIfDisposed(),A0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.logicalXor=function(n){return this.throwIfDisposed(),AT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Gt(this,n,t,e)},O().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),_h(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.max=function(n,t){return this.throwIfDisposed(),Fn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.maximum=function(n){return this.throwIfDisposed(),Vs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.mean=function(n,t){return this.throwIfDisposed(),ce(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.min=function(n,t){return this.throwIfDisposed(),Gc(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.minimum=function(n){return this.throwIfDisposed(),Ah(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),UT(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.mod=function(n){return this.throwIfDisposed(),QT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.mul=function(n){return this.throwIfDisposed(),L(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.neg=function(){return this.throwIfDisposed(),ae(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.norm=function(n,t,e){return this.throwIfDisposed(),Ec(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.notEqual=function(n){return this.throwIfDisposed(),Dc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),f0(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.onesLike=function(){return this.throwIfDisposed(),vn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.pad=function(n,t){return this.throwIfDisposed(),Oh(this,n,t)},O().prototype.pool=function(n,t,e,s,o,i){return this.throwIfDisposed(),iN(this,n,t,e,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.pow=function(n){return this.throwIfDisposed(),yi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.prelu=function(n){return this.throwIfDisposed(),Zh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.prod=function(n,t){return this.throwIfDisposed(),lN(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.reciprocal=function(){return this.throwIfDisposed(),RN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.relu=function(){return this.throwIfDisposed(),No(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.relu6=function(){return this.throwIfDisposed(),O0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.reshapeAs=function(n){return this.throwIfDisposed(),D(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.reshape=function(n){return this.throwIfDisposed(),D(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),nb(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),sb(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.reverse=function(n){return this.throwIfDisposed(),Ro(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.rfft=function(){return this.throwIfDisposed(),JN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.round=function(){return this.throwIfDisposed(),P0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.rsqrt=function(){return this.throwIfDisposed(),Z0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.selu=function(){return this.throwIfDisposed(),K0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.separableConv2d=function(n,t,e,s,o,i){return this.throwIfDisposed(),B0(this,n,t,e,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.sigmoid=function(){return this.throwIfDisposed(),xi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.sign=function(){return this.throwIfDisposed(),WN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.sin=function(){return this.throwIfDisposed(),H0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.sinh=function(){return this.throwIfDisposed(),U0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.slice=function(n,t){return this.throwIfDisposed(),_t(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.softmax=function(n){return this.throwIfDisposed(),ep(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.softplus=function(){return this.throwIfDisposed(),la(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Ph(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.split=function(n,t){return this.throwIfDisposed(),dn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.sqrt=function(){return this.throwIfDisposed(),ze(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.square=function(){return this.throwIfDisposed(),Kt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.squaredDifference=function(n){return this.throwIfDisposed(),qN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.squeeze=function(n){return this.throwIfDisposed(),ua(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof re?[this,n]:[this,...n];return ys(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.step=function(n){return this.throwIfDisposed(),da(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.stridedSlice=function(n,t,e,s,o,i,r,a){return this.throwIfDisposed(),oR(this,n,t,e,s,o,i,r,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.sub=function(n){return this.throwIfDisposed(),ft(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.sum=function(n,t){return this.throwIfDisposed(),ut(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.tan=function(){return this.throwIfDisposed(),rR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.tanh=function(){return this.throwIfDisposed(),$h(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.tile=function(n){return this.throwIfDisposed(),Wn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.toBool=function(){return this.throwIfDisposed(),ot(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.toFloat=function(){return this.throwIfDisposed(),ot(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.toInt=function(){return this.throwIfDisposed(),ot(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.topk=function(n,t){return this.throwIfDisposed(),lR(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.transpose=function(n){return this.throwIfDisposed(),kt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.unique=function(n){return this.throwIfDisposed(),dR(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),j0(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.unstack=function(n){return this.throwIfDisposed(),$o(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.where=function(n,t){return this.throwIfDisposed(),Je(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */O().prototype.zerosLike=function(){return this.throwIfDisposed(),St(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qn extends Error{constructor(t){super(t),Object.setPrototypeOf(this,qn.prototype)}}class kn extends Error{constructor(t){super(t),Object.setPrototypeOf(this,kn.prototype)}}class G extends Error{constructor(t){super(t),Object.setPrototypeOf(this,G.prototype)}}class bt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,bt.prototype)}}class Ap extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ap.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _b{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Do(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function ts(n,t){if(!n)throw new Ap(t)}function Ab(n,t){let e=0;for(const s of n)s===t&&e++;return e}function Pe(n){return n.length===1?n[0]:n}function Bt(n){return Array.isArray(n)?n:[n]}function Is(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Mo(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Sn={};function Xp(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function Op(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>Op(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:Op(s))}}}function ma(n,t={},e={},s="object",o=!1){if(typeof n=="string"){const i=n;let r;if(i in e)r=e[i];else if(i in Sn)r=Sn[i];else if(r=t[i],r==null)throw new G(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return r}else{const i=n;if(i.className==null||i.config==null)throw new G(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const r=i.className;let a,l;if(r in e?[a,l]=e[r]:r in Sn?[a,l]=Sn.className:r in t&&([a,l]=t[r]),a==null)throw new G(`Unknown ${s}: ${r}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const p of Object.keys(Sn))c[p]=Sn[p];for(const p of Object.keys(e))c[p]=e[p];const u=i.config;u.customObjects=c;const d=Object.assign({},Sn);for(const p of Object.keys(e))Sn[p]=e[p];Op(i.config);const h=l(a,i.config,e,o);return Sn=Object.assign({},d),h}else{const c=Object.assign({},Sn);for(const d of Object.keys(e))Sn[d]=e[d];const u=new a(i.config);return Sn=Object.assign({},c),u}}}function IE(n,t){return n<t?-1:n>t?1:0}function Xc(n,t){return-1*IE(n,t)}function As(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function CE(n){if(n==null)throw new G(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function zo(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new G(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function Pp(n,t,e=0,s=1/0){return ts(e>=0),ts(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(o=>typeof o===t)}function ye(n,t){Array.isArray(n)?(S(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>ye(e,`element ${s+1} of ${t}`))):S(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${Xb(n)}.`)}function Xb(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>Xb(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function vE(n,t,e){let s=e!=null?e():Ae(),o;return(...r)=>{const a=e!=null?e():Ae();return a-s<t||(s=a,o=n(...r)),o}}function Ob(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let kE=0;function Pb(){return kE++}const Oc={};function Pc(n=""){return n in Oc||(Oc[n]=0),Oc[n]+=1,n+Oc[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const SE=["channelsFirst","channelsLast"],TE=["nearest","bilinear"],NE=["valid","same","causal"],RE=["max","avg"],$E=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ki=new Map;function se(n){zo(SE,"DataFormat",n)}function GE(n){zo(TE,"InterpolationFormat",n)}function pn(n){zo(NE,"PaddingMode",n)}function Zb(n){zo(RE,"PoolMode",n)}const ga=[],Kb="/";function Fo(n,t){ga.push(n);try{const e=t();return ga.pop(),e}catch(e){throw ga.pop(),e}}function EE(){return ga.length===0?"":ga.join(Kb)+Kb}function Bb(n){if(!Ub(n))throw new Error("Not a valid tensor name: '"+n+"'");return EE()+n}function Hb(n){if(!Ub(n))throw new Error("Not a valid tensor name: '"+n+"'");ki.has(n)||ki.set(n,0);const t=ki.get(n);if(ki.set(n,ki.get(n)+1),t>0){const e=`${n}_${t}`;return ki.set(e,1),e}else return n}const LE=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ub(n){return!!n.match(LE)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DE(n){return n===parseInt(n.toString(),10)}function Xs(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let o=t;o<e;++o)s*=n[o];return s}function Si(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function Os(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function _n(n,t){if(t<n)throw new G(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Zp;function he(){return Zp==null&&(Zp=zs().epsilon()),Zp}function An(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function es(n,t){return ot(n,t)}function ba(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),D(n,e)}function ME(n,t){return z(()=>{if(n.shape.length!==2)throw new G(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=ba(n,1);return Hp(e,[1,t,1])})}function zE(n){const t=[Xs(n.shape)];return D(n,t)}function FE(n){if(n.rank<=1)throw new G(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],Xs(n.shape,1)];return D(n,t)}function Wo(n,t,e){return z(()=>{switch(n.rank){case 1:return qh(n,t,e);case 2:return Y0(n,[t,0],[e,n.shape[1]]);case 3:return tp(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return zc(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return _t(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return _t(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new G(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Kp(n,t,e){return z(()=>{switch(n.rank){case 1:return qh(n,t,e);case 2:return Y0(n,[0,t],[n.shape[0],e]);case 3:return tp(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return zc(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new G(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Zc(n,t,e,s){return z(()=>{switch(n.rank){case 1:return qh(n,t,e);case 2:switch(s){case 1:return Wo(n,t,e);case 2:return Kp(n,t,e);default:throw new G(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Wo(n,t,e);case 2:return tp(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Kp(n,t,e);default:throw new G(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Wo(n,t,e);case 2:return zc(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return zc(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Kp(n,t,e);default:throw new G(`The axis is not within the rank of the tensor ${s}`)}default:throw new G(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Bp(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),Oe(n,t)}function Yb(n,t){switch(n.rank){case 1:return fS([n,t]);case 2:return gS([n,t],0);case 3:return xS([n,t],0);case 4:return wS([n,t],0);default:throw new G(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Hp(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new G(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Wn(n,t)}function Kc(n,t=0,e=1,s,o){return SN(n,t,e,s,o)}function ns(n,t,e,s){if(n.rank<2||t.rank<2)throw new bt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const o=n.shape.slice(-1)[0],i=t.shape.slice(-2)[0];if(o!==i)throw new bt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return tb({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?Up(n.rank,s,An()):null,activation:e});{const o=n.shape.slice(),i=o.pop();n=D(n,[-1,i]);const r=t.shape.slice(),a=r.pop(),l=r.pop(),c=[...r,a],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=D(kt(t,u),[l,-1]);const d=[...o,...c];return D(tb({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?Up(n.rank,s,An()):null,activation:e}),d)}}function Qb(n,t,e){return z(()=>(Array.isArray(t)?t=hn(t,"int32"):t=ot(t,"int32"),Fh(n,t,e)))}function xa(n){return L(n,n)}function Up(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new G(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?D(t,[1,s[0],1,1,1]):D(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?D(t,[1,1,1,1,s[0]]):D(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?D(t,[1,s[0],1,1]):D(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?D(t,[1,1,1,s[0]]):D(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?D(t,[1,s[0],1]):D(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?D(t,[1,1,s[0]]):D(t,[1].concat(s))}else if(n<3)return t;throw new G(`Unsupported input rank by biasAdd: ${t.rank}`)}function Xn(n,t,e){return z(()=>(e==null&&(e=An()),se(e),Q(n,Up(n.rank,t,e))))}function WE(n,t=1){if(t!==1)throw new bt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return $c(n)}function VE(n){return z(()=>ht(n,Q(Me(n),1)))}function Jb(n,t,e,s){return z(()=>bR(n,t,e,s))}function _E(n){return z(()=>{const t=Q(.5,L(.2,n));return cn(t,0,1)})}function ya(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const AE=["fanIn","fanOut","fanAvg"],XE=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function OE(n){zo(AE,"FanMode",n)}function PE(n){zo(XE,"Distribution",n)}class Tn extends gi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class jb extends Tn{apply(t,e){return xe(t,e)}}jb.className="Zeros",H(jb);class Yp extends Tn{apply(t,e){return So(t,e)}}Yp.className="Ones",H(Yp);class qb extends Tn{constructor(t){if(super(),typeof t!="object")throw new G(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new G(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return z(()=>L(Et(this.value),So(t,e)))}getConfig(){return{value:this.value}}}qb.className="Constant",H(qb);class tx extends Tn{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Mc(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}tx.className="RandomUniform",H(tx);class ex extends Tn{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new bt(`randomNormal does not support dType ${e}.`);return Kc(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ex.className="RandomNormal",H(ex);class nx extends Tn{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new bt(`truncatedNormal does not support dType ${e}.`);return J0(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}nx.className="TruncatedNormal",H(nx);class sx extends Tn{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return z(()=>{if(t.length!==2||t[0]!==t[1])throw new G("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,F0(t[0]))})}getConfig(){return{gain:this.gain}}}sx.className="Identity",H(sx);function ZE(n,t="channelsLast"){let e,s;if(se(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const o=Xs(n,2);e=n[1]*o,s=n[0]*o}else if(t==="channelsLast"){const o=Xs(n,0,n.length-2);e=n[n.length-2]*o,s=n[n.length-1]*o}}else{const o=Xs(n);e=Math.sqrt(o),s=Math.sqrt(o)}return[e,s]}class qe extends Tn{constructor(t){if(super(),t.scale<0)throw new G(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,OE(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,PE(this.distribution),this.seed=t.seed}apply(t,e){const s=ZE(t),o=s[0],i=s[1];let r=this.scale;if(this.mode==="fanIn"?r/=Math.max(1,o):this.mode==="fanOut"?r/=Math.max(1,i):r/=Math.max(1,(o+i)/2),this.distribution==="normal"){const a=Math.sqrt(r);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new bt(`${this.getClassName()} does not support dType ${e}.`);return J0(t,0,a,e,this.seed)}else{const a=Math.sqrt(3*r);return Mc(t,-a,a,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}qe.className="VarianceScaling",H(qe);class Qp extends qe{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qe.className}}Qp.className="GlorotUniform",H(Qp);class Jp extends qe{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qe.className}}Jp.className="GlorotNormal",H(Jp);class jp extends qe{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qe.className}}jp.className="HeNormal",H(jp);class qp extends qe{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qe.className}}qp.className="HeUniform",H(qp);class tf extends qe{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qe.className}}tf.className="LeCunNormal",H(tf);class ef extends qe{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qe.className}}ef.className="LeCunNormal",H(ef);class ox extends Tn{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new bt("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return z(()=>{if(t.length<2)throw new bt("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const s=t[0]>t[1]?[t[1],t[0]]:t,o=Kc(s,0,1,"float32");let i=d$.gramSchmidt(o);return t[0]>t[1]&&(i=kt(i)),L(this.gain,i)})}getConfig(){return{gain:this.gain,seed:this.seed}}}ox.className="Orthogonal",H(ox);const ix={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function rx(n,t={}){return ma(n,In.getMap().classNameMap,t,"initializer")}function jt(n){return Xp(n)}function Ut(n){if(typeof n=="string"){const t=n in ix?ix[n]:n;if(t==="GlorotNormal")return new Jp;if(t==="GlorotUniform")return new Qp;if(t==="HeNormal")return new jp;if(t==="HeUniform")return new qp;if(t==="LeCunNormal")return new tf;if(t==="LeCunUniform")return new ef;{const e={};return e.className=t,e.config={},rx(e)}}else return n instanceof Tn?n:rx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nf(n){return Array.isArray(n)&&Array.isArray(n[0])}function Bc(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function mt(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new G(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function Rt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new G(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hc(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,o)=>s*o);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ax="Variable";class KE{constructor(t,e="float32",s=ax,o=!0,i=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Pb(),s=s??ax,this.originalName=Bb(s),this.name=Hb(this.originalName),this.trainable_=o,this.constraint=i,this.val=fR(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),BE(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function BE(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function sf(n){return n.map(t=>t.read())}function of(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pe{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ss{constructor(t,e,s,o,i,r,a){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=o,this.callArgs=i,this.outputTensorIndex=a,this.id=Pb(),r!=null&&(this.originalName=Bb(r),this.name=Hb(this.originalName)),this.rank=e.length}}let HE=0;class Uc{constructor(t,e){this.callArgs=e,this.id=HE++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let UE=0;class Ct extends gi{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=UE++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=Is(s)+"_"+Pc(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let i=null;t.batchSize!=null&&(i=t.batchSize),s=[i].concat(t.inputShape)}this.batchInputShape=s;let o=t.dtype;o==null&&(o=t.inputDType),o==null&&(o="float32"),this.dtype=o}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new kn(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new G(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Pe(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Pe(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new qn(`Layer ${this.name} is not connected, no input to return.`);return Pe(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new qn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Pe(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Bt(t),this.inputSpec==null||this.inputSpec.length===0)return;const e=Bt(this.inputSpec);if(t.length!==e.length)throw new G(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let s=0;s<t.length;s++){const o=t[s],i=e[s];if(i==null)continue;const r=o.rank;if(i.ndim!=null&&r!==i.ndim)throw new G(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${r}`);if(i.maxNDim!=null&&r>i.maxNDim)throw new G(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${r}`);if(i.minNDim!=null&&r<i.minNDim)throw new G(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${r}.`);if(i.dtype!=null&&o.dtype!==i.dtype)throw new G(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${o.dtype}.`);if(i.axes){const a=o.shape;for(const l in i.axes){const c=Number(l),u=i.axes[l],d=c>=0?a[c]:a[a.length+c];if(u!=null&&[u,null].indexOf(d)===-1)throw new G(`Input ${s} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${a}.`)}}if(i.shape!=null)for(let a=0;a<i.shape.length;++a){const l=i.shape[a],c=o.shape[a];if(l!=null&&c!=null&&l!==c)throw new G(`Input ${s} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${o.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=Bt(t);let o=!0;for(const r of s)if(!(r instanceof ss)){o=!1;break}let i=!0;for(const r of s)if(r instanceof ss){i=!1;break}if(o===i)throw new G("Arguments to apply() must be all SymbolicTensors or all Tensors");return Fo(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const r=[];for(const a of Bt(t))r.push(a.shape);this.build(Pe(r)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(t),i){let r=this.call(t,e);const a=Bt(r),l=[];for(let c of a)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(r=Pe(l),this.activityRegularizer!=null)throw new bt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}else{const r=YE(t),a=this.computeOutputShape(r);let l;const c=QE(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?r[0]:r),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,d)=>new ss(c,u,this,Bt(t),e,this.name,d)):l=new ss(c,a,this,Bt(t),e,this.name),this.addInboundNode(t,l,null,null,r,a,e),this._refCount++,this.activityRegularizer!=null)throw new bt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,o)=>{s!=null&&t[o]!=null&&t[o]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new qn(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new qn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new kn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Hc(this.weights)}build(t){this.built=!0}getWeights(t=!1){return sf(t?this.trainableWeights:this.weights)}setWeights(t){z(()=>{const e=this.weights;if(e.length!==t.length)throw new G(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],o=sf(e);for(let i=0;i<o.length;++i){const r=o[i],a=e[i],l=t[i];if(!$t(r.shape,l.shape))throw new G(`Layer weight shape ${r.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}of(s)})}addWeight(t,e,s,o,i,r,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new G(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(o=l!=null?l():Ut("zeros"));const c=o.apply(e,s),u=new KE(c,s,t,r,a);return c.dispose(),i!=null&&this.addLoss(()=>i.apply(u.read())),r==null&&(r=!0),r?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Bt(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,s,o,i,r,a=null){const l=Bt(t);e=Bt(e),s=Bt(s),o=Bt(o),i=Bc(i),r=Bc(r);const c=[],u=[],d=[];for(const h of l)c.push(h.sourceLayer),u.push(h.nodeIndex),d.push(h.tensorIndex);new Uc({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:d,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:o,inputShapes:i,outputShapes:r},a);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function YE(n){n=Bt(n);const t=[];for(const e of n)t.push(e.shape);return Pe(t)}function QE(n){return"float32"}function lx(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const o=[];for(let i=0;i<s.inboundLayers.length;i++){const r=s.inputTensors[i],a=s.inboundLayers[i],l=s.nodeIndices[i],c=lx(r,a,l);for(const u of c)o.indexOf(u)===-1&&o.push(u)}return o}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class wa extends Ct{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Pc("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new G("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new G("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new G("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const o=new ss(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Uc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new G(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}wa.className="InputLayer",H(wa);function JE(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new G("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new wa({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jE(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return ot(t,n.dtype)}catch{throw new G(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Ps{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Ps)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=jE(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new G(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ss){if(this.id2Value[t.id]==null)throw new G(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new G(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof ss){if(this.id2Value[t.id]==null)throw new G(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new G(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&It(this.id2Mask)}}const Yc=new _b,Qc=new _b;function qE(n){Yc!=null&&Yc.setMaxEntries(n),Qc!=null&&Qc.setMaxEntries(n)}function Ia(n,t,e,s){const o=e==null?!1:e.training,i=Array.isArray(n),r=i?n:[n],a=r.map(f=>f.name),l=[],c=t.names();for(const f of a)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const u=a.join(",")+"|"+t.names().sort().join(",");let d=Yc.get(u),h;if(d==null){const f=tL(r,t);d=f.sorted,h=f.recipientCounts,Yc.put(u,d),Qc.put(u,h)}h={},o||Object.assign(h,Qc.get(u));const p=new Ps(t);for(let f=0;f<d.length;++f){if(s!=null){const T=vc().numTensors;T>s.maxNumTensors&&(s.maxNumTensors=T),T<s.minNumTensors&&(s.minNumTensors=T)}const m=d[f],g=m.sourceLayer;if(g instanceof wa)continue;const b=[],x=[],w=[];let y=!1;for(const T of m.inputs){const N=p.getValue(T),$=p.getMask(T);b.push(N),x.push($),$!=null&&(y=!0),o||(h[T.name]--,h[T.name]===0&&!t.hasKey(T)&&a.indexOf(T.name)===-1&&!N.isDisposed&&T.sourceLayer.stateful!==!0&&w.push(N))}y&&(e=e||{},e.mask=x[0]);const I=Bt(g.apply(b,e));let C=null;g.supportsMasking&&(C=g.computeMask(b,x));const v=nL(m),k=Array.isArray(v)?v:[v];for(let T=0;T<k.length;++T){p.hasKey(k[T])||p.add(k[T],I[T],Array.isArray(C)?C[0]:C);const N=a.indexOf(k[T].name);N!==-1&&(l[N]=I[T])}o||It(w)}return p.disposeMasks(),i?l:l[0]}function tL(n,t){S(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const o=cx(n[0],t);e=o.sorted,s=o.recipientMap}else{const o=new Set;for(const i of n){const{sorted:r,recipientMap:a}=cx(i,t);for(const l of r)o.has(l.name)||(e.push(l),o.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(c=>s[l].add(c))}}return{sorted:e,recipientCounts:eL(s)}}function eL(n){const t={};for(const e in n)t[e]=n[e].size;return t}function cx(n,t){const e=new Set,s=[],o={};for(const a of t.names())e.add(a);const i=[],r=[];for(i.push(n);i.length>0;){const a=i[i.length-1];if(e.has(a.name)){i.pop();continue}const l=r[r.length-1]===i.length-1;if(a.inputs.length===0||l)i.pop(),s.push(a),e.add(a.name),l&&r.pop();else{r.push(i.length-1);for(const c of a.inputs)o[c.name]==null&&(o[c.name]=new Set),o[c.name].add(a.name),!e.has(c.name)&&i.push(c)}}return{sorted:s,recipientMap:o}}function nL(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const o of n.sourceLayer.inboundNodes[s].outputTensors)if(o.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,qE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rf(n,t){return z(()=>ze(ut(L(n,n),t,!0)))}class Ca extends gi{getConfig(){return{}}}class ux extends Ca{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return z(()=>{const e=rf(t,this.axis),s=cn(e,0,this.maxValue);return L(t,ht(s,Q(he(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ux.className="MaxNorm",H(ux);class dx extends Ca{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return z(()=>ht(t,Q(he(),rf(t,this.axis))))}getConfig(){return{axis:this.axis}}}dx.className="UnitNorm",H(dx);class hx extends Ca{apply(t){return No(t)}}hx.className="NonNeg",H(hx);class px extends Ca{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return z(()=>{const e=rf(t,this.axis),s=Q(L(this.rate,cn(e,this.minValue,this.maxValue)),L(1-this.rate,e));return L(t,ht(s,Q(he(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}px.className="MinMaxNorm",H(px);const fx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function fe(n){return Xp(n)}function mx(n,t={}){return ma(n,In.getMap().classNameMap,t,"constraint")}function me(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in fx?fx[n]:n,config:{}};return mx(e)}else return n instanceof Ca?n:mx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Vo(n){if(n==null)return;const t=[],e=[],s=[];for(const o in n){const i=n[o];if(typeof i!="number"){const r=i;t.push(r.data()),e.push(o),s.push(r)}}if(t.length>0){const o=await Promise.all(t);for(let i=0;i<o.length;++i)n[e[i]]=o[i][0];It(s)}}function gx(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var bx;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(bx||(bx={}));const sL=125;class va{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class oL{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class iL extends va{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const o in e){const i=e[o];if(typeof i=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+i*s;else{let r;o in this.totals?r=this.totals[o]:this.totals[o]=0;const a=z(()=>Q(this.totals[o],L(i,s)));this.totals[o]=a,r!=null&&r.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:z(()=>{const o=L(ht(1,this.seen),this.totals[s]);e[s]=o,this.totals[s].dispose(),ln(e[s])}))}}class rL extends va{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const i in this.history){const r=this.history[i];for(let a=0;a<r.length;++a)if(typeof r[a]!="number"){const l=r[a];t.push(l.data()),e.push(i),s.push(a)}}const o=await Promise.all(t);for(let i=0;i<o.length;++i)this.history[e[i]][s[i]].dispose(),this.history[e[i]][s[i]]=o[i][0]}}class aL extends va{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Wc,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=sL),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");rd(this.yieldEvery)&&(this.maybeWait=vE(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const o=[];this.yield!=null&&(await Vo(s),o.push(this.yield(t,e,s))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Vo(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await Vo(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Vo(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await Vo(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):rd(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await Vo(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Vo(t),await this.trainEnd(t))}}function xx(n,t){return n==null&&(n={}),n instanceof va?[n]:Array.isArray(n)&&n[0]instanceof va?n:Bt(n).map(s=>new aL(s,t))}class Nn{constructor(){}static registerCallbackConstructor(t,e){S(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Nn.checkForDuplicate(e),Nn.constructors[t]==null&&(Nn.constructors[t]=[]),Nn.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Nn.constructors)Nn.constructors[+e].forEach(o=>{if(o===t)throw new G("Duplicate callback constructor.")})}static clear(){Nn.constructors={}}static createCallbacks(t){const e=[];for(const s in Nn.constructors){const o=+s;t>=o&&e.push(...Nn.constructors[o])}return e.map(s=>new s)}}Nn.constructors={};function yx(n,t,e,s,o,i,r,a,l){const c=new rL,u=[new iL,...Nn.createCallbacks(t)];n!=null&&u.push(...n),u.push(c);const d=new oL(u);return d.setParams({epochs:e,initialEpoch:s,samples:o,steps:i,batchSize:r,verbose:t,doValidation:a,metrics:l}),{callbackList:d,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cs(n,t={},e=!1){return ma(n,In.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jc(n,t){return z(()=>{n.dtype!=="float32"&&(n=ot(n,"float32"));const e=ut(xa(n),t,!0),s=Rc(e.shape,he()),o=ze(Vs(e,s));return ht(n,o)})}function jc(n,t){return z(()=>ce(xa(ft(t,n)),-1))}function af(n,t){return z(()=>ce(Me(ft(t,n)),-1))}function lf(n,t){return z(()=>{const e=ft(n,t),s=cn(Me(n),he(),Number.MAX_VALUE),o=Me(ht(e,s));return L(100,ce(o,-1))})}function lL(n,t){return z(()=>{const e=cn(t,he(),Number.MAX_VALUE),s=Jn(Q(1,e)),o=cn(n,he(),Number.MAX_VALUE),i=Jn(Q(1,o));return ce(xa(ft(s,i)),-1)})}function cL(n,t){return z(()=>{const e=Vs(0,ft(1,L(n,t)));return ce(xa(e),-1)})}function uL(n,t){return z(()=>{const e=Vs(0,ft(1,L(n,t)));return ce(e,-1)})}function dL(n,t){return z(()=>{const e=ut(L(n,t),-1),s=Fn(L(ft(1,n),t),-1);return Vs(0,Q(1,ft(s,e)))})}function hL(n,t){return z(()=>{const e=Math.log(2),s=ft(t,n),o=ft(Q(s,la(L(-2,s))),e);return ce(o,-1)})}function ka(n,t,e=!1){return z(()=>{if(e)t=ep(t);else{const s=ut(t,t.shape.length-1,!0);t=ht(t,s)}return t=cn(t,he(),1-he()),ae(ut(L(ot(n,"float32"),Jn(t)),t.shape.length-1))})}function qc(n,t,e=!1){return z(()=>{const s=ot(Lc(zE(n)),"int32");t=cn(t,he(),1-he());const o=t.shape,i=D(f0(s,o[o.length-1]),o);return ka(i,t,e)})}function pL(n,t){if(!$t(n.shape,t.shape))throw new G(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return z(()=>{const e=No(t),s=ae(Me(t));return Q(ft(e,L(t,n)),V0(bs(s)))})}function tu(n,t){return z(()=>{let e;return e=cn(t,he(),1-he()),e=Jn(ht(e,ft(1,e))),ce(pL(n,e),-1)})}function fL(n,t){return z(()=>{const e=cn(n,he(),1),s=cn(t,he(),1);return ut(L(n,Jn(ht(e,s))),-1)})}function mL(n,t){return z(()=>{const e=Jn(Q(he(),t));return ce(ft(t,L(n,e)),-1)})}function wx(n,t){return z(()=>{const e=Jc(n,-1),s=Jc(t,-1),o=L(e,s);return ae(ut(o,-1))})}const eu={meanSquaredError:jc,meanAbsoluteError:af,meanAbsolutePercentageError:lf,meanSquaredLogarithmicError:lL,squaredHinge:cL,hinge:uL,categoricalHinge:dL,logcosh:hL,categoricalCrossentropy:ka,sparseCategoricalCrossentropy:qc,binaryCrossentropy:tu,kullbackLeiblerDivergence:fL,poisson:mL,cosineProximity:wx};function cf(n){if(typeof n=="string"){if(n in eu)return eu[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new G(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ix(n,t){return z(()=>{const e=L(.5,vn(t)),s=es(un(t,e),n.dtype);return ce(Qn(n,s),-1)})}function Cx(n,t){return z(()=>es(Qn(ia(n,-1),ia(t,-1)),"float32"))}function gL(n,t){return z(()=>ot(ut(xs(Qn(n,1),Qn(t,1))),"float32"))}function bL(n,t){return z(()=>ot(ut(xs(Qn(n,0),Qn(t,1))),"float32"))}function xL(n,t){return z(()=>{const e=gL(n,t),s=bL(n,t),o=Q(e,s);return ot(Je(un(o,0),ht(e,o),0),"float32")})}function yL(n,t){return tu(n,t)}function wL(n,t){return n.rank===t.rank&&(n=ua(n,[n.rank-1])),t=ia(t,-1),t.dtype!==n.dtype&&(t=ot(t,n.dtype)),ot(Qn(n,t),"float32")}const IL=jc,CL=jc,vL=af,kL=af,SL=lf,TL=lf,vx=ka,NL=wx,kx=qc,nu={binaryAccuracy:Ix,categoricalAccuracy:Cx,precision:xL,categoricalCrossentropy:vx,sparseCategoricalCrossentropy:kx,mse:IL,MSE:CL,mae:vL,MAE:kL,mape:SL,MAPE:TL,cosine:NL};function RL(n){if(typeof n=="string"&&n in nu)return nu[n];if(typeof n!="string"&&n!=null)return n;throw new G(`Unknown metric ${n}`)}function su(n){if(ts(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(eu))if(eu[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(nu))if(nu[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $L(n){const t={Adagrad:()=>vi.adagrad(.01),Adadelta:()=>vi.adadelta(1,.95,he()),Adam:()=>vi.adam(.001,.9,.999,he()),Adamax:()=>vi.adamax(.002,.9,.999,he(),0),RMSProp:()=>vi.rmsprop(.001,.9,0,he()),SGD:()=>vi.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new G(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Sx=1*1024*1024;function Tx(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!uf(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>Sx&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Sx}.`)}}function uf(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!uf(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!uf(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function GL(n,t,e,s=console.log){const o=LL(n),i=["Layer (type)","Input Shape","Output shape","Param #"];o?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let r;if(!o){i.push("Receives inputs"),r=[];for(const u in n.nodesByDepth)r.push(...n.nodesByDepth[u])}s("_".repeat(t)),ou(i,e,s),s("=".repeat(t));const a=n.layers;for(let u=0;u<a.length;++u)o?DL(a[u],e,s):ML(a[u],e,r,s),s((u===a.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const l=EL(n),c=Hc(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function EL(n){let t;return n.collectedTrainableWeights!=null?t=Hc(n.collectedTrainableWeights):t=Hc(n.trainableWeights),t}function LL(n){let t=!0;const e=[],s=[];for(const o in n.nodesByDepth)e.push(n.nodesByDepth[o]);for(const o of e){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}s.push(...o)}if(t)for(const o of n.layers){let i=!1;for(const r of o.inboundNodes)if(s.indexOf(r)!==-1)if(i){t=!1;break}else i=!0;if(!t)break}return t}function ou(n,t,e=console.log){let s="";for(let o=0;o<n.length;++o)o>0&&(s=s.slice(0,s.length-1)+" "),s+=n[o],s=s.slice(0,t[o]),s+=" ".repeat(t[o]-s.length);e(s)}function DL(n,t,e){let s,o;try{o=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{o="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const i=n.name,r=n.getClassName(),a=[`${i} (${r})`,o,s,n.countParams().toString()];ou(a,t,e)}function ML(n,t,e,s){let o,i;try{i=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{i="multiple"}try{o=JSON.stringify(n.outputShape)}catch{o="multiple"}const r=[];for(const d of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const p=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];r.push(`${p}[${f}][${m}]`)}const a=n.name,l=n.getClassName(),c=r.length===0?"":r[0],u=[`${a} (${l})`,i,o,n.countParams().toString(),c];ou(u,t,s);for(let d=1;d<r.length;++d)ou(["","","","",r[d]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Nx(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function df(n,t){if(n===null)return null;if(typeof n=="string")return Mo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let o=0;o<s;++o){const i=n[o];Nx(t,o,i)?e.push(i):e.push(df(i,t))}return e}else{const e={};for(const s of Object.keys(n)){const o=n[s];if(s==="name"&&typeof o=="string")e[s]=o;else{const i=Mo(s);e[i]=df(o,i)}}return e}}function hf(n,t){if(n==null)return null;if(typeof n=="string")return Is(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let o=0;o<s;++o){const i=n[o];Nx(t,o,i)?e.push(i):e.push(hf(i,t))}return e}else{const e={};for(const s of Object.keys(n)){const o=n[s],i=Is(s);(s==="name"||s==="className")&&typeof o=="string"?e[i]=o:e[i]=hf(o,s)}return e}}/** @license See the LICENSE file. */const Rx="4.1.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class On extends Ct{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=Pc(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],As(this.inputs).length!==this.inputs.length)throw new G(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);As(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const w=x.sourceLayer,y=x.nodeIndex,I=x.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(I)}for(const x of this.inputs){const w=x.sourceLayer,y=x.nodeIndex,I=x.tensorIndex;ts(y===0,"input layer has >1 nodes"),ts(I===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const w=this.inputLayers[x];if(!(w instanceof wa))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${x} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const e={},s={},o={},i={},r={},a=[],l=(x,w,y,I,C,v)=>{(I==null||C==null||v==null)&&(I=x.sourceLayer,C=x.nodeIndex,v=x.tensorIndex);const k=I.inboundNodes[C];if(y.indexOf(k)!==-1)throw new kn(`The tensor ${x.name} at layer "${I.name}" is part of a cycle.`);if(w.indexOf(k)!==-1)return;this.containerNodes.add(On.nodeKey(I,C)),I.id in r||(r[I.id]=Object.keys(r).length),y.indexOf(k)===-1&&y.push(k);const T=k.inboundLayers.length;for(let N=0;N<T;N++){const $=k.inputTensors[N],F=k.inboundLayers[N],W=k.nodeIndices[N],V=k.tensorIndices[N];l($,w,y,F,W,V)}for(w.push(k);y.indexOf(k)>=0;)y.splice(y.indexOf(k),1);a.push(k)},c=[],u=[];for(const x of this.outputs)l(x,c,u);const d=a.slice().reverse();for(const x of d){s[x.id]=x,x.id in e||(e[x.id]=0);let w=e[x.id];const y=o[x.outboundLayer.id]==null?0:o[x.outboundLayer.id];w=Math.max(w,y),o[x.outboundLayer.id]=w,i[x.outboundLayer.id]=x.outboundLayer,e[x.id]=w;for(let I=0;I<x.inboundLayers.length;I++){const C=x.inboundLayers[I],v=x.nodeIndices[I],k=C.inboundNodes[v],T=e[k.id]==null?0:e[k.id];e[k.id]=Math.max(w+1,T),s[k.id]=k}}const h={};for(const x in e){const w=e[x];w in h||(h[w]=[]),h[w].push(s[x])}const p={};for(const x in o){const w=o[x];w in p||(p[w]=[]),p[w].push(i[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(Xc);this.layers=[];for(const x of f){const w=p[x];w.sort((y,I)=>{const C=r[y.id],v=r[I.id];return C<v?-1:C>v?1:0});for(const y of w)y instanceof On&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=p,f=Object.keys(h).map(x=>parseInt(x,10)).sort(Xc);const m=this.inputs.slice(),g=[];for(const x of f)for(const w of h[x]){const y=w.outboundLayer;if(y!=null){for(const I of w.inputTensors)if(m.indexOf(I)===-1)throw new kn(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${y.name}". The following previous layers were accessed without issue: ${g}`);for(const I of w.outputTensors)m.push(I);g.push(y.name)}}this.nodesByDepth=h;const b=this.layers.map(x=>x.name);for(const x of b){const w=b.filter(y=>y===x).length;if(w!==1)throw new kn(`The name "${x}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new Uc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new G("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let o=0;for(const r of this.layers)for(const a of r.weights){if(s[a.originalName]!=null)throw new G(`Duplicate weight name: ${a.originalName}`);s[a.originalName]=a,o++}const i=[];for(const r in t){let a=r;if(s[r]==null){const l=r.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(s[a]!=null)i.push([s[a],t[r]]);else if(e)throw new G(`Provided weight data has no target variable: ${r}`);delete s[a]}if(e){const r=[];for(const a in s)r.push(a);if(r.length>0)throw new G(`${r.length} of ${o} weights are not set: ${r}`)}of(i)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${Rx}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=hf(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return z(()=>{t=Bt(t);const s=new Ps;for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],t[o]);return Ia(this.outputs,s,e)})}computeMask(t,e){return z(()=>{t=Bt(t);let s;return e==null?s=Do(null,t.length):s=Bt(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Bc(t);if(e.length!==this.inputLayers.length)throw new G(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<e.length;a++){const l=this.inputLayers[a],c=e[a],u=l.name+"_0_0";s[u]=c}const o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Xc);if(o.length>1)for(const a of o){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;const d=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],b=c.nodeIndices[m],x=c.tensorIndices[m],w=`${g.name}_${b}_${x}`,y=s[w];d.push(y)}const h=u.computeOutputShape(Pe(d)),p=Bc(h),f=u.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${u.name}_${f}_${m}`;s[g]=p[m]}}}const i=[],r=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],d=`${l.name}_${c}_${u}`;r.push(d)}for(let a=0;a<r.length;a++){const l=r[a];ts(l in s),i.push(s[l])}return Pe(i)}runInternalGraph(t,e){e==null&&(e=Do(null,t.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=t[l],d=e[l];s[c.id]=[u,d]}const o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Xc);for(const l of o){const c=this.nodesByDepth[l];for(const u of c){const d=u.outboundLayer,h=u.inputTensors,p=u.outputTensors,f=new Array;for(const m of h)m.id in s&&f.push(s[m.id]);if(f.length===h.length){let m={},g,b,x,w;if(u.callArgs!=null&&(m=u.callArgs),f.length===1){const[y,I]=f[0];m.mask==null&&(m.mask=I),x=Bt(d.call(y,m)),w=Bt(d.computeMask(y,I)),g=[y],b=[I]}else g=f.map(y=>y[0]),b=f.map(y=>y[1]),m.mask==null&&(m.mask=b),x=Bt(d.call(g,m)),w=Bt(d.computeMask(g,b));if(d.activityRegularizer)throw new bt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<p.length;++y){const I=p[y],C=x[y],v=w[y];s[I.id]=[C,v]}}}}const i=[],r=[],a=[];for(const l of this.outputs){ts(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];a.push(c.shape),i.push(c),r.push(u)}return[i,r,a]}buildNodeConversionMap(t){const e={};let s;for(const o of this.layers){s=o instanceof On?1:0;for(let i=0;i<o.inboundNodes.length;i++){const r=On.nodeKey(o,i);this.containerNodes.has(r)&&(e[r]=s,s+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new G(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new G("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===t)return s;throw new G(`No such layer: ${t}`)}calculateLosses(){return z(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const o=On.nodeKey(e,s);this.containerNodes.has(o)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const r of this.layers){const a=r.getClassName(),l=r.getConfig(),c=[];for(let d=0;d<r.inboundNodes.length;d++){const h=r.inboundNodes[d],p=On.nodeKey(r,d);let f={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),f=h.callArgs}catch{console.warn(`Layer ${r.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(h.inboundLayers.length>0){const m=[];for(let g=0;g<h.inboundLayers.length;g++){const b=h.inboundLayers[g],x=h.nodeIndices[g],w=h.tensorIndices[g],y=On.nodeKey(b,x);let I=e[y];I==null&&(I=0),m.push([b.name,I,w,f])}c.push(m)}}}const u={};u.name=r.name,u.className=a,u.config=l,u.inboundNodes=c,s.push(u)}t.layers=s;const o=[];for(let r=0;r<this.inputLayers.length;r++){const a=this.inputLayers[r],l=this.inputLayersNodeIndices[r],c=On.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const d=this.inputLayersTensorIndices[r];o.push([a.name,u,d])}t.inputLayers=o;const i=[];for(let r=0;r<this.outputLayers.length;r++){const a=this.outputLayers[r],l=this.outputLayersNodeIndices[r],c=On.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const d=this.outputLayersTensorIndices[r];i.push([a.name,u,d])}return t.outputLayers=i,t}static fromConfig(t,e,s={},o=!1){const i={},r={};function a(g,b){g.name in r?r[g.name].push(b):r[g.name]=[b]}function l(g,b){const x=[];let w;for(const y of b){const I=y[0],C=y[1],v=y[2];if(w=y[3]==null?{}:y[3],!(I in i)){a(g,b);return}const k=i[I];if(k.inboundNodes.length<=C){a(g,b);return}const T=k.inboundNodes[C];x.push(T.outputTensors[v])}x.length>0&&g.apply(Pe(x),w)}function c(g){const b=g.name,x=Cs(g,e.customObjects!=null?e.customObjects:{});x.setFastWeightInitDuringBuild(o),i[b]=x,g.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new G(`Corrupted configuration, expected array for nodeData: ${y}`);a(x,y)})}const u=e.name,d=e.layers;for(const g of d)c(g);for(;!CE(r);)for(const g of d){const b=i[g.name];if(b.name in r){const x=r[b.name];delete r[b.name];for(const w of x)l(b,w)}}const h=[],p=[],f=e.inputLayers;for(const g of f){const b=g[0],x=g[1],w=g[2];ts(b in i);const I=i[b].inboundNodes[x].outputTensors;h.push(I[w])}const m=e.outputLayers;for(const g of m){const b=g[0],x=g[1],w=g[2];ts(b in i);const I=i[b].inboundNodes[x].outputTensors;p.push(I[w])}return new t({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new G("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zL(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(o=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const o=[];return t.forEach(i=>{i in n?o.push(n[i]):o.push(null)}),o}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function $x(n,t){return zL(n,t,"classWeight")}async function Gx(n,t,e,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const o=z(()=>{if(n.shape.length===1)return yo(n);if(n.shape.length===2){if(n.shape[1]>1)return ia(n,1);if(n.shape[1]===1)return D(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await o.data());It(o);const r=[];return i.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);r.push(e[a])}),hn(r,"float32")}else return null}function FL(n,t){return L(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const WL=32;function Ex(n,t){let e,s;const o=t;e=o.xs,s=o.ys,S(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const i=Lx("input",n.inputNames,e),r=Lx("output",n.outputNames,s),a=i[0].shape[0];S(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),S(r.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${r.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<i.length;l++)S(i[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<r.length;l++)S(r[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:i,ys:r}}function Lx(n,t,e){if(e instanceof re)return[e];if(Array.isArray(e))return S(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const o of t){if(e[o]==null)throw new G(`The feature data generated by the dataset lacks the required ${n} key '${o}'.`);s.push(e[o])}return s}}function VL(n){if(n.length===3)throw new bt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function _L(n,t,e){const s=e.batchesPerEpoch!=null;if(S(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),S(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),S(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),S(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),S(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const o=e.validationData!=null;let i,r;if(o)if(Dx(e.validationData))S(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const g=VL(e.validationData);i=g.xs,r=g.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;o?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();const u=xx(e.callbacks,e.yieldEvery),d=e.verbose==null?1:e.verbose,{callbackList:h,history:p}=yx(u,d,e.epochs,null,null,AL(t,e),null,o,c);h.setModel(n),n.history=p,await h.onTrainBegin(),n.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,m=await t.iterator();for(;f<e.epochs;){const g={};await h.onEpochBegin(f);let b=0,x=0;for(s||(m=await t.iterator());!s||b<e.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:y,ys:I}=Ex(n,w.value),C={};C.batch=x,C.size=y[0].shape[0],await h.onBatchBegin(x,C);const v=[];if(e.classWeight!=null){const N=$x(e.classWeight,n.outputNames);for(let $=0;$<N.length;++$)v.push(await Gx(I[$],null,N[$]))}const k=y.concat(I).concat(v),T=a(k);It(k);for(let N=0;N<l.length;++N){const $=l[N],F=T[N];C[$]=F,ln(F)}await h.onBatchEnd(x,C),gx(C),x++,b++}if(s?b>=e.batchesPerEpoch:w.done){if(o){let y;Dx(e.validationData)?y=Bt(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):y=Bt(n.evaluate(i,r,{batchSize:e.validationBatchSize==null?WL:e.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)g[`val_${n.metricsNames[I]}`]=y[I]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function AL(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function Dx(n){return typeof n.iterator=="function"}function XL(n){return typeof n.next=="function"}async function OL(n,t,e){e=e||{};const s=e.batches!=null,o=n.testFunction;let i=[];if(e.verbose>0)throw new bt("Verbose mode is not implemented yet.");S(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const r=XL(t)?t:await t.iterator();let a=0,l=0;for(;!s||l<e.batches;){const c=await r.next();if(i=z(()=>{if(c.value){const{xs:u,ys:d}=Ex(n,c.value),h=u.concat(d),p=z(()=>o(h));if(It(h),l===0)for(let m=0;m<p.length;++m)i.push(Et(0));const f=h[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],b=i[m];i[m]=z(()=>Q(i[m],L(f,g))),l>0&&It(b)}It(p),a+=f,++l}return i}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<i.length;++c){const u=i[c];i[c]=ht(i[c],a),It(u)}return Pe(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pf(n){S(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Sa(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>Wo(s,t,e-t)):Wo(n,t,e-t)}function ff(n,t){return z(()=>n==null?null:Array.isArray(n)?n.map(e=>ff(e,t)):Qb(n,t.dtype==="int32"?t:ot(t,"int32")))}function mf(n,t){const e=[];let s=0,o=null;for(;s<n;)o=s+t,o>=n&&(o=n),e.push([s,o]),s=o;return e}function Mx(n){const t=[];n instanceof re&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(ba(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Pn(n,t){if(n==null)return;const e=[];if(t instanceof re)e.push(t.id);else if(Array.isArray(t))t.forEach(o=>e.push(o.id));else if(t!=null)for(const o in t){const i=t[o];e.push(i.id)}const s=[];if(n instanceof re)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(o=>{e.indexOf(o.id)===-1&&s.push(o)});else if(n!=null)for(const o in n){const i=n[o];e.indexOf(i.id)===-1&&s.push(i)}s.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function PL(n){return n instanceof re}function gf(n){return Array.isArray(n)}function zx(n){return!PL(n)&&!gf(n)}function Fx(n,t,e,s=!0,o=""){if(t==null||t.length===0){if(n!=null){let r=!1;if(gf(n)&&n.length>0)r=!0;else if(zx(n)){for(const a in n)if(n.hasOwnProperty(a)){r=!0;break}}else r=!0;if(r)throw new G(`Error when checking model ${o} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(r=>null);let i;if(zx(n)){n=n,i=[];for(const r of t){if(n[r]==null)throw new G(`No data provided for "${r}". Need data for each key in: ${t}`);i.push(n[r])}}else if(gf(n)){if(n=n,n.length!==t.length)throw new G(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,t.length>1)throw new G(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=Mx(i),e!=null)for(let r=0;r<t.length;++r){if(e[r]==null)continue;const a=i[r];if(a.shape.length!==e[r].length)throw new G(`Error when checking ${o}: expected ${t[r]} to have ${e[r].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[r].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=e[r][l];if(u!=null&&u>=0&&c!==u)throw new G(`${o} expected a batch of elements where each example has shape [${e[r].slice(1,e[r].length)}] (i.e.,tensor shape [*,${e[r].slice(1,e[r].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function ZL(n,t,e){const s=As(n.map(i=>i.shape[0]));s.sort();const o=As(t.map(i=>i.shape[0]));if(o.sort(),s.length>1)throw new G(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(o.length>1)throw new G(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(i=>i.shape))}`);if(s.length>0&&o.length>0&&!$t(s,o))throw new G(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${o[0]} target sample(s).`)}function KL(n,t,e){const s=[jc,tu,ka];for(let o=0;o<n.length;++o){const i=n[o],r=t[o],a=e[o];if(r!=null){if(r===ka&&i.shape[i.shape.length-1]===1)throw new G(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(r)!==-1){const l=i.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const d=l[u],h=c[u];if(h!=null&&d!==h)throw new G(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Wx(n,t,e,s=!0,o=""){let i;if(Array.isArray(n)){if(n.length!==t.length)throw new G(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(t.length>1)throw new G(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(e!=null)for(let r=0;r<t.length;++r){if(e[r]==null)continue;const a=i[r];if(a.shape.length!==e[r].length)throw new G(`Error when checking ${o}: expected ${t[r]} to have ${e[r].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[r].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=e[r][l];if(u!=null&&u!==c)throw new G(`Error when checking ${o}: expected ${t[r]} to have shape ${JSON.stringify(e[r])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function BL(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const o of t){let i=e.hasOwnProperty(o)?e[o]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const HL="layers-model";class Ti extends On{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new G("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");GL(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=$L(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof _s))throw new G("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const r in t.loss)if(this.outputNames.indexOf(r)===-1)throw new G(`Unknown entry in loss dictionary: "${r}". Only expected the following keys: ${this.outputNames}`);for(const r of this.outputNames)t.loss[r]==null&&console.warn(`Output "${r}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${r} during training`),e.push(cf(t.loss[r]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new G(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>cf(a))}else{const r=cf(t.loss);this.outputs.forEach(a=>{e.push(r)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let r=0;r<this.outputs.length;++r){const a=this.internalOutputShapes[r],l=this.outputNames[r];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[r])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Fo("loss",()=>{for(let r=0;r<this.outputs.length;++r){if(s.indexOf(r)!==-1)continue;const a=this.lossFunctions[r];this.outputs.length>1&&(this.metricsTensors.push([a,r]),this.metricsNames.push(this.outputNames[r]+"_loss"))}});const o=BL(t.metrics,this.outputNames),i=(r,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[r]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,r])};Fo("metric",()=>{for(let r=0;r<this.outputs.length;++r){if(s.indexOf(r)!==-1)continue;const a=o[r];(c=>{const u="";let d,h,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[r];g[g.length-1]===1||this.lossFunctions[r]===tu?["accuracy","acc"].indexOf(f)!==-1?h=Ix:["crossentropy","ce"].indexOf(f)!==-1&&(h=yL):this.lossFunctions[r]===qc?["accuracy","acc"].indexOf(f)!==-1?h=wL:["crossentropy","ce"].indexOf(f)!==-1&&(h=kx):["accuracy","acc"].indexOf(f)!==-1?h=Cx:["crossentropy","ce"].indexOf(f)!==-1&&(h=vx);let b;["accuracy","acc"].indexOf(f)!==-1?b="acc":["crossentropy","ce"].indexOf(f)!==-1&&(b="ce"),p=h,d=u+b}else p=RL(f),d=u+su(f);let m;Fo(d,()=>{m=p}),i(r,d,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const o=s.batchSize==null?32:s.batchSize;pf(o);const i=!0,r=this.standardizeUserDataXY(t,e,i,o);try{const a=r[0].concat(r[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,o,s.verbose,s.steps);return Pe(c)}finally{Pn(r[0],t),Pn(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),OL(this,t,e)}checkNumSamples(t,e,s,o="steps"){let i;if(s!=null){if(i=null,e!=null)throw new G(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?i=t[0].shape[0]:i=t.shape[0];else throw new G(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return i}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new G("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),o=s?e:[e],i=this.retrieveSymbolicTensors(o),r=new Ps;if(t instanceof re&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new G(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)r.add(this.inputs[l],t[l])}else for(const l of this.inputs){const c=t[l.name];if(c==null)throw new G(`No value is provided for the model's input ${l.name}`);r.add(l,c)}const a=Ia(i,r);return s?a:a[0]}retrieveSymbolicTensors(t){const e=Do(null,t.length);let s=t.length;for(const o of this.layers){const i=Array.isArray(o.output)?o.output:[o.output],r=i.map(a=>a.name);for(let a=0;a<t.length;++a){const l=r.indexOf(t[a]);if(l!==-1&&(e[a]=i[l],s--),s===0)break}if(s===0)break}if(s>0){const o=[];throw e.forEach((i,r)=>{i==null&&o.push(t[r])}),new G(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return e}predictLoop(t,e=32,s=!1){return z(()=>{const o=this.checkNumSamples(t);if(s)throw new bt("Verbose predictLoop() is not implemented yet.");const i=mf(o,e),r=this.outputs.map(a=>[]);for(let a=0;a<i.length;++a)z(()=>{const c=i[a][0],u=i[a][1],d=Sa(t,c,u),h=[];if(Array.isArray(d))for(let f=0;f<d.length;++f)h.push({key:this.inputs[f],value:d[f]});else h.push({key:this.inputs[0],value:d});const p=new Ps(h);return Ia(this.outputs,p)}).forEach((c,u)=>r[u].push(c));return Pe(r.map(a=>Oe(a,0)))})}predict(t,e={}){const s=Mx(t);Wx(s,this.inputNames,this.feedInputShapes,!1);try{const o=e.batchSize==null?32:e.batchSize;return pf(o),this.predictLoop(s,o)}finally{Pn(s,t)}}predictOnBatch(t){Wx(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,o){if(this.optimizer_==null)throw new kn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let r=0;r<this.feedOutputShapes.length;++r){const a=this.feedOutputShapes[r];this.feedLossFns[r]===qc?i.push(a.slice(0,a.length-1).concat([1])):i.push(a)}if(t=Fx(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Fx(e,this.feedOutputNames,i,!1,"target"),ZL(t,e),KL(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&t[0].shape[0]%o!==0)throw new G(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,o,i=!0,r){const[a,l]=this.standardizeUserDataXY(t,e,i,r);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(o!=null){const u=$x(o,this.outputNames);c=[];for(let d=0;d<u.length;++d)c.push(await Gx(l[d],null,u[d]))}return[a,l,c]}testLoop(t,e,s,o=0,i){return z(()=>{const r=this.checkNumSamples(e,s,i,"steps"),a=[];if(o>0)throw new bt("Verbose mode is not implemented yet.");if(i!=null)throw new bt("steps mode in testLoop() is not implemented yet");{const l=mf(r,s),c=hn(_n(0,r));for(let u=0;u<l.length;++u){const d=l[u][0],h=l[u][1],p=Wo(c,d,h-d),f=ff(e,p),m=t(f);if(u===0)for(let g=0;g<m.length;++g)a.push(Et(0));for(let g=0;g<m.length;++g){const b=m[g];a[g]=Q(a[g],L(h-d,b))}}for(let u=0;u<a.length;++u)a[u]=ht(a[u],r)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const o=t[s];let i=o;if(Ab(t,o)>1){const r=Ab(t.slice(0,s),o);i+=`_${r}`}e.push(i)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),r=[],a=()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:s[m]});const h=new Ps(d),p=Ia(this.outputs,h,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let b=g(o[m],p[m]);i[m]!=null&&(b=FL(b,i[m]));const x=ce(b);e.push(x),m===0?f=b:f=Q(f,b)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=e[m];else{const b=this.metricsTensors[m][0],x=this.metricsTensors[m][1];g=ce(b(o[x],p[x]))}ln(g),r.push(g)}return f=ce(f),this.calculateLosses().forEach(m=>{f=Q(f,m)}),f},l=this.collectedTrainableWeights.map(d=>d.read()),c=!0;return[this.optimizer_.minimize(a,c,l)].concat(r)}}makeTestFunction(){this.testFunction=t=>z(()=>{const e=[];let s;const o=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=[];for(let c=0;c<this.inputs.length;++c)r.push({key:this.inputs[c],value:o[c]});const a=new Ps(r),l=Ia(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],d=ce(u(i[c],l[c]));c===0?s=d:s=Q(s,d),e.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],d=this.metricsTensors[c][1],h=ce(u(i[d],l[d]));e.push(h)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let o,i,r,a,l,c,u,d,h;try{const p=s.batchSize==null?32:s.batchSize;pf(p);const f=!1,m=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,f,p);o=m[0],i=m[1],h=m[2];let g=!1,b;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new bt("validationData including sample weights is not supported yet."):new G(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const T=!0,N=await this.standardizeUserData(l,c,null,null,T,p);u=N[0],d=N[1],b=u.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const T=Math.floor(o[0].shape[0]*(1-s.validationSplit)),N=o[0].shape[0];u=Sa(o,T,N),r=o,o=Sa(o,0,T),d=Sa(i,T,N),a=i,i=Sa(i,0,T),b=u.concat(d)}else s.validationSteps!=null&&(g=!0);const x=o.concat(i).concat(h);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let I,C;g?(this.makeTestFunction(),I=this.testFunction,C=y.slice().concat(y.map(T=>"val_"+T))):(I=null,b=[],C=y.slice());const v=xx(s.callbacks,s.yieldEvery);return await this.fitLoop(w,x,y,p,s.epochs,s.verbose,v,I,b,s.shuffle,C,s.initialEpoch,null,null)}finally{this.isTraining=!1,Pn(o,t),Pn(i,e),Pn(r,t),Pn(a,e),Pn(u,l),Pn(d,c),h!=null&&It(h)}}async fitLoop(t,e,s,o,i,r,a,l,c,u,d,h,p,f){o==null&&(o=32),i==null&&(i=1),u==null&&(u=!0),h==null&&(h=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new G("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(e,o,p,"steps_per_epoch");let b;g!=null&&(b=_n(0,g)),r==null&&(r=1);const{callbackList:x,history:w}=yx(a,r,i,h,g,p,o,m,d);x.setModel(this),this.history=w,await x.onTrainBegin(),this.stopTraining_=!1;for(let y=h;y<i;++y){await x.onEpochBegin(y);const I={};if(p!=null)throw new bt("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new bt("batch shuffling is not implemneted yet");u&&BC(b);const C=hn(b),v=mf(g,o);for(let k=0;k<v.length;++k){const T={};if(await x.onBatchBegin(k,T),z(()=>{const N=v[k][0],$=v[k][1],F=Wo(C,N,$-N);T.batch=k,T.size=$-N;const W=ff(e,F),V=t(W);for(let _=0;_<s.length;++_){const X=s[_],K=V[_];T[X]=K,ln(K)}if(k===v.length-1&&m){const _=this.testLoop(l,c,o);for(let X=0;X<s.length;++X){const K=s[X],P=_[X];ln(P),I["val_"+K]=P}}}),await x.onBatchEnd(k,T),gx(T),this.stopTraining_)break}C.dispose()}if(await x.onEpochEnd(y,I),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return _L(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),o=s[0],i=s[1],a=this.makeTrainFunction()(o.concat(i)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return It(a),Pn(s[0],t),Pn(s[1],e),Pe(l)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,o=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let r=0;r<o.length;++r)s&&!o[r].trainable||e.push({name:o[r].originalName,tensor:i[r]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=vc().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-vc().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Is(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Is(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const o of e)if(typeof s[o]=="string")t[o]=Is(s[o]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Is(su(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Is(su(t)));{const t={};for(const e in this.metrics)t[e]=Is(su(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=df(t.optimizer_config),s=Cs(e);let o;if(typeof t.loss=="string")o=Mo(t.loss);else if(Array.isArray(t.loss))o=t.loss.map(r=>Mo(r));else if(t.loss!=null){o={};for(const r in t.loss)o[r]=Mo(t.loss[r])}let i;if(Array.isArray(t.metrics))i=t.metrics.map(r=>Mo(r));else if(t.metrics!=null){i={};for(const r in t.metrics)i[r]=Mo(t.metrics[r])}this.compile({loss:o,metrics:i,optimizer:s})}async save(t,e){if(typeof t=="string"){const c=Wv(t);if(c.length===0)throw new G(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new G(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new G("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await o0(this.getNamedWeights(e)),o=!1,i=null,a={modelTopology:this.toJSON(i,o),format:HL,generatedBy:`TensorFlow.js tfjs-layers v${Rx}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:d}=await o0(await this.optimizer.getWeights(),c);s.specs.push(...d),s.data=Fv([s.data,u])}return this.userDefinedMetadata!=null&&(Tx(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,t.save(a)}setUserDefinedMetadata(t){Tx(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ti.className="Model",H(Ti);class Vx extends Ti{}Vx.className="Functional",H(Vx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ta extends Ti{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Pc("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new G(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Ta||t instanceof Ti;let s;if(e){if(s=t,s.outputs.length!==1)throw new G("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new G("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new G("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=JE({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(o)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new G(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new G("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=lx(this.outputs[0])}this.inboundNodes=[],new Uc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Do(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=t.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Rt(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ti({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new kn("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new kn("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new kn("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new kn("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},o=!1){let i,r={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new G("Legacy serialization format not supported yet.");i=e}else S(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=e.layers,delete e.layers,r=e;const a=new t(r);if(!(a instanceof Ta))throw new bt(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of i){const u=Cs(l,void 0,o);o&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(t){if(this.model==null)throw new G("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new G("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Ta.className="Sequential",H(Ta);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ze=class extends gi{getConfig(){return{}}};class _x extends Ze{apply(t,e=1){return WE(t,e)}}_x.className="elu",H(_x);class Ax extends Ze{apply(t){return K0(t)}}Ax.className="selu",H(Ax);class Xx extends Ze{apply(t){return No(t)}}Xx.className="relu",H(Xx);class Ox extends Ze{apply(t){return z(()=>Ah(6,No(t)))}}Ox.className="relu6",H(Ox);class Px extends Ze{apply(t){return t}}Px.className="linear",H(Px);class Zx extends Ze{apply(t){return xi(t)}}Zx.className="sigmoid",H(Zx);class Kx extends Ze{apply(t){return _E(t)}}Kx.className="hardSigmoid",H(Kx);class Bx extends Ze{apply(t){return la(t)}}Bx.className="softplus",H(Bx);class Hx extends Ze{apply(t){return VE(t)}}Hx.className="softsign",H(Hx);class Ux extends Ze{apply(t){return $h(t)}}Ux.className="tanh",H(Ux);let bf=class extends Ze{apply(t,e=-1){return ep(t,e)}};bf.className="softmax",H(bf);class Yx extends Ze{apply(t,e=-1){return _0(t,e)}}Yx.className="logSoftmax",H(Yx);class Qx extends Ze{apply(t,e=1){return z(()=>L(xi(L(t,e)),t))}}Qx.className="swish",H(Qx);class Jx extends Ze{apply(t){return z(()=>L(t,$h(la(t))))}}Jx.className="mish",H(Jx);function Zs(n){return n.getClassName()}function xf(n,t={}){return ma(n,In.getMap().classNameMap,t,"activation")}function Ks(n){if(n==null){const t={};return t.className="linear",t.config={},xf(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},xf(t)}else return n instanceof Ze?n:xf(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function UL(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class jx extends gi{}class qx extends jx{constructor(t){super(),UL(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return z(()=>{let e=xe([1]);return this.hasL1&&(e=Q(e,ut(L(this.l1,Me(t))))),this.hasL2&&(e=Q(e,ut(L(this.l2,xa(t))))),D(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}qx.className="L1L2",H(qx);const t1={l1l2:"L1L2"};function Ft(n){return Xp(n)}function e1(n,t={}){return ma(n,In.getMap().classNameMap,t,"regularizer")}function Yt(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in t1?t1[n]:n,config:{}};return e1(e)}else return n instanceof jx?n:e1(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class n1 extends Ct{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=mt(t);let s=No(t);return this.maxValue!=null&&(s=cn(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}n1.className="ReLU",H(n1);class s1 extends Ct{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=mt(t);return Wh(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}s1.className="LeakyReLU",H(s1);class o1 extends Ct{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Ut(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Yt(t.alphaRegularizer),this.alphaConstraint=me(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new G(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Rt(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)e[o-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let o=1;o<t.length;++o)s[o]=t[o];this.inputSpec=[new pe({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=mt(t),Zh(t,this.alpha.read())}getConfig(){const t={alphaInitializer:jt(this.alphaInitializer),alphaRegularizer:Ft(this.alphaRegularizer),alphaConstraint:fe(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}o1.className="PReLU",H(o1);let i1=class extends Ct{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new bt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=mt(t);return $c(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};i1.className="ELU",H(i1);class r1 extends Ct{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=mt(t);return L(s,ot(un(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}r1.className="ThresholdedReLU",H(r1);class a1 extends Ct{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new bf().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){const s=mt(t);return this.softmax(s,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}a1.className="Softmax",H(a1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ni(n,t,e){if(typeof n=="number")return Do(n,t);if(n.length!==t)throw new G(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const o=n[s];if(!DE(o))throw new G(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${o}`)}return n}function Zn(n,t,e,s,o=1){if(n==null)return n;const i=t+(t-1)*(o-1);let r;return e==="same"?r=n:r=n-i+1,Math.floor((r+s-1)/s)}function os(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+Os([e-t,0]);else if(s==="same")n=n*t;else throw new G(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yf(n,t){return z(()=>(se(t),t==="channelsFirst"?kt(n,[0,2,3,1]):n))}function l1(n,t){return z(()=>(se(t),t==="channelsFirst"?kt(n,[0,2,3,4,1]):n))}function YL(n,t,e,s=1,o="valid",i,r=1){return z(()=>{if(i==null&&(i=An()),se(i),n.shape.length!==3)throw new G(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new G(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new G(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(i==="channelsFirst"&&(n=kt(n,[0,2,1])),o==="causal")throw new bt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=R0(n,t,s,o==="same"?"same":"valid","NWC",r);return e!=null&&(a=Xn(a,e)),a})}function c1(n,t,e,s=[1,1],o="valid",i,r,a=null){return z(()=>{if(i==null&&(i=An()),se(i),n.rank!==3&&n.rank!==4)throw new G(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new G(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=yf(n,i);if(o==="causal")throw new bt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=wR({x:l,filter:t,strides:s,pad:o==="same"?"same":"valid",dilations:r,dataFormat:"NHWC",bias:e,activation:a}),i==="channelsFirst"&&(l=kt(l,[0,3,1,2])),l})}function QL(n,t,e,s=[1,1,1],o="valid",i,r){return z(()=>{if(i==null&&(i=An()),se(i),n.rank!==4&&n.rank!==5)throw new G(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new G(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=l1(n,i);if(o==="causal")throw new bt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=TS(a,t,s,o==="same"?"same":"valid","NDHWC",r),e!=null&&(a=Xn(a,e)),i==="channelsFirst"&&(a=kt(a,[0,4,1,2,3])),a})}class iu extends Ct{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",iu.verifyArgs(e),this.rank=t,ye(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new bt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ni(e.kernelSize,t,"kernelSize"),this.strides=Ni(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,pn(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,se(this.dataFormat),this.activation=Ks(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Ut(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=me(e.biasConstraint),this.biasRegularizer=Yt(e.biasRegularizer),this.activityRegularizer=Yt(e.activityRegularizer),this.dilationRate=Ni(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new G(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new G(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new G(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(ts("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Pp(t.kernelSize,"number",1,3))throw new G(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Zs(this.activation),useBias:this.useBias,biasInitializer:jt(this.biasInitializer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),biasConstraint:fe(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Ri extends iu{constructor(t,e){super(t,e),this.kernel=null,Ri.verifyArgs(e),this.filters=e.filters,ye(this.filters,"filters"),this.kernelInitializer=Ut(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=me(e.kernelConstraint),this.kernelRegularizer=Yt(e.kernelRegularizer)}build(t){t=Rt(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new G(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],o=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return z(()=>{t=mt(t);let s;const o=this.bias==null?null:this.bias.read(),i=Ob(this.activation.getClassName());if(i!=null&&this.rank===2)s=c1(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=YL(t,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=c1(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=QL(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new bt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=Rt(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let i=0;i<s.length;++i){const r=Zn(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);e.push(r)}let o=[t[0]];return this.dataFormat==="channelsLast"?(o=o.concat(e),o.push(this.filters)):(o.push(this.filters),o=o.concat(e)),o}getConfig(){const t={filters:this.filters,kernelInitializer:jt(this.kernelInitializer),kernelRegularizer:Ft(this.kernelRegularizer),kernelConstraint:fe(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new G(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Na extends Ri{constructor(t){super(2,t),Na.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Pp(t.kernelSize,"number",1,2))throw new G(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Na.className="Conv2D",H(Na);class Ra extends Ri{constructor(t){super(3,t),Ra.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new G(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Ra.className="Conv3D",H(Ra);class u1 extends Na{constructor(t){if(super(t),this.inputSpec=[new pe({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new G(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Rt(t),t.length!==4)throw new G("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new G("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pe({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return z(()=>{let s=mt(t);if(s.shape.length!==4)throw new G(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,i=o[0];let r,a;this.dataFormat==="channelsFirst"?(r=2,a=3):(r=1,a=2);const l=o[r],c=o[a],u=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=os(l,h,u,this.padding),m=os(c,p,d,this.padding),g=[i,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=kt(s,[0,2,3,1]));let b=$0(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=kt(b,[0,3,1,2])),this.bias!=null&&(b=Xn(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(t){t=Rt(t);const e=t.slice();let s,o,i;this.dataFormat==="channelsFirst"?(s=1,o=2,i=3):(s=3,o=1,i=2);const r=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[s]=this.filters,e[o]=os(e[o],l,r,this.padding),e[i]=os(e[i],c,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}u1.className="Conv2DTranspose",H(u1);class d1 extends Ra{constructor(t){if(super(t),this.inputSpec=[new pe({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new G(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Rt(t),t.length!==5)throw new G("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new G("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pe({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return z(()=>{let s=mt(t);if(s.shape.length!==5)throw new G(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,i=o[0];let r,a,l;this.dataFormat==="channelsFirst"?(l=2,r=3,a=4):(l=1,r=2,a=3);const c=o[l],u=o[r],d=o[a],h=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],b=this.strides[2],x=os(c,m,h,this.padding),w=os(u,g,p,this.padding),y=os(d,b,f,this.padding),I=[i,x,w,y,this.filters];this.dataFormat!=="channelsLast"&&(s=kt(s,[0,2,3,4,1]));let C=$S(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=kt(C,[0,4,1,2,3])),this.bias!==null&&(C=Xn(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(t){t=Rt(t);const e=t.slice();let s,o,i,r;this.dataFormat==="channelsFirst"?(s=1,o=2,i=3,r=4):(s=4,o=1,i=2,r=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],d=this.strides[1],h=this.strides[2];return e[s]=this.filters,e[o]=os(e[o],u,a,this.padding),e[i]=os(e[i],d,l,this.padding),e[r]=os(e[r],h,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}d1.className="Conv3DTranspose",H(d1);class h1 extends Ri{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new G("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new G("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new G(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ut(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Yt(e.depthwiseRegularizer),this.depthwiseConstraint=me(e.depthwiseConstraint),this.pointwiseInitializer=Ut(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Yt(e.pointwiseRegularizer),this.pointwiseConstraint=me(e.pointwiseConstraint)}build(t){if(t=Rt(t),t.length<this.rank+2)throw new G(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new G(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],o=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let a=0;a<this.rank;++a)i.push(1);i.push(s*this.depthMultiplier,this.filters);const r=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,r,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,r,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,r,this.biasConstraint):this.bias=null,this.inputSpec=[new pe({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return z(()=>{t=mt(t);let s;if(this.rank===1)throw new bt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=kt(t,[0,2,3,1])),s=B0(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Xn(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=kt(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=jt(this.depthwiseInitializer),t.pointwiseInitializer=jt(this.pointwiseInitializer),t.depthwiseRegularizer=Ft(this.depthwiseRegularizer),t.pointwiseRegularizer=Ft(this.pointwiseRegularizer),t.depthwiseConstraint=fe(this.depthwiseConstraint),t.pointwiseConstraint=fe(this.pointwiseConstraint),t}}h1.className="SeparableConv";class p1 extends h1{constructor(t){super(2,t)}}p1.className="SeparableConv2D",H(p1);class ru extends Ri{constructor(t){super(1,t),ru.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Pp(t.kernelSize,"number",1,1))throw new G(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}ru.className="Conv1D",H(ru);class f1 extends Ct{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return z(()=>{if(t=mt(t),this.dataFormat==="channelsLast"){const s=Zc(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Zc(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Zc(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Zc(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}f1.className="Cropping2D",H(f1);class m1 extends Ct{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,se(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,GE(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return z(()=>{let s=mt(t);const o=s.shape;if(this.dataFormat==="channelsFirst"){s=kt(s,[0,2,3,1]);const i=this.size[0]*o[2],r=this.size[1]*o[3],a=this.interpolation==="nearest"?Go.resizeNearestNeighbor(s,[i,r]):Go.resizeBilinear(s,[i,r]);return kt(a,[0,3,1,2])}else{const i=this.size[0]*o[1],r=this.size[1]*o[2];return this.interpolation==="nearest"?Go.resizeNearestNeighbor(s,[i,r]):Go.resizeBilinear(s,[i,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}m1.className="UpSampling2D",H(m1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function JL(n,t,e=[1,1],s="valid",o,i){return z(()=>{o==null&&(o=An()),se(o);let r=yf(n,o);if(n.rank!==4)throw new G(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new G(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return r=Mh(r,t,e,s==="same"?"same":"valid","NHWC",i),o==="channelsFirst"&&(r=kt(r,[0,3,1,2])),r})}class g1 extends iu{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ut(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=me(t.depthwiseConstraint),this.depthwiseRegularizer=Yt(t.depthwiseRegularizer)}build(t){if(t=Rt(t),t.length<4)throw new G(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new G(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],o=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return z(()=>{t=mt(t);let s=JL(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Xn(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=Rt(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=Zn(e,this.kernelSize[0],this.padding,this.strides[0]),r=Zn(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],o,i,r]:[t[0],i,r,o]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=jt(this.depthwiseInitializer),t.depthwiseRegularizer=Ft(this.depthwiseRegularizer),t.depthwiseConstraint=fe(this.depthwiseRegularizer),t}}g1.className="DepthwiseConv2D",H(g1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function b1(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new G("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function o(i){return i==null||Array.isArray(i)?i:[i]}return t=o(t),e=o(e),{inputs:n,initialState:t,constants:e}}function x1(n,t,e,s=!1,o,i,r=!1,a=!1){return z(()=>{const l=t.shape.length;if(l<3)throw new G(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(_n(2,l));if(t=kt(t,c),i!=null)throw new bt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");r&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=ot(ot(o,"bool"),"float32"),o.rank===l-1&&(o=je(o,-1)),o=kt(o,c)),s&&(t=Ro(t,0),o!=null&&(o=Ro(o,0)));const u=[];let d,h=e;const p=t.shape[0],f=$o(t);let m;o!=null&&(m=$o(o));for(let b=0;b<p;++b){const x=f[b],w=z(()=>n(x,h));if(o==null)d=w[0],h=w[1];else{const y=z(()=>{const I=m[b],C=ft(vn(I),I),v=Q(L(w[0],I),L(h[0],C)),k=h.map((T,N)=>Q(L(w[1][N],I),L(T,C)));return{output:v,newStates:k}});d=y.output,h=y.newStates}a&&u.push(d)}let g;return a&&(g=ys(u,1)),[d,g,h]})}class Bs extends Ct{constructor(t){super(t);let e;if(t.cell==null)throw new G("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Cf({cells:t.cell}):e=t.cell,e.stateSize==null)throw new G("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new pe({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return _n(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){nf(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let o;if(this.returnSequences?o=[t[0],t[1],s]:o=[t[0],s],this.returnState){const i=[];for(const r of e)i.push([t[0],r]);return[o].concat(i)}else return o}computeMask(t,e){return z(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const o=this.states.map(i=>null);return[s].concat(o)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new bt("Constants support is not implemented in RNN yet.");nf(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new pe({shape:[e,null,...s]});const o=[t[0]].concat(t.slice(2));this.cell.build(o);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!$t(this.stateSpec.map(r=>r.shape[r.shape.length-1]),i))throw new G(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(r=>new pe({shape:[null,r]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){z(()=>{if(!this.stateful)throw new qn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new G("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>xe([s,o])):this.states_=[xe([s,this.cell.stateSize])];else if(t==null)It(this.states_),this.keptStates!=null&&(It(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>xe([s,o])):this.states_[0]=xe([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new G(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):It(this.states_);for(let o=0;o<this.states_.length;++o){const i=t[o],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,a=[s,r];if(!$t(i.shape,a))throw new G(`State ${o} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>ln(o.clone()))})}apply(t,e){let s=e==null?null:e.initialState,o=e==null?null:e.constants;e==null&&(e={});const i=b1(t,s,o,this.numConstants);t=i.inputs,s=i.initialState,o=i.constants;let r=[],a=[];if(s!=null){e.initialState=s,r=r.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new pe({shape:c.shape}));a=a.concat(this.stateSpec)}if(o!=null&&(e.constants=o,r=r.concat(o),this.numConstants=o.length),r[0]instanceof ss){const c=[t].concat(r),u=this.inputSpec.concat(a),d=this.inputSpec;this.inputSpec=u;const h=super.apply(c,e);return this.inputSpec=d,h}else return super.apply(t,e)}call(t,e){return z(()=>{const s=e==null?null:e.mask,o=e==null?null:e.training;let i=e==null?null:e.initialState;t=mt(t),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(t));const r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==r)throw new G(`RNN Layer has ${r} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:o},c=x1((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},t,i,this.goBackwards,s,null,this.unroll,this.returnSequences),u=c[0],d=c[1],h=c[2];this.stateful&&this.resetStates(h,o);const p=this.returnSequences?d:u;return this.returnState?[p].concat(h):p})}getInitialState(t){return z(()=>{let e=xe(t.shape);return e=ut(e,[1,2]),e=ba(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Hp(e,[1,s]):e):this.cell.stateSize>1?[Hp(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Bs.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const o=e.cell,i=Cs(o,s);return new t(Object.assign(e,{cell:i}))}}Bs.className="RNN",H(Bs);class au extends Ct{}class wf extends au{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ye(this.units,"units"),this.activation=Ks(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ut(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ut(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ut(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Yt(t.kernelRegularizer),this.recurrentRegularizer=Yt(t.recurrentRegularizer),this.biasRegularizer=Yt(t.biasRegularizer),this.kernelConstraint=me(t.kernelConstraint),this.recurrentConstraint=me(t.recurrentConstraint),this.biasConstraint=me(t.biasConstraint),this.dropout=Si([1,Os([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Si([1,Os([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Rt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return z(()=>{if(t=t,t.length!==2)throw new G(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const o=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Hs({ones:()=>vn(t),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Hs({ones:()=>vn(s),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let i;const r=this.dropoutMask,a=this.recurrentDropoutMask;r!=null?i=ns(L(t,r),this.kernel.read()):i=ns(t,this.kernel.read()),this.bias!=null&&(i=Xn(i,this.bias.read())),a!=null&&(s=L(s,a));let l=Q(i,ns(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Zs(this.activation),useBias:this.useBias,kernelInitializer:jt(this.kernelInitializer),recurrentInitializer:jt(this.recurrentInitializer),biasInitializer:jt(this.biasInitializer),kernelRegularizer:Ft(this.kernelRegularizer),recurrentRegularizer:Ft(this.recurrentRegularizer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),kernelConstraint:fe(this.kernelConstraint),recurrentConstraint:fe(this.recurrentConstraint),biasConstraint:fe(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}wf.className="SimpleRNNCell",H(wf);class y1 extends Bs{constructor(t){t.cell=new wf(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(It(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(It(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,o=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:o,initialState:i})})}static fromConfig(t,e){return new t(e)}}y1.className="SimpleRNN",H(y1);class If extends au{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new G("GRUCell does not support reset_after parameter set to true.");this.units=t.units,ye(this.units,"units"),this.activation=Ks(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ks(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ut(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ut(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ut(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Yt(t.kernelRegularizer),this.recurrentRegularizer=Yt(t.recurrentRegularizer),this.biasRegularizer=Yt(t.biasRegularizer),this.kernelConstraint=me(t.kernelConstraint),this.recurrentConstraint=me(t.recurrentConstraint),this.biasConstraint=me(t.biasConstraint),this.dropout=Si([1,Os([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Si([1,Os([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Rt(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return z(()=>{if(t=t,t.length!==2)throw new G(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let o=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Hs({ones:()=>vn(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Hs({ones:()=>vn(o),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,r=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(t=L(t,i[0]));let u=ns(t,this.kernel.read());this.useBias&&(u=Xn(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,r[0]));const d=this.recurrentKernel.read(),[h,p]=dn(d,[2*this.units,this.units],d.rank-1),f=ns(o,h),[m,g,b]=dn(u,3,u.rank-1),[x,w]=dn(f,2,f.rank-1);a=this.recurrentActivation.apply(Q(m,x)),l=this.recurrentActivation.apply(Q(g,w));const y=ns(L(l,o),p);c=this.activation.apply(Q(b,y));const I=Q(L(a,o),L(Q(1,ae(a)),c));return[I,I]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Zs(this.activation),recurrentActivation:Zs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:jt(this.kernelInitializer),recurrentInitializer:jt(this.recurrentInitializer),biasInitializer:jt(this.biasInitializer),kernelRegularizer:Ft(this.kernelRegularizer),recurrentRegularizer:Ft(this.recurrentRegularizer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),kernelConstraint:fe(this.kernelConstraint),recurrentConstraint:fe(this.recurrentConstraint),biasConstraint:fe(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}If.className="GRUCell",H(If);class w1 extends Bs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new If(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(It(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(It(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,o=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:o,initialState:i})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}w1.className="GRU",H(w1);class lu extends au{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ye(this.units,"units"),this.activation=Ks(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ks(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ut(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ut(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ut(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Yt(t.kernelRegularizer),this.recurrentRegularizer=Yt(t.recurrentRegularizer),this.biasRegularizer=Yt(t.biasRegularizer),this.kernelConstraint=me(t.kernelConstraint),this.recurrentConstraint=me(t.recurrentConstraint),this.biasConstraint=me(t.biasConstraint),this.dropout=Si([1,Os([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Si([1,Os([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Rt(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,r=this.units;o=new(e=class extends Tn{apply(l,c){const u=i.apply([r]),d=new Yp().apply([r]),h=i.apply([r*2]);return Yb(Yb(u,d),h)}},e.className="CustomInit",e)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return z(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new G(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=t[1];const i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Hs({ones:()=>vn(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Hs({ones:()=>vn(o),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,d;0<this.dropout&&this.dropout<1&&(t=L(t,r[0]));let h=ns(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,a[0])),h=Q(h,ns(o,this.recurrentKernel.read())),this.useBias&&(h=Xn(h,this.bias.read()));const[p,f,m,g]=dn(h,4,h.rank-1);l=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),u=Q(L(c,i),L(l,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const b=L(d,this.activation.apply(u));return[b,b,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Zs(this.activation),recurrentActivation:Zs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:jt(this.kernelInitializer),recurrentInitializer:jt(this.recurrentInitializer),biasInitializer:jt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ft(this.kernelRegularizer),recurrentRegularizer:Ft(this.recurrentRegularizer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),kernelConstraint:fe(this.kernelConstraint),recurrentConstraint:fe(this.recurrentConstraint),biasConstraint:fe(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}lu.className="LSTMCell",H(lu);class I1 extends Bs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new lu(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(It(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(It(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,o=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:o,initialState:i})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}I1.className="LSTM",H(I1);class Cf extends au{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return z(()=>{t=t;let s=t.slice(1);const o=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?o.push(s.splice(0,a.stateSize.length)):o.push(s.splice(0,1));o.reverse();const i=[];let r;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=o[a],a===0?r=[t[0]].concat(s):r=[r[0]].concat(s),r=l.call(r,e),i.push(r.slice(1))}s=[];for(const a of i.slice().reverse())s.push(...a);return[r[0]].concat(s)})}build(t){nf(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,o)=>{Fo(`RNNCell_${o}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=i=>({className:i.getClassName(),config:i.getConfig()}),o={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),o)}static fromConfig(t,e,s={}){const o=[];for(const i of e.cells)o.push(Cs(i,s));return new t({cells:o})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return sf(t)}setWeights(t){const e=[];for(const s of this.cells){const o=s.weights.length,i=t.splice(o);for(let r=0;r<s.weights.length;++r)e.push([s.weights[r],i[r]])}of(e)}}Cf.className="StackedRNNCells",H(Cf);function Hs(n){const{ones:t,rate:e,training:s=!1,count:o=1,dropoutFunc:i}=n,r=()=>i!=null?i(t(),e):Jb(t(),e),a=()=>ya(r,t,s);return!o||o<=1?ln(a().clone()):Array(o).fill(void 0).map(a).map(c=>ln(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var jL=globalThis&&globalThis.__rest||function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,s=Object.getOwnPropertySymbols(n);o<s.length;o++)t.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(n,s[o])&&(e[s[o]]=n[s[o]]);return e};class C1 extends Bs{constructor(t){if(t.unroll)throw new bt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new bt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new pe({ndim:5})]}call(t,e){return z(()=>{if(this.cell.dropoutMask!=null&&(It(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(It(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new G("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,o=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:o,initialState:i})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return z(()=>{const{stateSize:e}=this.cell,s=t.shape,o=this.computeSingleOutputShape(s),i=[o[0],...o.slice(2)],r=xe(i);return Array.isArray(e)?Array(e.length).fill(r):[r]})}resetStates(t,e=!1){z(()=>{if(!this.stateful)throw new qn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,o=this.computeSingleOutputShape(s),i=[o[0],...o.slice(2)];if(s[0]==null)throw new G("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xe(i)):this.states_=[xe(i)];else if(t==null)It(this.states_),this.keptStates!=null&&(It(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xe(i)):this.states_[0]=xe(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new G(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):It(this.states_);for(let a=0;a<this.states_.length;++a){const l=t[a],c=i;if(!$t(l.shape,c))throw new G(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>ln(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:o,padding:i,strides:r,dilationRate:a}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],d=Zn(c,o[0],i,r[0],a[0]),h=Zn(u,o[1],i,r[1],a[1]);return[...t.slice(0,2),...l?[s,d,h]:[d,h,s]]}}C1.className="ConvRNN2D";class vf extends lu{constructor(t){const{filters:e,kernelSize:s,strides:o,padding:i,dataFormat:r,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,ye(this.filters,"filters"),this.kernelSize=Ni(s,2,"kernelSize"),this.kernelSize.forEach(l=>ye(l,"kernelSize")),this.strides=Ni(o||1,2,"strides"),this.strides.forEach(l=>ye(l,"strides")),this.padding=i||"valid",pn(this.padding),this.dataFormat=r||"channelsLast",se(this.dataFormat),this.dilationRate=Ni(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>ye(l,"dilationRate"))}build(t){var e;t=Rt(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new G(`The channel dimension of the input should be defined. Found ${t[s]}`);const o=t[s],i=4,r=this.kernelSize.concat([o,this.filters*i]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(e=class extends Tn{apply(h,p){const f=c.apply([u]),m=So([u]),g=c.apply([u*2]);return Bp([f,m,g])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return z(()=>{if(t.length!==3)throw new G(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,o=t[0],i=t[1],r=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Hs({ones:()=>vn(o),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(U,Y,j)=>!Y||!Y[j]?U:L(Y[j],U);let u=c(o,l,0),d=c(o,l,1),h=c(o,l,2),p=c(o,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Hs({ones:()=>vn(i),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=c(i,f,0),g=c(i,f,1),b=c(i,f,2),x=c(i,f,3);const w=3,[y,I,C,v]=dn(this.kernel.read(),a,w),[k,T,N,$]=this.useBias?dn(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,y,k,this.padding),d=this.inputConv(d,I,T,this.padding),h=this.inputConv(h,C,N,this.padding),p=this.inputConv(p,v,$,this.padding);const[F,W,V,_]=dn(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,F),g=this.recurrentConv(g,W),b=this.recurrentConv(b,V),x=this.recurrentConv(x,_);const X=this.recurrentActivation.apply(Q(u,m)),K=this.recurrentActivation.apply(Q(d,g)),P=Q(L(K,r),L(X,this.activation.apply(Q(h,b)))),B=L(this.recurrentActivation.apply(Q(p,x)),this.activation.apply(P));return[B,B,P]})}getConfig(){const t=super.getConfig(),e=jL(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),s)}inputConv(t,e,s,o){const i=vo(t,e,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Xn(i,s,this.dataFormat):i}recurrentConv(t,e){return vo(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}vf.className="ConvLSTM2DCell",H(vf);class v1 extends C1{constructor(t){const e=new vf(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}v1.className="ConvLSTM2D",H(v1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kf extends Ct{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let o=0;o<this.noiseShape.length;++o)s.push(this.noiseShape[o]==null?e[o]:this.noiseShape[o]);return s}call(t,e){return z(()=>{this.invokeCallHook(t,e);const s=mt(t);if(0<this.rate&&this.rate<1){const o=e.training==null?!1:e.training,i=this.getNoiseShape(s);return ya(()=>Jb(s,this.rate,i,this.seed),()=>s,o)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}kf.className="Dropout",H(kf);class k1 extends kf{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}k1.className="SpatialDropout1D",H(k1);class S1 extends Ct{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,ye(this.units,"units"),this.activation=Ks(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Ut(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ut(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=me(t.kernelConstraint),this.biasConstraint=me(t.biasConstraint),this.kernelRegularizer=Yt(t.kernelRegularizer),this.biasRegularizer=Yt(t.biasRegularizer),this.activityRegularizer=Yt(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Rt(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Rt(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return z(()=>{this.invokeCallHook(t,e);const s=mt(t),o=Ob(this.activation.getClassName());let i;return o!=null?i=ns(s,this.kernel.read(),o,this.bias?this.bias.read():null):(i=ns(s,this.kernel.read()),this.bias!=null&&(i=Xn(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const t={units:this.units,activation:Zs(this.activation),useBias:this.useBias,kernelInitializer:jt(this.kernelInitializer),biasInitializer:jt(this.biasInitializer),kernelRegularizer:Ft(this.kernelRegularizer),biasRegularizer:Ft(this.biasRegularizer),activityRegularizer:Ft(this.activityRegularizer),kernelConstraint:fe(this.kernelConstraint),biasConstraint:fe(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}S1.className="Dense",H(S1);class T1 extends Ct{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Rt(t);for(const e of t.slice(1))if(e==null)throw new G(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Xs(t,1)]}call(t,e){return z(()=>{this.invokeCallHook(t,e);let s=mt(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const o=[0];for(let i=2;i<s.rank;++i)o.push(i);o.push(1),s=kt(s,o)}return FE(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}T1.className="Flatten",H(T1);class N1 extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.activation=Ks(t.activation)}call(t,e){return z(()=>{this.invokeCallHook(t,e);const s=mt(t);return this.activation.apply(s)})}getConfig(){const t={activation:Zs(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}N1.className="Activation",H(N1);class R1 extends Ct{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return z(()=>(t=mt(t),ME(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}R1.className="RepeatVector",H(R1);class $1 extends Ct{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",o=e.slice();let i=1,r=null;for(let l=0;l<o.length;++l){const c=o[l];if(this.isUnknown(c))if(r===null)r=l;else throw new G("Can only specifiy one unknown dimension.");else i*=c}const a=Xs(t);if(r!==null){if(i===0||a%i!==0)throw new G(s);o[r]=a/i}else if(a!==i)throw new G(s);return o}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return z(()=>{this.invokeCallHook(t,e);const s=mt(t),o=s.shape,i=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return D(s,i)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}$1.className="Reshape",H($1);class G1 extends Ct{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=_n(1,t.dims.length+1);if(!$t(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new pe({ndim:this.dims.length+1})]}computeOutputShape(t){t=Rt(t);const e=t.slice();return this.dims.forEach((s,o)=>{e[o+1]=t[s]}),e}call(t,e){return kt(mt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}G1.className="Permute",H(G1);class E1 extends Ct{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=mt(t),o=-1;return Sh(Dc(s,this.maskValue),o)}call(t,e){return z(()=>{this.invokeCallHook(t,e);const s=mt(t),o=-1,i=!0,r=Sh(Dc(s,this.maskValue),o,i);return L(s,ot(r,s.dtype))})}}E1.className="Masking",H(E1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class L1 extends Ct{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Bt(t.inputLength))}this.inputDim=t.inputDim,ye(this.inputDim,"inputDim"),this.outputDim=t.outputDim,ye(this.outputDim,"outputDim"),this.embeddingsInitializer=Ut(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Yt(t.embeddingsRegularizer),this.activityRegularizer=Yt(t.activityRegularizer),this.embeddingsConstraint=me(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return z(()=>this.maskZero?(t=mt(t),Dc(t,St(t))):null)}computeOutputShape(t){if(t=Rt(t),this.inputLength==null)return[...t,this.outputDim];const e=Bt(this.inputLength);if(e.length!==t.length-1)throw new G(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let o=0;o<e.length;++o){const i=e[o],r=t[o+1];if(i!=null&&r!=null&&i!==r)throw new G(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);i==null&&(e[s]=r),s++}}return[t[0],...e,this.outputDim]}call(t,e){return z(()=>{this.invokeCallHook(t,e);let s=mt(t);s.dtype!=="int32"&&(s=es(s,"int32"));const o=Qb(this.embeddings.read(),D(s,[s.size]));return D(o,Rt(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:jt(this.embeddingsInitializer),embeddingsRegularizer:Ft(this.embeddingsRegularizer),activityRegularizer:Ft(this.activityRegularizer),embeddingsConstraint:fe(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}L1.className="Embedding",H(L1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _o extends Ct{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new bt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let o=0;o<e.length;++o){const i=t[t.length-e.length+o],r=e[o];if(i==null||r==null||i<0||r<0)s.push(null);else if(i===1)s.push(r);else if(r===1)s.push(i);else{if(i!==r)throw new G("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(i)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Rt(t)]),t=t,t.length<2)throw new G(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const i of t)i!=null&&i[0]!==null&&e.push(i[0]);if(e=As(e),e.length>1)throw new G(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let i=1;i<t.length;++i){const r=t[i]==null?null:t[i].slice(1);s=this.computeElementwiseOpOutputShape(s,r)}const o=t.map(i=>i.length);t.indexOf(null)===-1&&As(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return z(()=>{if(t=t,this.reshapeRequired){const s=[],o=t.map(i=>i.rank);if(o.indexOf(null)===-1){const i=Os(o);for(let r of t){const a=r.rank;for(let l=0;l<i-a;++l)r=ba(r,1);s.push(r)}return this.mergeFunction(s)}else{let i=!1;for(const l of t){const c=l.rank;if(c==null){const u=l.shape,d=u[0],h=u.slice(1).concat([d]);let p=D(l,[d].concat(Xs(u.slice(1))));p=kt(p,[1,0]),p=D(p,h),s.push(p),i=!0}else if(c>1){const u=_n(1,c).concat([0]);s.push(kt(l,u)),i=!0}else s.push(l)}let r=this.mergeFunction(s);const a=r.rank;if(i){if(a==null){const l=r.shape,c=l.length,u=l[c-1],d=[u].concat(l.slice(0,l.length-1));r=D(kt(D(r,[-1,u]),[1,0]),d)}else if(a>1){const l=[a-1].concat(_n(0,a-1));r=kt(r,l)}}return r}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let o=1;o<t.length;++o){const i=t[o]==null?null:t[o].slice(1);e=this.computeElementwiseOpOutputShape(e,i)}let s=[];for(const o of t)o!=null&&o[0]!==null&&s.push(o[0]);return s=As(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return z(()=>{if(e==null)return null;if(!Array.isArray(e))throw new G("`mask` should be an Array");if(!Array.isArray(t))throw new G("`inputs` should be an Array");if(e.length!==t.length)throw new G(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(o=>o==null))return null;e=e.map(o=>o==null?o:je(o,0));let s=e[0];for(let o=1;o<e.length-1;++o)s=xs(s,e[o]);return s})}}class D1 extends _o{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=Q(e,t[s]);return e})}}D1.className="Add",H(D1);class M1 extends _o{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=L(e,t[s]);return e})}}M1.className="Multiply",H(M1);class z1 extends _o{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=Q(e,t[s]);return L(1/t.length,e)})}}z1.className="Average",H(z1);class F1 extends _o{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Vs(e,t[s]);return e})}}F1.className="Maximum",H(F1);class W1 extends _o{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Ah(e,t[s]);return e})}}W1.className="Minimum",H(W1);class V1 extends _o{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new G("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const o of t)if(o!=null){e=!1;break}if(e)return;const s=[];for(let o=0;o<t.length;++o){const i=t[o].slice();i.splice(this.axis,1);let r=!1;for(const a of s)if($t(a,i)){r=!0;break}r||s.push(i)}if(s.length>1)throw new G("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return z(()=>Bp(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new G("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),o=this.axis<0?s.length+this.axis:this.axis;for(const i of e.slice(1)){if(s[o]==null||i[o]==null){s[o]=null;break}s[o]+=i[o]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new G("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new G("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new G(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return z(()=>{let s=!0;if(e.forEach(r=>{if(r!=null){s=!1;return}}),s)return null;const o=[];for(let r=0;r<t.length;++r)e[r]==null?o.push(ot(vn(t[r]),"bool")):e[r].rank<t[r].rank?o.push(je(e[r],-1)):o.push(e[r]);const i=Oe(o,this.axis);return N0(i,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}V1.className="Concatenate",H(V1);function $a(n,t){for(;n<0;)n+=t;return n}function qL(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new bt("batchDot is not implemented for tensors of 4D or higher rank yet");if(S(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),S(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new bt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,o=t.shape.length;e==null&&(e=[s-1,o-2]);const i=e;return z(()=>{let r;if(s>o){r=s-o;const l=[];for(let c=0;c<r;++c)l.push(1);t=D(t,t.shape.concat(l))}else if(o>s){r=o-s;const l=[];for(let c=0;c<r;++c)l.push(1);n=D(n,n.shape.concat(l))}else r=0;let a;if(n.shape.length===2&&t.shape.length===2)i[0]===i[1]?a=ut(L(n,t),i[0]):a=ut(L(kt(n,[1,0]),t),i[1]);else{const l=i[0]!==n.shape.length-1,c=i[1]===t.shape.length-1;a=Gt(n,t,l,c)}if(r>0){let l;s>o?l=s+o-3:l=s-1;const c=[];for(let u=l;u<l+r;++u)c.push(u);a=ua(a,c)}return a.shape.length===1&&(a=je(a,1)),a})}class _1 extends _o{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){S(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new bt("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(e,s);if(e[o[0]]!==s[o[1]])throw new G(`Dimension incompatibility: ${e[o[0]]} !== ${s[o[1]]}`)}mergeFunction(t){if(t.length!==2)throw new G(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],o;return Array.isArray(this.axes)?o=this.axes.map((i,r)=>$a(i,t[r].shape.length)):o=[$a(this.axes,e.shape.length),$a(this.axes,s.shape.length)],this.normalize&&(e=Jc(e,o[0]),s=Jc(s,o[1])),qL(e,s,o)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[$a(this.axes,t.length),$a(this.axes,e.length)],s}computeOutputShape(t){S(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new bt("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(e,s);e.splice(o[0],1),s.splice(o[1],1),s.splice(0,1);const i=e.concat(s);return i.length===1&&i.push(1),i}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}_1.className="Dot",H(_1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class A1 extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return z(()=>{this.invokeCallHook(t,e);const s=mt(t);return ya(()=>Q(Kc(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}A1.className="GaussianNoise",H(A1);class X1 extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return z(()=>{this.invokeCallHook(t,e);const s=mt(t);return this.rate>0&&this.rate<1?ya(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return L(s,Kc(s.shape,1,i))},()=>s,e.training||!1):s})}}X1.className="GaussianDropout",H(X1);class O1 extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||mt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return z(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return ya(()=>{const i=mt(t),r=1.6732632423543772,a=1.0507009873554805,l=-r*a;let c=ko(Mc(s),this.rate);c=es(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,d=-u*l*this.rate,h=Q(L(i,c),L(Q(c,-1),l));return Q(L(h,u),d)},()=>mt(t),e.training||!1)}return t})}}O1.className="AlphaDropout",H(O1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ga(n,t,e,s,o,i=.001){let r;if(n.rank===2)r=nS(n,t,e,s,o,i);else if(n.rank===3)r=oS(n,t,e,s,o,i);else if(n.rank===4)r=rS(n,t,e,s,o,i);else throw new bt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return r}function t3(n,t,e,s,o=.001){return z(()=>{const i=Xh(n,s),r=i.mean,a=i.variance;return[Ga(n,r,a,e,t,o),r,a]})}function e3(n,t,e,s,o=.001){return z(()=>{const i=Xh(n,s),r=i.mean,a=i.variance,l=[];for(const f of _n(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const c=D(r,l),u=D(a,l),d=t==null?null:D(t,l),h=e==null?null:D(e,l);return[Ga(n,c,u,h,d,o),r,a]})}function n3(n,t,e,s,o=.001){return $t(s.slice().sort(),_n(0,n.rank-1))?t3(n,t,e,s,o):e3(n,t,e,s,o)}class P1 extends Ct{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ut(t.betaInitializer||"zeros"),this.gammaInitializer=Ut(t.gammaInitializer||"ones"),this.movingMeanInitializer=Ut(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ut(t.movingVarianceInitializer||"ones"),this.betaConstraint=me(t.betaConstraint),this.gammaConstraint=me(t.gammaConstraint),this.betaRegularizer=Yt(t.betaRegularizer),this.gammaRegularizer=Yt(t.gammaRegularizer)}build(t){t=Rt(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new G(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new pe({ndim:t.length,axes:{[e]:s}})];const o=[s];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return z(()=>{const s=e.training==null?!1:e.training,o=mt(t),i=o.shape,r=i.length,a=_n(0,r),l=this.axis>=0?this.axis:this.axis+r;a.splice(l,1);const c=Do(1,r);c[l]=i[l];const u=a.slice();u.sort();const d=!$t(u,_n(0,r).slice(0,r-1)),h=()=>{if(d){const x=D(this.movingMean.read(),c),w=D(this.movingVariance.read(),c),y=this.center?D(this.beta.read(),c):null,I=this.scale?D(this.gamma.read(),c):null;return Ga(o,x,w,y,I,this.epsilon)}else return Ga(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[p,f,m]=n3(o,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(x,w,y)=>{z(()=>{const I=1-y,C=x.read(),v=L(ft(C,w),I);x.write(ft(C,v))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:jt(this.betaInitializer),gammaInitializer:jt(this.gammaInitializer),movingMeanInitializer:jt(this.movingMeanInitializer),movingVarianceInitializer:jt(this.movingVarianceInitializer),betaRegularizer:Ft(this.betaRegularizer),gammaRegularizer:Ft(this.gammaRegularizer),betaConstraint:fe(this.betaConstraint),gammaConstraint:fe(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}P1.className="BatchNormalization",H(P1);class Z1 extends Ct{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ut(t.betaInitializer||"zeros"),this.gammaInitializer=Ut(t.gammaInitializer||"ones"),this.betaRegularizer=Yt(t.betaRegularizer),this.gammaRegularizer=Yt(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Rt(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=e);for(const i of this.axis)if(i<0||i>=e)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==As(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>t[i]),o=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(t,e){const s=mt(t),o=s.shape,i=o.length;return z(()=>{let{mean:a,variance:l}=Xh(s,this.axis,!0);const c=Do(1,i);for(const m of this.axis)c[m]=o[m];const u=m=>m!=null&&m.shape.length!==i?D(m,c):m;let d=this.scale?u(this.gamma.read()):null,h=this.center?u(this.beta.read()):null;const p=[],f=[];for(let m=0;m<i;++m)this.axis.indexOf(m)!==-1?(p.push(o[m]),f.push(1)):(p.push(1),f.push(o[m]));return a=Wn(a,p),l=Wn(l,p),d!=null&&(d=Wn(d,f)),h!=null&&(h=Wn(h,f)),Ga(s,a,l,h,d,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:jt(this.betaInitializer),gammaInitializer:jt(this.gammaInitializer),betaRegularizer:Ft(this.betaRegularizer),gammaRegularizer:Ft(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Z1.className="LayerNormalization",H(Z1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s3(n,t,e){return z(()=>{if(n.rank!==4)throw new G(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new G("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=An()),e!=="channelsLast"&&e!=="channelsFirst")throw new G(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Oh(n,s)})}class K1 extends Ct{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?An():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new G(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new G(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new G(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new pe({ndim:4})]}computeOutputShape(t){t=Rt(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return z(()=>s3(mt(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}K1.className="ZeroPadding2D",H(K1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cu(n,t,e,s,o,i){return z(()=>{se(o),Zb(i),pn(s),e==null&&(e=[1,1]),s==null&&(s="valid"),o==null&&(o=An()),i==null&&(i="max"),n=yf(n,o);let r;const a=s==="same"?"same":"valid";return i==="max"?r=_h(n,t,e,a):r=Rh(n,t,e,a),o==="channelsFirst"&&(r=kt(r,[0,3,1,2])),r})}function B1(n,t,e,s,o,i){return z(()=>{se(o),Zb(i),pn(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),o==null&&(o=An()),i==null&&(i="max"),n=l1(n,o);let r;const a=s==="same"?"same":"valid";return i==="max"?r=PT(n,t,e,a):r=Hk(n,t,e,a),o==="channelsFirst"&&(r=kt(r,[0,4,1,2,3])),r})}class H1 extends Ct{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new G(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(ye(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new G(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);ye(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,pn(this.padding),this.inputSpec=[new pe({ndim:3})]}computeOutputShape(t){t=Rt(t);const e=Zn(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return z(()=>{this.invokeCallHook(t,e),t=ba(mt(t),2);const s=this.poolingFunction(mt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ua(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class U1 extends H1{constructor(t){super(t)}poolingFunction(t,e,s,o,i){return se(i),pn(o),cu(t,e,s,o,i,"max")}}U1.className="MaxPooling1D",H(U1);class Y1 extends H1{constructor(t){super(t)}poolingFunction(t,e,s,o,i){return se(i),pn(o),cu(t,e,s,o,i,"avg")}}Y1.className="AveragePooling1D",H(Y1);class Q1 extends Ct{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new G(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];ye(this.poolSize,"poolSize"),ye(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,se(this.dataFormat),pn(this.padding),this.inputSpec=[new pe({ndim:4})]}computeOutputShape(t){t=Rt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Zn(e,this.poolSize[0],this.padding,this.strides[0]),s=Zn(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return z(()=>(this.invokeCallHook(t,e),this.poolingFunction(mt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class J1 extends Q1{constructor(t){super(t)}poolingFunction(t,e,s,o,i){return se(i),pn(o),cu(t,e,s,o,i,"max")}}J1.className="MaxPooling2D",H(J1);class j1 extends Q1{constructor(t){super(t)}poolingFunction(t,e,s,o,i){return se(i),pn(o),cu(t,e,s,o,i,"avg")}}j1.className="AveragePooling2D",H(j1);class q1 extends Ct{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new G(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];ye(this.poolSize,"poolSize"),ye(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,se(this.dataFormat),pn(this.padding),this.inputSpec=[new pe({ndim:5})]}computeOutputShape(t){t=Rt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Zn(e,this.poolSize[0],this.padding,this.strides[0]),s=Zn(s,this.poolSize[1],this.padding,this.strides[1]),o=Zn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,o]:[t[0],e,s,o,t[4]]}call(t,e){return z(()=>(this.invokeCallHook(t,e),this.poolingFunction(mt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ty extends q1{constructor(t){super(t)}poolingFunction(t,e,s,o,i){return se(i),pn(o),B1(t,e,s,o,i,"max")}}ty.className="MaxPooling3D",H(ty);class ey extends q1{constructor(t){super(t)}poolingFunction(t,e,s,o,i){return se(i),pn(o),B1(t,e,s,o,i,"avg")}}ey.className="AveragePooling3D",H(ey);class ny extends Ct{constructor(t){super(t),this.inputSpec=[new pe({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new bt}}class sy extends ny{constructor(t){super(t||{})}call(t,e){return z(()=>{const s=mt(t);return ce(s,1)})}}sy.className="GlobalAveragePooling1D",H(sy);class oy extends ny{constructor(t){super(t||{})}call(t,e){return z(()=>{const s=mt(t);return Fn(s,1)})}}oy.className="GlobalMaxPooling1D",H(oy);class iy extends Ct{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,se(this.dataFormat),this.inputSpec=[new pe({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new bt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ry extends iy{call(t,e){return z(()=>{const s=mt(t);return this.dataFormat==="channelsLast"?ce(s,[1,2]):ce(s,[2,3])})}}ry.className="GlobalAveragePooling2D",H(ry);class ay extends iy{call(t,e){return z(()=>{const s=mt(t);return this.dataFormat==="channelsLast"?Fn(s,[1,2]):Fn(s,[2,3])})}}ay.className="GlobalMaxPooling2D",H(ay);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ly extends Ct{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const o=e.layer,i=Cs(o,s);delete e.layer;const r={layer:i};return Object.assign(r,e),new t(r)}}class cy extends ly{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Rt(t),t.length<3)throw new G(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Rt(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),o=t[1];return[s[0],o].concat(s.slice(1))}call(t,e){return z(()=>(t=mt(t),x1((r,a)=>[mt(this.layer.call(r,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}cy.className="TimeDistributed",H(cy);function o3(n){zo($E,"BidirectionalMergeMode",n)}const i3="concat";class uy extends ly{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=Cs(s),e.goBackwards=e.goBackwards!==!0;const o={};if(o.className=t.layer.getClassName(),o.config=e,this.backwardLayer=Cs(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?i3:t.mergeMode,o3(this.mergeMode),t.weights)throw new bt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,o,i;return this.returnState&&(i=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,o=[s]):this.mergeMode==null?o=[s,s.slice()]:o=[s],this.returnState?this.mergeMode==null?o.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):Pe(o)}apply(t,e){let s=e==null?null:e.initialState,o=e==null?null:e.constants;e==null&&(e={});const i=b1(t,s,o,this.numConstants);if(t=i.inputs,s=i.initialState,o=i.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&o==null)return super.apply(t,e);const r=[],a=[];if(s!=null){const c=s.length;if(c%2>0)throw new G("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,r.push(...s);const u=s.map(d=>new pe({shape:d.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(o!=null)throw new bt("Support for constants in Bidirectional layers is not implemented yet.");const l=r[0]instanceof ss;for(const c of r)if(c instanceof ss!==l)throw new G("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[t].concat(r),u=this.inputSpec.concat(a),d=this.inputSpec;this.inputSpec=u;const h=super.apply(c,e);return this.inputSpec=d,h}else return super.apply(t,e)}call(t,e){return z(()=>{const s=e.initialState;let o,i;if(s==null)o=this.forwardLayer.call(t,e),i=this.backwardLayer.call(t,e);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);o=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),i=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let r;this.returnState&&(Array.isArray(o)&&(r=o.slice(1).concat(i.slice(1))),o=o[0],i=i[0]),this.returnSequences&&(i=Ro(i,1));let a;return this.mergeMode==="concat"?a=Bp([o,i]):this.mergeMode==="sum"?a=Q(o,i):this.mergeMode==="ave"?a=L(.5,Q(o,i)):this.mergeMode==="mul"?a=L(o,i):this.mergeMode==null&&(a=[o,i]),this.returnState?this.mergeMode==null?a.concat(r):[a].concat(r):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Fo(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Fo(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(r=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=Cs(e.layer);if(delete e.layer,e.numConstants!=null)throw new bt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=e;return o.layer=s,new t(o)}}uy.className="Bidirectional",H(uy);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class dy extends Ct{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return z(()=>(t=mt(t),t.dtype!=="float32"&&(t=es(t,"float32")),Q(L(t,this.scale),this.offset)))}}dy.className="Rescaling",H(dy);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:r3,cropAndResize:a3}=Go;class hy extends Ct{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,o,i,r,a,l){return z(()=>{let c,u=!1;const d=e/r,h=s/a,p=(o+e)/r,f=(i+s)/a,m=[d,h,p,f],g=[];t.rank===3?(u=!0,c=ys([t])):c=t;for(let I=0;I<c.shape[0];I++)g.push(m);const b=an(g,[g.length,4]),x=ca(0,g.length,1,"int32"),y=a3(c,b,x,[o,i],"nearest");return es(u?mt($o(y)):y,l)})}upsize(t,e,s,o){return z(()=>{const i=r3(t,[e,s]);return es(i,o)})}call(t,e){return z(()=>{const s=mt(t),o=s.dtype,i=s.shape,r=i[i.length-3],a=i[i.length-2];let l=0;r!==this.height&&(l=Math.floor((r-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,r,a,o):this.upsize(t,this.height,this.width,o)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Rt(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}hy.className="CenterCrop",H(hy);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l3(n,t,e,s){let o=mt(n);if(o.dtype!=="int32"&&(o=es(o,"int32")),t==="int")return o;const i=o.shape;if(o.rank===0&&(o=je(o,-1)),t==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=je(o,-1)),o.rank>2)throw new G(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${o.rank}.`);const r=["multiHot","oneHot"].includes(t),a=o;let l;if(typeof s<"u"&&t==="count"?l=D0(a,s,e,r):l=D0(a,[],e,r),t!=="tfIdf")return l;if(s)return L(l,s);throw new G("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class py extends Ct{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Rt(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return z(()=>{t=mt(t),t.dtype!=="int32"&&(t=es(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new G(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=mt(e.countWeights)}const o=Fn(t),i=Gc(t),r=un(this.numTokens,o).bufferSync().get(0),a=ko(i,0).bufferSync().get(0);if(!(r&&a))throw new G(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return l3(t,this.outputMode,this.numTokens,s)})}}py.className="CategoryEncoding",H(py);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const c3=["bilinear","nearest"],fy=new Set(c3);class my extends Ct{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(fy.has(t.interpolation))this.interpolation=t.interpolation;else throw new G(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=Rt(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return z(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Go.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Go.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...fy]} are supported`)})}}my.className="Resizing",H(my);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var gy;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(gy||(gy={}));var by;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(by||(by={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var xy;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(xy||(xy={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rt(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&S(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u3=q0;class uu extends td{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new qm(this,Vt())}nextDataId(){return uu.nextDataId++}write(t,e,s){this.firstUse&&(this.firstUse=!1,A().get("IS_NODE")&&sn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:t,dtype:s,refCount:1}),o}makeTensorInfo(t,e,s){let o;if(e==="string"&&s!=null&&s.length>0&&nr(s[0])){const i=s.map(r=>Ls(r));o=this.write(i,t,e)}else o=this.write(s,t,e);return{dataId:o,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,o,i){this.data.set(t,{values:e,dtype:o,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const o=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return ws(o,i)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(o=>Ds(o));return wt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return wt(t.shape,t.dtype,e)}makeOutput(t,e,s){return Vt().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Ae();return t(),{kernelMs:Ae()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){rt([t],"where");const e=this.readSync(t.dataId);return u3(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}uu.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yy(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const d3={kernelName:ml,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend;rt(t,"abs");let s=new Float32Array(Z(t.shape));const o=e.data.get(t.dataId).values;return s=yy(o),e.makeOutput(s,t.shape,t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ue(n){return(t,e,s,o,i)=>{const r=gt(t,e),a=r.length,l=ct(r),c=Z(r),u=Ie(i,c),d=t.length,h=e.length,p=ct(t),f=ct(e),m=mi(t,r),g=mi(e,r);if(m.length+g.length===0)for(let b=0;b<u.length;++b)u[b]=n(s[b%s.length],o[b%o.length]);else for(let b=0;b<u.length;++b){const x=ri(b,a,l),w=x.slice(-d);m.forEach(v=>w[v]=0);const y=Un(w,d,p),I=x.slice(-h);g.forEach(v=>I[v]=0);const C=Un(I,h,f);u[b]=n(s[y],o[C])}return[u,r]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(n){const{inputs:t,backend:e}=n,{real:s,imag:o}=t,i=e.data.get(s.dataId).values,r=e.data.get(o.dataId).values,a=e.makeTensorInfo(s.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",i),imag:e.makeTensorInfo(o.shape,"float32",r)},a}const h3={kernelName:xd,backendName:"cpu",kernelFunc:tn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function du(n,t,e="float32"){if(e==="complex64"){const o=du(n,t,"float32"),i=du(n,t,"float32");return tn({inputs:{real:o,imag:i},backend:n})}const s=Re(Z(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function is(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const p3={kernelName:kr,backendName:"cpu",kernelFunc:is};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(n){const{inputs:t,backend:e}=n,{input:s}=t,o=e.data.get(s.dataId).complexTensorInfos.real,i=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,i)}const f3={kernelName:Pd,backendName:"cpu",kernelFunc:Ao};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wy(n,t,e,s){if(s==="int32"){const o=Int32Array.from(n);return[t,"int32",o]}if(s==="bool"){const o=mo([0],e),[i,r]=ue((a,l)=>a!==l?1:0)(t,[],n,o,"bool");return[r,"bool",i]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function Us(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{dtype:i}=s;if(i==="complex64"){if(o.dtype==="complex64")return is({inputs:{x:o},backend:e});const u=du(e,o.shape,o.dtype),d=Us({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),h=tn({inputs:{real:d,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),h}if(o.dtype==="complex64"){const u=Ao({inputs:{input:o},backend:e}),d=Us({inputs:{x:u},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(u),d}if(!ng(o.dtype,i)){const u=is({inputs:{x:o},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:i}}const r=e.data.get(o.dataId).values,[a,l,c]=wy(r,o.shape,o.dtype,i);return e.makeTensorInfo(a,l,c)}const m3={kernelName:dr,backendName:"cpu",kernelFunc:Us};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(n,t,e,s){return e==null?({inputs:o,backend:i})=>{const{a:r,b:a}=o,l=i;rt([r,a],n);const c=l.data.get(r.dataId).values,u=l.data.get(a.dataId).values,d=r.dtype==="string"?Lo(c):c,h=r.dtype==="string"?Lo(u):u,p=s||r.dtype,[f,m]=t(r.shape,a.shape,d,h,p);return l.makeTensorInfo(m,p,f)}:({inputs:o,backend:i})=>{const{a:r,b:a}=o,l=i;if(r.dtype==="complex64"||a.dtype==="complex64"){const c=Us({inputs:{x:r},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,h=u.complexTensorInfos.imag,p=l.data.get(d.dataId).values,f=l.data.get(h.dataId).values,m=Us({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),b=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,w=l.data.get(b.dataId).values,y=l.data.get(x.dataId).values,[I,C,v]=e(r.shape,a.shape,p,f,w,y),k=l.makeTensorInfo(v,"float32",I),T=l.makeTensorInfo(v,"float32",C),N=tn({inputs:{real:k,imag:T},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(k),l.disposeIntermediateTensorInfo(T),N}else{const c=l.data.get(r.dataId).values,u=l.data.get(a.dataId).values,d=s||r.dtype,[h,p]=t(r.shape,a.shape,c,u,d);return l.makeTensorInfo(p,d,h)}}}function Sf(n){return(t,e,s,o,i,r)=>{const a=gt(t,e),l=Z(a),c=a.length,u=ct(a),d=Ie("float32",l),h=Ie("float32",l),p=mi(t,a),f=mi(e,a),m=ws(s,o),g=ws(i,r),b=t.length,x=ct(t),w=e.length,y=ct(e);if(p.length+f.length===0)for(let I=0;I<d.length;I++){const C=I%m.length,v=I%g.length,k=n(m[C*2],m[C*2+1],g[v*2],g[v*2+1]);d[I]=k.real,h[I]=k.imag}else for(let I=0;I<d.length;I++){const C=ri(I,c,u),v=C.slice(-b);p.forEach(F=>v[F]=0);const k=Un(v,b,x),T=C.slice(-w);f.forEach(F=>T[F]=0);const N=Un(T,w,y),$=n(m[k*2],m[k*2+1],g[N*2],g[N*2+1]);d[I]=$.real,h[I]=$.imag}return[d,h,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iy=ue((n,t)=>n+t),g3=Sf((n,t,e,s)=>({real:n+e,imag:t+s})),$i=we(ai,Iy,g3),b3={kernelName:ai,backendName:"cpu",kernelFunc:$i};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tf(n,t,e,s,o){const i=Z(s),r=Re(o,e);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=o||(i>0?r[l]+=t[a]:r[l]+=1)}return r}function Cy(n,t,e,s=!1){const o=n.shape[0],i=n.shape[1],r=wt([o,e],t.dtype);for(let a=0;a<o;a++)for(let l=0;l<i;l++){const c=n.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(s?r.set(1,a,c):t.size>0?r.set(r.get(a,c)+t.get(a,l),a,c):r.set(r.get(a,c)+1,a,c))}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(n){return(t,e,s)=>{const o=Ie(e,t.length);for(let i=0;i<t.length;++i)o[i]=n(t[i],s);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(n,t,e){return({inputs:s,attrs:o,backend:i})=>{const{x:r}=s;if(rt(r,n),r.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=i,l=a.data.get(r.dataId).values,c=Z(r.shape),u=e||r.dtype,d=ie(u,c);for(let h=0;h<c;++h)d[h]=t(l[h],o);return a.makeTensorInfo(r.shape,u,d)}}function Gi(n,t,e){return({inputs:s,attrs:o,backend:i})=>{const{x:r}=s;if(rt(r,n),r.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=i,l=a.data.get(r.dataId).values,c=e||r.dtype,u=t(l,c,o);return a.makeTensorInfo(r.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vy=Ys(n=>Math.ceil(n)),x3=Gi(hr,vy),y3={kernelName:hr,backendName:"cpu",kernelFunc:x3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ky(n,t,e,s){const o=ie(e,Z(t));if(s&&e!=="string"){let i=0;n.forEach(r=>{const a=Z(r.shape);o.set(r.vals,i),i+=a})}else{let i=0;n.forEach(r=>{const a=e==="string"?Lo(r.vals):r.vals;let l=0;for(let c=0;c<r.shape[0];++c){const u=c*t[1]+i;for(let d=0;d<r.shape[1];++d)o[u+d]=a[l++]}i+=r.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sy=ue((n,t)=>n===t?1:0),Ty=we(Gl,Sy,null,"bool"),w3={kernelName:Gl,backendName:"cpu",kernelFunc:Ty};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ny=Ys(n=>Math.exp(n)),Ry=Gi(yr,Ny,"float32"),I3={kernelName:yr,backendName:"cpu",kernelFunc:Ry};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $y=Ys(n=>Math.expm1(n)),C3=Gi(wr,$y),v3={kernelName:wr,backendName:"cpu",kernelFunc:C3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gy=Ys(n=>Math.floor(n)),k3=Gi(Ir,Gy),S3={kernelName:Ir,backendName:"cpu",kernelFunc:k3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ey(n,t,e,s,o,i,r,a,l){const c=wt([s,i],e);for(let u=0;u<s;u++){const d=[];let h=0;for(let p=0;p<o;p++){const f=n[u*o+p];h+=f*r[p],d.push(f)}if(h<0||h>=l/i)throw new Error(`Invalid indices: ${d} does not index into ${a}`);for(let p=0;p<i;p++)c.values[u*i+p]=t.get(...t.indexToLoc(h*i+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ly(n,t,e){const s=wt(e,n.dtype);for(let o=0;o<s.size;++o){const r=s.indexToLoc(o).slice(),a=r[0],l=r[2],c=t.locToIndex([a,l]);r[2]=t.values[c];const u=n.locToIndex(r);0<=u&&u<n.values.length&&(s.values[o]=n.values[u])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dy=ue((n,t)=>n>t?1:0),T3=we(Ml,Dy,null,"bool"),N3={kernelName:Ml,backendName:"cpu",kernelFunc:T3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const My=ue((n,t)=>n>=t?1:0),R3=we(vr,My,null,"bool"),$3={kernelName:vr,backendName:"cpu",kernelFunc:R3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zy=ue((n,t)=>n<t?1:0),G3=we(Fl,zy,null,"bool"),E3={kernelName:Fl,backendName:"cpu",kernelFunc:G3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fy=ue((n,t)=>n<=t?1:0),L3=we(Wl,Fy,null,"bool"),D3={kernelName:Wl,backendName:"cpu",kernelFunc:L3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wy(n,t,e){const s=(t-n)/(e-1),o=Re(e,"float32");o[0]=n;for(let i=1;i<o.length;i++)o[i]=o[i-1]+s;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vy=Ys(n=>Math.log(n)),M3=Gi(Rr,Vy),z3={kernelName:Rr,backendName:"cpu",kernelFunc:M3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _y(n,t,e,s){const o=Ie(s,Z(e));for(let i=0;i<o.length;++i){const r=i*t;let a=n[r];for(let l=0;l<t;++l){const c=n[r+l];(Number.isNaN(c)||c>a)&&(a=c)}o[i]=a}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ay=ue((n,t)=>Math.max(n,t)),F3=we(Gr,Ay),W3={kernelName:Gr,backendName:"cpu",kernelFunc:F3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xy=ue((n,t)=>Math.min(n,t)),V3=we(Er,Xy),_3={kernelName:Er,backendName:"cpu",kernelFunc:V3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nf=ue((n,t)=>n*t),A3=Sf((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),hu=we(Dr,Nf,A3),X3={kernelName:Dr,backendName:"cpu",kernelFunc:hu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oy(n,t,e){const s=Es(-1,e);return Nf([],t,s,n,e)}function O3(n){const{inputs:t,backend:e}=n,{x:s}=t;rt(s,"neg");const o=e.data.get(s.dataId).values,[i,r]=Oy(o,s.shape,s.dtype);return e.makeTensorInfo(r,s.dtype,i)}const P3={kernelName:Ul,backendName:"cpu",kernelFunc:O3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Py=ue((n,t)=>n!==t?1:0),Z3=we(Yl,Py,null,"bool"),K3={kernelName:Yl,backendName:"cpu",kernelFunc:Z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rf(n,t,e,s,o){const i=t.length,r=Z(t),a=ct(t),l=ct(o),c=Ie(e,Z(o));for(let u=0;u<r;++u){const d=ri(u,i,a),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];const p=Un(h,i,l);c[p]=n[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ke(n){const{inputs:t,attrs:e,backend:s}=n,{x:o}=t,{perm:i}=e;rt(o,"transpose");const r=o.shape.length,a=new Array(r);for(let d=0;d<a.length;d++)a[d]=o.shape[i[d]];const l=s.data.get(o.dataId).values,c=Rf(l,o.shape,o.dtype,i,a);return{dataId:s.write(c,a,o.dtype),shape:a,dtype:o.dtype}}const B3={kernelName:li,backendName:"cpu",kernelFunc:Ke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zy(n,t,e,s){const[o,i]=be(n,s),r=Qe(t,"int32"),a=Re(Z(o),r),l=Z(i);for(let c=0;c<a.length;++c){const u=c*l;let d=1;for(let h=0;h<l;++h)d*=e[u+h];a[c]=d}return{outVals:a,outShape:o,outDtype:r}}function H3(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s;rt(o,"prod");const a=o.shape.length,l=yt(i,o.shape),c=Jt(l,a);let u=l,d=o;const h=[];c!=null&&(d=Ke({inputs:{x:o},backend:e,attrs:{perm:c}}),h.push(d),u=ne(u.length,a));const p=e.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=Zy(d.shape,d.dtype,p,u);let b=m;return r&&(b=le(m,l)),h.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(b,g,f)}const U3={kernelName:ec,backendName:"cpu",kernelFunc:H3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n,t,e){n.forEach((s,o)=>{if(s<0||s>=e){const i=ri(o,t.length,ct(t)).join(",");throw new Error(`indices[${i}] = ${s} is not in [0, ${e})`)}})}function Q3(n,t){for(let e=0;e<n.length;++e){const s=n[e],o=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>o)throw new Error("Ragged splits must not point past values");for(let i=1;i<s.length;++i)if(s[i-1]>s[i])throw new Error("Ragged splits must be sorted in ascending order")}}function J3(n,t,e,s){const o=[];let i=0;const r=t.length-1+e.length,a=new Array(r).fill(null).map(()=>[0]);Q3(e,s);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];const u=t[c+1];for(let d=1;d<l+1;++d)a[c].push(d*u)}for(let c=0;c<n.length;++c){let u=n[c],d=n[c]+1;for(let h=0;h<e.length;++h){const p=e[h],f=h+t.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[u];for(let b=u;b<d;++b)a[f].push(p[b+1]+g)}u=p[u],d=p[d]}d!==u&&(o.push([u,d]),i+=d-u)}return{outSplits:a,valueSlices:o,numValues:i}}function j3(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,o=ie("int32",s);t.push(o),n[e].forEach((i,r)=>o[r]=i)}return t}function Ky(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function q3(n,t,e,s,o,i){const r=Ky(t,2)[1],a=Ky(i,2)[1];let l=0;for(const c of e)for(let u=c[0];u<c[1];++u){for(let d=0;d<s;++d)o[l*a+d]=n[u*r+d];++l}}function tD(n,t,e,s,o){const i=t.slice();i[0]=o;const r=ie(e,Z(i)),a=n.length,l=a===0?0:a/t[0];return q3(n,t,s,l,r,i),[r,i]}function By(n,t,e,s,o,i,r,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(Y3(i,r,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:u,valueSlices:d,numValues:h}=J3(i,r,n,c),p=j3(u),f=tD(e,s,o,d,h);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hy=2147483647;function Uy(n,t,e,s,o,i,r){if(t.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(r.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,l=o.length===0,c=r.length===0,u=[];a||u.push(t[0]),l||u.push(o[0]),c||u.push(r[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=u.length===0?1:u[0],h=ie("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const b=a?n[0]:n[g],x=l?s[0]:s[g],w=c?i[0]:i[g];if(w===0)throw new Error("Requires delta != 0");let y;if(w>0&&x<b||w<0&&x>b)y=0;else if(y=Math.ceil(Math.abs((x-b)/w)),y>Hy)throw new Error(`Requires ((limit - start) / delta) <= ${Hy}`);h[g+1]=h[g]+y}const p=h[d],f=ie(e,p);let m=0;for(let g=0;g<d;++g){const b=h[g+1]-h[g];let x=a?n[0]:n[g];const w=c?i[0]:i[g];for(let y=0;y<b;++y)f[m++]=x,x+=w}return[h,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rn=Vn;class pu{constructor(t,e,s,o,i,r,a,l,c,u){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=o,this.valuesDType=i,this.defaultValue=r,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=rb(u),this.raggedRank=ab(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Rn.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Rn.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Rn.VALUE_ROWIDS:return pu.getMaxWidthValueRowID(e);case Rn.ROW_SPLITS:return pu.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Rn[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let o=0;o<e-1;++o){const i=t[o+1]-t[o];i>s&&(s=i)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,o=t[0],i=0;for(let r=1;r<e;++r){const a=t[r];a!==o&&(o=a,i=Math.max(r-s,i),s=r)}return Math.max(e-s,i)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Qy(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;lb(s,e);const o=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=ib(this.raggedRank,o,e);r[0]<0&&(r[0]=t);for(let a=1;a<=this.raggedRank;++a)r[a]<0&&(r[a]=this.getMaxWidth(a));return r}calculateFirstParentOutputIndex(t,e,s){const o=Math.min(t,s),i=[];let r=0;for(let a=0;a<o;++a,r+=e)i.push(r);for(let a=o;a<t;++a)i.push(-1);return S(i.length===t,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(t,e,s,o){const i=t.length,r=[];for(let a=0;a<i-1;++a){const l=t[a+1]-t[a];let c=Math.min(o,l),u=e[a];u===-1&&(c=0);for(let d=0;d<c;++d)r.push(u),u+=s;for(let d=0;d<l-c;++d)r.push(-1)}if(i>0&&r.length!==t[i-1])throw new Error("Invalid row split size.");return r}calculateOutputIndexValueRowID(t,e,s,o){const i=t.length,r=[];if(i===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];r.push(c);for(let u=1;u<i;++u){const d=t[u];if(d===l)c>=0&&(++a,a<o?c+=s:c=-1);else{if(a=0,l=d,d>=e.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${e.length}`);c=e[d]}r.push(c)}if(r.length!==t.length)throw new Error("Invalid row ids.");return r}calculateOutputIndex(t,e,s,o){const i=this.getRowPartitionTensor(t),r=this.getRowPartitionTypeByDimension(t);switch(r){case Rn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,e,s,o);case Rn.ROW_SPLITS:if(i.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(i,e,s,o);default:throw new Error(`Unsupported partition type: ${Rn[r]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Rn.FIRST_DIM_SIZE:return t[0];case Rn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Rn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Rn[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let l=o.length-2;l>=0;--l)o[l]=o[l+1]*s[l+1];const i=Qy(s,!1),r=ie(this.valuesDType,Z(i));if(o[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(e,o[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,o[c],s[c]);this.setOutput(this.raggedRank,l,r,i)}return[i,r]}setOutput(t,e,s,o){if(s.length===0)return;const i=this.values,r=s;let a=o.slice();a=a.slice(t+1);const l=Z(a),c=e.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const f=this.defaultValueShape;z(()=>{const m=D(u,f);u=aa(m,a).dataSync()})}let d=0,h=0,p=0;for(let f=0;f<=c;++f){let m=f<c?e[f]:-1;if(m===p){++p;continue}if(h<p){const g=i.subarray(d*l),b=r.subarray(h*l),x=(p-h)*l;Yy(b,g,x)}if(f>=c){const g=s.length;m=Math.floor(g/l)}if(m>p)if(this.defaultValue.length===1)r.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=r.slice(p*l);Yy(g,u,l),++p}m<0?(d=f+1,h=p):(d=f,h=p,p=h+1)}}}function Yy(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function Qy(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function Jy(n,t,e,s,o,i,r,a,l,c){return new pu(n,t,e,s,o,i,r,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jy(n,t,e,s){const o=n===t,i=n<t&&e<0,r=t<n&&e>1;if(o||i||r)return Re(0,s);const a=Math.abs(Math.ceil((t-n)/e)),l=Re(a,s);t<n&&e===1&&(e=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qy=Ys(n=>1/Math.sqrt(n)),eD=Gi(_r,qy),nD={kernelName:_r,backendName:"cpu",kernelFunc:eD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ei(n,t,e,s,o,i,r,a,l,c){const u=[s/o,o],d=n.values,h=t.values;if(s===0)return wt(e,t.dtype);const p=wt(u,t.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<i;f++){const m=[];let g=0;for(let b=0;b<r;b++){const x=d[f*r+b];m.push(x),g+=x*a[b]}if(g<0||g>=s/o)throw new Error(`Invalid indices: ${m} does not index into ${e}`);for(let b=0;b<o;b++)c?p.values[g*o+b]+=h[f*o+b]:p.values[g*o+b]=t.rank===0?h[0]:h[f*o+b]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sD=Ys(n=>1/(1+Math.exp(-n))),tw=Dt(Zr,n=>1/(1+Math.exp(-n))),oD={kernelName:Zr,backendName:"cpu",kernelFunc:tw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ew(n,t,e,s,o){const i=Ch(s,t,e),r=Z(e),a=ct(s);if(i){const d=vh(t,a);return o==="string"?n.slice(d,d+r):n.subarray(d,d+r)}const l=o==="string"?Lo(n):n,c=wt(s,o,l),u=wt(e,o);for(let d=0;d<u.size;++d){const h=u.indexToLoc(d),p=h.map((f,m)=>f+t[m]);u.set(c.get(...p),...h)}return o==="string"?Gb(u.values):u.values}function Xo(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{begin:i,size:r}=s;rt(o,"slice");const[a,l]=Sc(o,i,r);wh(o,a,l);const c=e.data.get(o.dataId).values,u=ew(c,a,l,o.shape,o.dtype);return e.makeTensorInfo(l,o.dtype,u)}const iD={kernelName:ac,backendName:"cpu",kernelFunc:Xo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nw(n,t,e,s,o,i,r){const a=t[0],l=i[0],c=new Array(l),u=new Array(a),d=t[1];if(l===0){if(a!==0)throw new Error(bb(a));const g=ie(e,0),b=ie(o,0);return[g,[0,d],b,c,u]}let h=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<a;++g){const b=n[g*d];if(b<0)throw new Error(xb(g,b));if(b>=l)throw new Error(yb(g,b,l));++f[b],h=h&&b>=p,p=b}let m=!0;for(let g=0;g<l;++g){const b=f[g]===0;c[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){const g=n,b=s;for(let x=0;x<a;++x)u[x]=x;return[g,[a,d],b,c,u]}else{const g=f[l-1],b=ie(e,g*d),x=ie(o,g),w=new Array(l).fill(0);for(let y=0;y<a;++y){const I=n[y*d],C=w[I],v=(I===0?0:f[I-1])+C;w[I]++;for(let k=0;k<d;++k)b[v*d+k]=n[y*d+k];x[v]=s[y],u[y]=v}for(let y=0;y<l;++y)if(w[y]===0){const C=y===0?0:f[y-1];b[C*d+0]=y;for(let v=1;v<d;++v)b[C*d+v]=0;x[C]=r}return[b,[g,d],x,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sw(n,t,e,s,o){const i=Z(s),r=t[0],a=o.length,l=[];let c=1,u=-1;for(let g=0;g<a;++g){const b=o[g];if(b===-1){if(u!==-1)throw new Error(wb(u,g));u=g,l.push(1)}else{if(b<0)throw new Error(Ib(g,b));c*=b,l.push(b)}}if(u!==-1){if(c<=0)throw new Error(Cb());const g=Math.trunc(i/c);if(c*g!==i)throw new Error(vb(s,l));l[u]=g}if(Z(l)!==i)throw new Error(kb(s,l));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let g=h-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}const m=ie(e,r*a);for(let g=0;g<r;++g){let b=0;for(let x=0;x<h;++x)b+=n[g*h+x]*p[x];for(let x=0;x<a;++x)m[g*a+x]=Math.trunc(b/f[x]),b%=f[x]}return[m,[r,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $f(n,t,e,s,o,i=!1,r=0){const a=s.length,l=[t[0],n.length/t[0]],c=l[1],d=a>0?o[a-1]+1:0;if(d<0)throw new Error(Vp());const h=t.slice();h[0]=d;const p=h.reduce((w,y)=>w*y,1),f=ie(e,p);if(a===0)return d>0&&f.fill(r),[f,h];if(d<=0)throw new Error(Vp());let m=0,g=1,b=0,x=o[m];for(;;){let w=0;if(g<a){if(w=o[g],x===w){++g;continue}if(x>=w)throw new Error(Sb())}if(x<0||x>=d)throw new Error(Tb(x,d));x>b&&f.fill(r,b*c,x*c);for(let y=m;y<g;++y){const I=s[y];if(I<0||I>=l[0])throw new Error(Nb(y,s[y],l[0]));for(let C=0;C<c;C++)f[x*c+C]+=n[I*c+C]}if(i)for(let y=0;y<c;y++)f[x*c+y]/=g-m;if(m=g,++g,b=x+1,x=w,g>a)break}return b<d&&f.fill(r,b*c,d*c),[f,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rD=Ys(n=>Math.sqrt(n)),aD=Dt(Br,n=>Math.sqrt(n)),lD={kernelName:Br,backendName:"cpu",kernelFunc:aD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ow=ue((n,t)=>{const e=n-t;return e*e}),cD=we(Hr,ow),uD={kernelName:Hr,backendName:"cpu",kernelFunc:cD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iw(n,t,e,s){const o=wt(n,t.dtype);for(let i=0;i<o.size;i++){const r=o.indexToLoc(i),a=new Array(r.length);for(let l=0;l<a.length;l++)a[l]=r[l]*e[l]+s[l];o.set(t.get(...a),...r)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dD{constructor(t,e,s,o,i,r){this.separator=Ls(t),this.nGramWidths=e,this.leftPad=Ls(s),this.rightPad=Ls(o),this.padWidth=i,this.preserveShort=r}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,o,i,r){for(let a=0;a<i;++a){const l=this.getPadWidth(r),c=Math.max(0,l-a),u=Math.max(0,l-(i-(a+1))),d=r-(c+u),h=e+(c>0?0:a-l);let p=0;p+=c*this.leftPad.length;for(let x=0;x<d;++x)p+=t[h+x].length;p+=u*this.rightPad.length;const f=c+u+d-1;p+=f*this.separator.length,s[o+a]=new Uint8Array(p);const m=s[o+a];let g=0;const b=x=>x.forEach(w=>m[g++]=w);for(let x=0;x<c;++x)b(this.leftPad),b(this.separator);for(let x=0;x<d-1;++x)b(t[h+x]),b(this.separator);if(d>0){b(t[h+d-1]);for(let x=0;x<u;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<u-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(t,e){const s=t.length,o=e.length;if(o>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<o;++c){let u=e[c]>=l;if(u=u&&e[c]<=s,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${s}]`);l=e[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const i=o-1,r=ie("int32",o);if(s===0||o===0){const l=new Array(s);for(let c=0;c<=i;++c)r[c]=0;return[l,r]}r[0]=0;for(let l=1;l<=i;++l){const c=e[l]-e[l-1];let u=0;this.nGramWidths.forEach(d=>{u+=this.getNumNGrams(c,d)}),this.preserveShort&&c>0&&u===0&&(u=1),r[l]=r[l-1]+u}const a=new Array(r[i]);for(let l=0;l<i;++l){const c=e[l];let u=r[l];if(this.nGramWidths.forEach(d=>{const h=e[l+1]-e[l],p=this.getNumNGrams(h,d);this.createNGrams(t,c,a,u,p,d),u+=p}),this.preserveShort&&u===r[l]){const d=e[l+1]-e[l];if(d===0)continue;const h=d+2*this.padWidth,p=1;this.createNGrams(t,c,a,u,p,h)}}return[a,r]}}function rw(n,t,e,s,o,i,r,a){return new dD(e,s,o,i,r,a).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n,t,e,s){if(!n.length)return;if(t.length===0){for(let i=0;i<n.length;++i)s.push(n.subarray(i,i+1));return}if(t.length===1){const i=t[0];let r=n.indexOf(i);for(;r!==-1;){const a=n.subarray(0,r);(!e||a.length!==0)&&s.push(a),n=n.subarray(r+1),r=n.indexOf(i)}(!e||n.length!==0)&&s.push(n);return}let o=0;for(let i=0;i<n.length+1;i++)if(i===n.length||t.indexOf(n[i])!==-1){const r=n.subarray(o,i);(!e||r.length!==0)&&s.push(r),o=i+1}}function aw(n,t,e){const s=n.length,o=[];let i=0,r=0;const a=new Array(s);for(let h=0;h<s;++h){const p=o.length;hD(n[h],t,e,o);const f=o.length-p;a[h]=f,i+=f,r=Math.max(r,f)}const l=ie("int32",i*2),c=new Array(i),u=[s,r];let d=0;for(let h=0;h<s;++h)for(let p=0;p<a[h];++p)l[d*2]=h,l[d*2+1]=p,c[d]=o[d],++d;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lw(n,t){const e=ie("int32",n.length);for(let s=0;s<n.length;++s)e[s]=mv(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cw=ue((n,t)=>n-t),pD=Sf((n,t,e,s)=>({real:n-e,imag:t-s})),Gf=we(Ur,cw,pD),fD={kernelName:Ur,backendName:"cpu",kernelFunc:Gf};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uw(n,t){const e=new Array(n.rank);for(let o=0;o<e.length;o++)e[o]=n.shape[o]*t[o];const s=wt(e,n.dtype);for(let o=0;o<s.values.length;++o){const i=s.indexToLoc(o),r=new Array(n.rank);for(let l=0;l<r.length;l++)r[l]=i[l]%n.shape[l];const a=n.locToIndex(r);s.values[o]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ea=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function dw(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const a=s-e+1,l=t-e+1,c=Math.log(a),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),h=Math.max(e,Math.floor(t-l*u/a+d)),p=Math.min(s,Math.floor(t+(a-l)*u/a+d));dw(n,t,h,p)}const o=n[t];let i=e,r=s;for(ni(n,e,t),Ea(n[s],o)>0&&ni(n,e,s);i<r;){for(ni(n,i,r),i++,r--;Ea(n[i],o)<0;)i=i+1;for(;Ea(n[r],o)>0;)r=r-1}Ea(n[e],o)===0?ni(n,e,r):(r=r+1,ni(n,r,s)),r<=t&&(e=r+1),t<=r&&(s=r-1)}}function hw(n,t,e,s,o){const i=t[t.length-1],[r,a]=[n.length/i,i],l=Ie(e,r*s),c=Ie("int32",r*s);for(let d=0;d<r;d++){const h=d*a,p=n.subarray(h,h+a);let f=new Array(p.length);p.forEach((x,w)=>f[w]={value:x,index:w}),s<f.length&&(dw(f,s),f=f.slice(0,s)),o&&f.sort(Ea);const m=d*s,g=l.subarray(m,m+s),b=c.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,b[x]=f[x].index}const u=t.slice();return u[u.length-1]=s,[wt(u,e,l),wt(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pw(n,t,e,s){const o=yt(t,e)[0],i=[1,e[0],1];for(let f=0;f<o;f++)i[0]*=e[f];i[1]=e[o];for(let f=o+1;f<e.length;f++)i[2]*=e[f];const r={},a=new Int32Array(e[o]),l=new $e(i,s,n),c=[],u=i[0]===1&&i[2]===1;for(let f=0;f<e[o];f++){let m;if(u)m=n[f].toString();else{const g=[];for(let b=0;b<i[0];b++)for(let x=0;x<i[2];x++)g.push(l.get(b,f,x));m=g.join(",")}if(r[m]!==void 0)a[f]=r[m];else{const g=Object.keys(r).length;r[m]=g,a[f]=g,c.push(f)}}const d=i.slice();d[1]=Object.keys(r).length;const h=new $e(d,s);c.forEach((f,m)=>{for(let g=0;g<i[0];g++)for(let b=0;b<i[2];b++)h.set(l.get(g,f,b),g,m,b)});const p=e.slice();return p[o]=d[1],{outputValues:h.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mD=Object.freeze(Object.defineProperty({__proto__:null,addImpl:Iy,bincountImpl:Tf,bincountReduceImpl:Cy,castImpl:wy,ceilImpl:vy,concatImpl:ky,equalImpl:Sy,expImpl:Ny,expm1Impl:$y,floorImpl:Gy,gatherNdImpl:Ey,gatherV2Impl:Ly,greaterEqualImpl:My,greaterImpl:Dy,lessEqualImpl:Fy,lessImpl:zy,linSpaceImpl:Wy,logImpl:Vy,maxImpl:_y,maximumImpl:Ay,minimumImpl:Xy,multiplyImpl:Nf,negImpl:Oy,notEqualImpl:Py,prodImpl:Zy,raggedGatherImpl:By,raggedRangeImpl:Uy,raggedTensorToTensorImpl:Jy,rangeImpl:jy,rsqrtImpl:qy,scatterImpl:Ei,sigmoidImpl:sD,simpleAbsImpl:yy,sliceImpl:ew,sparseFillEmptyRowsImpl:nw,sparseReshapeImpl:sw,sparseSegmentReductionImpl:$f,sqrtImpl:rD,squaredDifferenceImpl:ow,stridedSliceImpl:iw,stringNGramsImpl:rw,stringSplitImpl:aw,stringToHashBucketFastImpl:lw,subImpl:cw,tileImpl:uw,topKImpl:hw,transposeImpl:Rf,uniqueImpl:pw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */m0("cpu",()=>new uu,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fw=Dt(br,n=>n>=0?n:Math.exp(n)-1),gD={kernelName:br,backendName:"cpu",kernelFunc:fw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mw(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{alpha:i}=s;rt([o],"leakyRelu");const r=Z(o.shape),a=e.data.get(o.dataId).values,l=Ie("float32",r);for(let c=0;c<a.length;c++)l[c]=a[c]<0?i*a[c]:a[c];return e.makeTensorInfo(o.shape,"float32",l)}const bD={kernelName:zl,backendName:"cpu",kernelFunc:mw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xD=ue((n,t)=>n<0?t*n:n);function gw(n){const{inputs:t,backend:e}=n,{x:s,alpha:o}=t;rt([s,o],"prelu");const i=e.data.get(s.dataId).values,r=e.data.get(o.dataId).values,[a,l]=xD(s.shape,o.shape,i,r,"float32");return e.makeTensorInfo(l,"float32",a)}const yD={kernelName:tc,backendName:"cpu",kernelFunc:gw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bw=Dt(Fr,n=>Math.max(0,n)),wD={kernelName:Fr,backendName:"cpu",kernelFunc:bw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xw=Dt(Wr,n=>Math.min(Math.max(0,n),6)),ID={kernelName:Wr,backendName:"cpu",kernelFunc:xw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fu(n,t,e,s,o){if(e==="linear")return is({inputs:{x:t},backend:n});if(e==="relu")return bw({inputs:{x:t},backend:n});if(e==="elu")return fw({inputs:{x:t},backend:n});if(e==="relu6")return xw({inputs:{x:t},backend:n});if(e==="prelu")return gw({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return mw({inputs:{x:t},backend:n,attrs:{alpha:o}});if(e==="sigmoid")return tw({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{shape:i}=s,r=Z(o.shape),a=eg(i,r),l=Z(a);S(r===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${o.shape}) has ${r} elements. The new shape and old shape must have the same number of elements.`),e.incRef(o.dataId);const c=e.data.get(o.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;u.shape=a,d.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}const CD={kernelName:nc,backendName:"cpu",kernelFunc:At};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(n){const{inputs:t,backend:e,attrs:s}=n,{a:o,b:i}=t,{transposeA:r,transposeB:a}=s;rt([o,i],"matMul");const l=o.shape.length,c=i.shape.length,u=r?o.shape[l-2]:o.shape[l-1],d=a?i.shape[c-1]:i.shape[c-2],h=r?o.shape[l-1]:o.shape[l-2],p=a?i.shape[c-2]:i.shape[c-1],f=o.shape.slice(0,-2),m=i.shape.slice(0,-2),g=Z(f),b=Z(m),w=gt(o.shape.slice(0,-2),i.shape.slice(0,-2)).concat([h,p]);S(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${o.shape} and ${i.shape} and transposeA=${r} and transposeB=${a} must match.`);const y=r?[g,u,h]:[g,h,u],I=a?[b,p,d]:[b,d,p],C=At({inputs:{x:o},backend:e,attrs:{shape:y}}),v=At({inputs:{x:i},backend:e,attrs:{shape:I}}),k=r?C.shape[1]:C.shape[2],T=r?C.shape[2]:C.shape[1],N=a?v.shape[1]:v.shape[2],$=Math.max(g,b),F=e.data.get(C.dataId).values,W=e.data.get(v.dataId).values,V=ct(C.shape),_=ct(v.shape),[X,K,P]=r?[V[0],1,V[1]]:[V[0],V[1],1],[B,U,Y]=a?[1,_[1],_[0]]:[_[1],1,_[0]],j=T*N,J=wt([$,T,N],C.dtype),nt=J.values,q=e.blockSize;for(let it=0;it<$;it++)for(let lt=0;lt<T;lt+=q)for(let dt=0;dt<N;dt+=q)for(let pt=0;pt<k;pt+=q){const xt=Math.min(lt+q,T),vt=Math.min(dt+q,N),Mt=Math.min(pt+q,k);for(let Ot=lt;Ot<xt;Ot++)for(let Ht=dt;Ht<vt;Ht++){let Qt=0;for(let zt=pt;zt<Mt;zt++){const te=Math.min(it,g-1)*X,oe=Math.min(it,b-1)*Y,Ns=F[te+Ot*K+zt*P],Ne=W[zt*B+Ht*U+oe];Qt+=Ns*Ne}nt[it*j+(Ot*N+Ht)]+=Qt}}return e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(v),e.makeTensorInfo(w,J.dtype,J.values)}const vD={kernelName:wl,backendName:"cpu",kernelFunc:yw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(n){const{inputs:t,backend:e,attrs:s}=n,{a:o,b:i,bias:r,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;let h,p,f;const m=[];h=yw({inputs:{a:o,b:i},attrs:{transposeA:l,transposeB:c},backend:e}),r&&(p=$i({inputs:{a:h,b:r},backend:e}),m.push(h),h=p),u&&(f=fu(e,h,u,a,d),m.push(h),h=f);for(const b of m)e.disposeIntermediateTensorInfo(b);return h}const SD={kernelName:mc,backendName:"cpu",kernelFunc:kD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TD=Dt(or,n=>Math.acos(n)),ND={kernelName:or,backendName:"cpu",kernelFunc:TD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RD=Dt(ir,n=>Math.acosh(n)),$D={kernelName:ir,backendName:"cpu",kernelFunc:RD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(n){const{inputs:t,backend:e}=n,s=t;rt(t,"addN");const o=s.map(a=>e.data.get(a.dataId).values),i=wt(s[0].shape,s[0].dtype),r=i.values;for(let a=0;a<s.length;a++){const l=o[a];for(let c=0;c<r.length;c++)r[c]+=l[c]}return e.makeTensorInfo(i.shape,i.dtype,i.values)}const ED={kernelName:hd,backendName:"cpu",kernelFunc:GD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LD(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s;rt(o,"all");const a=yt(i,o.shape);let l=a;const c=Jt(l,o.shape.length);let u=o;c!=null&&(u=Ke({inputs:{x:o},backend:e,attrs:{perm:c}}),l=ne(l.length,o.shape.length)),ve("all",l,u.shape.length);const[d,h]=be(u.shape,l),p=Z(h),f=Re(Z(d),u.dtype),m=e.data.get(u.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let w=m[x];for(let y=0;y<p;++y){const I=m[x+y];w=w&&I}f[b]=w}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(d,u.dtype,f);if(r){const b=le(d,a),x=At({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),x}return g}const DD={kernelName:pd,backendName:"cpu",kernelFunc:LD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MD(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s;rt(o,"any");const a=yt(i,o.shape);let l=a;const c=Jt(l,o.shape.length);let u=o;c!=null&&(u=Ke({inputs:{x:o},backend:e,attrs:{perm:c}}),l=ne(l.length,o.shape.length)),ve("any",l,u.shape.length);const[d,h]=be(u.shape,l),p=Z(h),f=Re(Z(d),u.dtype),m=e.data.get(u.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let w=m[x];for(let y=0;y<p;++y){const I=m[x+y];w=w||I}f[b]=w}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(d,u.dtype,f);if(r){const b=le(d,a),x=At({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),x}return g}const zD={kernelName:fd,backendName:"cpu",kernelFunc:MD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i}=s;rt(o,"argMax");let r=yt(i,o.shape);const a=Jt(r,o.shape.length);let l=o;const c=[];a!=null&&(l=Ke({inputs:{x:o},backend:e,attrs:{perm:a}}),c.push(l),r=ne(r.length,l.shape.length)),r=[r[0]],ve("argMax",r,l.shape.length);const[u,d]=be(l.shape,r),h=Z(u),p=Re(h,"int32"),f=Z(d),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const b=g*f;let x=m[b],w=0;for(let y=0;y<f;++y){const I=m[b+y];I>x&&(x=I,w=y)}p[g]=w}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",p)}const WD={kernelName:gl,backendName:"cpu",kernelFunc:FD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VD(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i}=s;rt(o,"argMin");let r=yt(i,o.shape);const a=Jt(r,o.shape.length);let l=o;const c=[];a!=null&&(l=Ke({inputs:{x:o},backend:e,attrs:{perm:a}}),c.push(l),r=ne(r.length,l.shape.length)),r=[r[0]],ve("argMin",r,l.shape.length);const[u,d]=be(l.shape,r),h=Z(u),p=Re(h,"int32"),f=Z(d),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const b=g*f;let x=m[b],w=0;for(let y=0;y<f;++y){const I=m[b+y];I<x&&(x=I,w=y)}p[g]=w}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",p)}const _D={kernelName:bl,backendName:"cpu",kernelFunc:VD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AD=Dt(rr,n=>Math.asin(n)),XD={kernelName:rr,backendName:"cpu",kernelFunc:AD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OD=Dt(ar,n=>Math.asinh(n)),PD={kernelName:ar,backendName:"cpu",kernelFunc:OD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZD=Dt(lr,n=>Math.atan(n)),KD={kernelName:lr,backendName:"cpu",kernelFunc:ZD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BD=ue((n,t)=>Math.atan2(n,t)),HD=we(ur,BD),UD={kernelName:ur,backendName:"cpu",kernelFunc:HD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YD=Dt(cr,n=>Math.atanh(n)),QD={kernelName:cr,backendName:"cpu",kernelFunc:YD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ef(n,t,e,s,o,i){const r=o.strideHeight,a=o.strideWidth,l=o.dilationHeight,c=o.dilationWidth,u=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.top,p=o.padInfo.left,f=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=wt(o.outShape,e),g=m.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],x=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let y=0;y<o.batchSize;++y){const I=y*b,C=y*s[0];for(let v=0;v<o.inChannels;++v)for(let k=0;k<o.outHeight;++k){const T=k*r-h,N=Math.max(0,T),$=Math.min(o.inHeight,u+T),F=I+k*x;for(let W=0;W<o.outWidth;++W){const V=W*a-p,_=Math.max(0,V),X=Math.min(o.inWidth,d+V);let K=f,P=0,B=0;for(let Y=N;Y<$;Y+=l){const j=C+Y*s[1];for(let J=_;J<X;J+=c){const nt=j+J*s[2],q=n[nt+v];i==="max"&&q>K?K=q:i==="avg"&&(P+=q,B++)}if(isNaN(K))break}const U=F+W*w+v;g[U]=i==="avg"?P/B:K}}}return m}function ww(n,t,e,s,o=!1,i=!1){const r=wt(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=wt(t,e,n);for(let g=0;g<s.batchSize;++g)for(let b=0;b<s.inChannels;++b)for(let x=0;x<s.outHeight;++x){const w=x*a-p;let y=w;for(;y<0;)y+=c;const I=Math.min(s.inHeight,d+w);for(let C=0;C<s.outWidth;++C){const v=C*l-f;let k=v;for(;k<0;)k+=u;const T=Math.min(s.inWidth,h+v);let N=Number.NEGATIVE_INFINITY,$=-1;for(let F=y;F<I;F+=c){const W=F-w;for(let V=k;V<T;V+=u){const _=V-v,X=m.get(g,F,V,b);X>N&&(N=X,o?$=i?((g*s.inHeight+F)*s.inWidth+V)*s.inChannels+b:(F*s.inWidth+V)*s.inChannels+b:$=W*h+_)}}r.set($,g,x,C,b)}}return r}function Iw(n,t,e,s,o,i){const r=o.strideDepth,a=o.strideHeight,l=o.strideWidth,c=o.dilationDepth,u=o.dilationHeight,d=o.dilationWidth,h=o.effectiveFilterDepth,p=o.effectiveFilterHeight,f=o.effectiveFilterWidth,m=o.padInfo.front,g=o.padInfo.top,b=o.padInfo.left,x=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=wt(o.outShape,e),y=w.values,I=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],C=o.outShape[2]*o.outShape[3]*o.outShape[4],v=o.outShape[3]*o.outShape[4],k=o.outShape[4];for(let T=0;T<o.batchSize;++T){const N=T*I,$=T*s[0];for(let F=0;F<o.inChannels;++F)for(let W=0;W<o.outDepth;++W){const V=W*r-m;let _=V;for(;_<0;)_+=c;const X=Math.min(o.inDepth,h+V),K=N+W*C;for(let P=0;P<o.outHeight;++P){const B=P*a-g;let U=B;for(;U<0;)U+=u;const Y=Math.min(o.inHeight,p+B),j=K+P*v;for(let J=0;J<o.outWidth;++J){const nt=J*l-b;let q=nt;for(;q<0;)q+=d;const it=Math.min(o.inWidth,f+nt),lt=j+J*k;let dt=x,pt=0,xt=0;for(let Mt=_;Mt<X;Mt+=c){const Ot=$+Mt*s[1];for(let Ht=U;Ht<Y;Ht+=u){const Qt=Ot+Ht*s[2];for(let zt=q;zt<it;zt+=d){const te=Qt+zt*s[3],oe=n[te+F];if(i==="max"&&oe>dt?dt=oe:i==="avg"&&(pt+=oe,xt++),isNaN(dt))break}if(isNaN(dt))break}if(isNaN(dt))break}const vt=lt+F;y[vt]=i==="avg"?pt/xt:dt}}}}return w}function JD(n,t){const e=wt(t.outShape,"int32"),s=t.strideDepth,o=t.strideHeight,i=t.strideWidth,r=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const x=b*s-h;let w=x;for(;w<0;)w+=r;const y=Math.min(t.inDepth,c+x);for(let I=0;I<t.outHeight;++I){const C=I*o-p;let v=C;for(;v<0;)v+=a;const k=Math.min(t.inHeight,u+C);for(let T=0;T<t.outWidth;++T){const N=T*i-f;let $=N;for(;$<0;)$+=l;const F=Math.min(t.inWidth,d+N);let W=Number.NEGATIVE_INFINITY,V=-1;for(let _=w;_<y;_+=r){const X=_-x;for(let K=v;K<k;K+=a){const P=K-C;for(let B=$;B<F;B+=l){const U=B-N,Y=n.get(m,_,K,B,g);Y>=W&&(W=Y,V=X*u*d+P*u+U)}}}e.set(V,m,b,I,T,g)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t;rt(o,"avgPool");const{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=s,c=1;S(Ge(r,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=Cn(o.shape,i,r,c,a,l);let d;if(u.filterWidth===1&&u.filterHeight===1&&$t(u.inShape,u.outShape))d=is({inputs:{x:o},backend:e});else{const h=e.data.get(o.dataId).values,p=ct(o.shape),f=Ef(h,o.shape,o.dtype,p,u,"avg");d=e.makeTensorInfo(u.outShape,o.dtype,f.values)}return d}const qD={kernelName:xl,backendName:"cpu",kernelFunc:jD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{filterSize:i,strides:r,pad:a,dimRoundingMode:l,dataFormat:c}=s;rt(o,"avgPool3d");const u=ms(o.shape,i,r,1,a,l,c),d=e.data.get(o.dataId).values,h=Iw(d,o.shape,o.dtype,ct(o.shape),u,"avg");return e.makeTensorInfo(h.shape,"float32",h.values)}const eM={kernelName:yl,backendName:"cpu",kernelFunc:tM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:i}=t,{filterSize:r,strides:a,pad:l,dimRoundingMode:c}=s;rt([o,i],"avgPool3DGrad");const u=ms(i.shape,r,a,1,l,c),d=u.strideDepth,h=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,b=u.dilationDepth,x=u.dilationHeight,w=u.dilationWidth,y=u.effectiveFilterDepth,I=u.effectiveFilterHeight,C=u.effectiveFilterWidth,v=y-1-u.padInfo.front,k=C-1-u.padInfo.left,T=I-1-u.padInfo.top,N=wt(i.shape,"float32"),$=1/(f*m*g),F=e.bufferSync(o);for(let W=0;W<u.batchSize;++W)for(let V=0;V<u.inChannels;++V)for(let _=0;_<u.inDepth;++_)for(let X=0;X<u.inHeight;++X)for(let K=0;K<u.inWidth;++K){const P=_-v,B=X-T,U=K-k;let Y=0;for(let j=0;j<y;j+=b){const J=(P+j)/d;if(!(J<0||J>=u.outDepth||Math.floor(J)!==J))for(let nt=0;nt<I;nt+=x){const q=(B+nt)/h;if(!(q<0||q>=u.outHeight||Math.floor(q)!==q))for(let it=0;it<C;it+=w){const lt=(U+it)/p;if(lt<0||lt>=u.outWidth||Math.floor(lt)!==lt)continue;const dt=F.get(W,J,q,lt,V);Y+=dt}}}N.set(Y*$,W,_,X,K,V)}return e.makeTensorInfo(N.shape,N.dtype,N.values)}const sM={kernelName:gd,backendName:"cpu",kernelFunc:nM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:i}=t,r=i;rt([o,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=Cn(r.shape,a,l,1,c),d=u.strideHeight,h=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,b=u.effectiveFilterHeight,x=u.effectiveFilterWidth,w=x-1-u.padInfo.left,y=b-1-u.padInfo.top,I=wt(r.shape,"float32"),C=1/(p*f),v=e.data.get(o.dataId).values,k=wt(o.shape,"float32",v);for(let T=0;T<u.batchSize;++T)for(let N=0;N<u.inChannels;++N)for(let $=0;$<u.inHeight;++$)for(let F=0;F<u.inWidth;++F){const W=$-y,V=F-w;let _=0;for(let X=0;X<b;X+=m){const K=(W+X)/d;if(!(K<0||K>=u.outHeight||Math.floor(K)!==K))for(let P=0;P<x;P+=g){const B=(V+P)/h;if(B<0||B>=u.outWidth||Math.floor(B)!==B)continue;const U=k.get(T,K,B,N);_+=U}}I.set(_*C,T,$,F,N)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const iM={kernelName:md,backendName:"cpu",kernelFunc:oM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,scale:i,offset:r,mean:a,variance:l}=t;S(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),rt([o,a,l,i,r],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=e.data.get(o.dataId).values,d=e.data.get(a.dataId).values,h=e.data.get(l.dataId).values,p=i?e.data.get(i.dataId).values:new Float32Array([1]),f=r?e.data.get(r.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,b=p.length,x=h.length,w=d.length;let y=0,I=0,C=0,v=0;for(let k=0;k<u.length;++k)m[k]=f[y++]+(u[k]-d[I++])*p[C++]/Math.sqrt(h[v++]+c),y>=g&&(y=0),I>=w&&(I=0),C>=b&&(C=0),v>=x&&(v=0);return e.makeTensorInfo(o.shape,o.dtype,m)}const aM={kernelName:Ll,backendName:"cpu",kernelFunc:rM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockShape:i,crops:r}=s;rt([o],"batchToSpaceND");const a=i.reduce((b,x)=>b*x),l=ha(o.shape,i,a),c=pa(l.length,i.length),u=fa(o.shape,i,a),d=Cp(r,i.length),h=vp(u,r,i.length),p=At({inputs:{x:o},backend:e,attrs:{shape:l}}),f=Ke({inputs:{x:p},backend:e,attrs:{perm:c}}),m=At({inputs:{x:f},backend:e,attrs:{shape:u}}),g=Xo({inputs:{x:m},backend:e,attrs:{begin:d,size:h}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const cM={kernelName:Il,backendName:"cpu",kernelFunc:lM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,weights:i}=t,{size:r}=s,a=e.data.get(o.dataId).values,l=e.data.get(i.dataId).values,c=Tf(a,l,i.dtype,i.shape,r);return e.makeTensorInfo([r],i.dtype,c)}const dM={kernelName:bd,backendName:"cpu",kernelFunc:uM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n){const{inputs:t,backend:e}=n,{s0:s,s1:o}=t,i=e.data.get(s.dataId).values,r=e.data.get(o.dataId).values,a=gt(Array.from(i),Array.from(r));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const pM={kernelName:cg,backendName:"cpu",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fM=Dt(pr,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),mM={kernelName:pr,backendName:"cpu",kernelFunc:fM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM={kernelName:Cl,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(Z(t.shape)),o=e.data.get(t.dataId),i=o.complexTensorInfos.real,r=o.complexTensorInfos.imag,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],d=l[c];s[c]=Math.hypot(u,d)}return e.makeOutput(s,t.shape,"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Li(n){const{inputs:t,backend:e}=n,{input:s}=t,o=e.data.get(s.dataId).complexTensorInfos.imag,i=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,i)}const bM={kernelName:zd,backendName:"cpu",kernelFunc:Li};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Di(n){const{inputs:t,backend:e,attrs:s}=n,{axis:o}=s,i=yt(o,t[0].shape)[0],r=t.map(m=>m.shape);yp(r,i);let a=jn(t.map(m=>m.shape),i);if(Z(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(m=>Z(m.shape)>0);if(l.length===1)return is({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){const m=l.map(y=>Ao({inputs:{input:y},backend:e})),g=l.map(y=>Li({inputs:{input:y},backend:e})),b=Di({inputs:m,backend:e,attrs:{axis:i}}),x=Di({inputs:g,backend:e,attrs:{axis:i}}),w=tn({inputs:{real:b,imag:x},backend:e});return m.forEach(y=>e.disposeIntermediateTensorInfo(y)),g.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(x),w}const c=l.map(m=>{const b=[-1,Z(m.shape.slice(i))];return At({inputs:{x:m},backend:e,attrs:{shape:b}})}),u=c.map(m=>({vals:e.data.get(m.dataId).values,shape:m.shape}));a=jn(c.map(m=>m.shape),1);const d=c[0].shape[0]===1,h=ky(u,a,t[0].dtype,d),p=jn(l.map(m=>m.shape),i),f=e.makeTensorInfo(p,t[0].dtype,h);return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const xM={kernelName:vl,backendName:"cpu",kernelFunc:Di};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cw(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i}=t,{strides:r,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s;rt([o,i],"conv2d");const d=gs(l),h=Ce(o.shape,i.shape,r,c,a,u,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,b=h.padInfo.left,x=h.padInfo.top,w=h.dataFormat==="channelsLast",y=new $e(h.outShape,o.dtype),I=ct(o.shape),C=ct(i.shape),v=I[0],k=w?I[1]:I[2],T=w?I[2]:1,N=w?1:I[1],$=y.strides[0],F=w?y.strides[1]:y.strides[2],W=w?y.strides[2]:1,V=w?1:y.strides[1],_=e.data.get(o.dataId).values,X=e.data.get(i.dataId).values,K=y.values;for(let P=0;P<h.batchSize;++P){const B=P*v,U=P*$;for(let Y=0;Y<h.outHeight;++Y){const j=U+Y*F,J=Y*h.strideHeight-x;for(let nt=0;nt<p;++nt){const q=J+nt*m;if(q<0||q>=h.inHeight)continue;const it=nt*C[0],lt=B+q*k;for(let dt=0;dt<h.outWidth;++dt){const pt=j+dt*W,xt=dt*h.strideWidth-b;for(let vt=0;vt<f;++vt){const Mt=xt+vt*g;if(Mt<0||Mt>=h.inWidth)continue;const Ot=it+vt*C[1],Ht=lt+Mt*T;let Qt=Ot;for(let zt=0;zt<h.inChannels;++zt){const te=_[Ht+zt*N];for(let oe=0;oe<h.outChannels;++oe)K[pt+oe*V]+=te*X[Qt+oe];Qt+=h.outChannels}}}}}}return e.makeTensorInfo(y.shape,y.dtype,K)}const yM={kernelName:kl,backendName:"cpu",kernelFunc:Cw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:i}=t,{strides:r,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;rt([o,i],"conv2dBackpropFilter");const d=gs(l),h=Ce(o.shape,u,r,1,a,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,b=h.dataFormat==="channelsLast",x=new $e(h.filterShape,"float32"),w=h.padInfo.left,y=h.padInfo.top,I=e.data.get(o.dataId).values,C=e.data.get(i.dataId).values,v=new $e(o.shape,o.dtype,I),k=new $e(i.shape,i.dtype,C);for(let T=0;T<m;++T){const N=Math.max(0,Math.ceil((y-T)/p)),$=Math.min(h.outHeight,(h.inHeight+y-T)/p);for(let F=0;F<g;++F){const W=Math.max(0,Math.ceil((w-F)/f)),V=Math.min(h.outWidth,(h.inWidth+w-F)/f);for(let _=0;_<h.inChannels;++_)for(let X=0;X<h.outChannels;++X){let K=0;for(let P=0;P<h.batchSize;++P)for(let B=N;B<$;++B){const U=T+B*p-y;for(let Y=W;Y<V;++Y){const j=F+Y*f-w;b?K+=v.get(P,U,j,_)*k.get(P,B,Y,X):K+=v.get(P,_,U,j)*k.get(P,X,B,Y)}}x.set(K,T,F,_,X)}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const IM={kernelName:yd,backendName:"cpu",kernelFunc:wM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:i}=t,{inputShape:r,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s;rt([o,i],"conv2dBackpropInput");const d=ct(i.shape),h=ct(o.shape);let p=gs(c);const f=Ce(r,i.shape,a,1,l,u,!1,p),m=new $e(f.inShape,"float32"),g=m.values,b=e.data.get(o.dataId).values,x=e.data.get(i.dataId).values,[w,y,I]=d,{batchSize:C,filterHeight:v,filterWidth:k,inChannels:T,inHeight:N,inWidth:$,outChannels:F,outHeight:W,outWidth:V,strideHeight:_,strideWidth:X}=f;p=f.dataFormat;const K=v-1-f.padInfo.top,P=k-1-f.padInfo.left,B=p==="channelsLast",U=m.strides[0],Y=B?m.strides[1]:m.strides[2],j=B?m.strides[2]:1,J=B?1:m.strides[1],nt=h[0],q=B?h[1]:h[2],it=B?h[2]:1,lt=B?1:h[1];for(let dt=0;dt<C;++dt)for(let pt=0;pt<T;++pt)for(let xt=0;xt<N;++xt){const vt=xt-K,Mt=Math.max(0,Math.ceil(vt/_)),Ot=Math.min(W,(v+vt)/_);for(let Ht=0;Ht<$;++Ht){const Qt=Ht-P,zt=Math.max(0,Math.ceil(Qt/X)),te=Math.min(V,(k+Qt)/X);let oe=0;for(let Ne=Mt;Ne<Ot;++Ne){const oo=Ne*_-vt;for(let bn=zt;bn<te;++bn){const ei=bn*X-Qt,Bn=nt*dt+q*Ne+it*bn,Rs=w*(v-1-oo)+y*(k-1-ei)+I*pt;for(let io=0;io<F;++io){const ro=b[Bn+lt*io],ao=x[Rs+io];oe+=ro*ao}}}const Ns=U*dt+Y*xt+j*Ht+J*pt;g[Ns]=oe}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const vM={kernelName:Sl,backendName:"cpu",kernelFunc:CM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i}=t,{strides:r,pad:a,dilations:l}=s;rt([o,i],"conv3d");const c=Fs(o.shape,i.shape,r,l,a),{filterDepth:u,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,b=g.front,x=g.left,w=g.top,y=new $e(c.outShape,o.dtype),I=e.data.get(o.dataId).values,C=e.data.get(i.dataId).values,v=y.values,k=ct(o.shape),T=ct(i.shape);for(let N=0;N<c.batchSize;++N){const $=N*k[0],F=N*y.strides[0];for(let W=0;W<c.outDepth;++W){const V=F+W*y.strides[1],_=W*c.strideDepth-b;for(let X=0;X<u;++X){const K=_+X*p;if(K<0||K>=c.inDepth)continue;const P=X*T[0],B=$+K*k[1];for(let U=0;U<c.outHeight;++U){const Y=V+U*y.strides[2],j=U*c.strideHeight-w;for(let J=0;J<d;++J){const nt=j+J*f;if(nt<0||nt>=c.inHeight)continue;const q=P+J*T[1],it=B+nt*k[2];for(let lt=0;lt<c.outWidth;++lt){const dt=Y+lt*c.outChannels,pt=lt*c.strideWidth-x;for(let xt=0;xt<h;++xt){const vt=pt+xt*m;if(vt<0||vt>=c.inWidth)continue;const Mt=q+xt*T[2],Ot=it+vt*c.inChannels;let Ht=Mt;for(let Qt=0;Qt<c.inChannels;++Qt){const zt=I[Ot+Qt];for(let te=0;te<c.outChannels;++te)v[dt+te]+=zt*C[Ht+te];Ht+=c.outChannels}}}}}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const SM={kernelName:Tl,backendName:"cpu",kernelFunc:kM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:i}=t,{strides:r,pad:a,filterShape:l}=s;rt([o,i],"conv3dBackpropFilterV2");const c=ct(o.shape),u=ct(i.shape),d=Fs(o.shape,l,r,1,a),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,x=new $e(d.filterShape,"float32"),w=x.values,[y,I,C,v]=x.strides,k=e.data.get(i.dataId).values,[T,N,$,F]=u,W=e.data.get(o.dataId).values,[V,_,X,K]=c,P=d.padInfo.front,B=d.padInfo.left,U=d.padInfo.top;for(let Y=0;Y<m;++Y){const j=Math.max(0,Math.ceil((P-Y)/h)),J=Math.min(d.outDepth,(d.inDepth+P-Y)/h),nt=Y*y;for(let q=0;q<g;++q){const it=Math.max(0,Math.ceil((U-q)/p)),lt=Math.min(d.outHeight,(d.inHeight+U-q)/p),dt=q*I+nt;for(let pt=0;pt<b;++pt){const xt=Math.max(0,Math.ceil((B-pt)/f)),vt=Math.min(d.outWidth,(d.inWidth+B-pt)/f),Mt=pt*C+dt;for(let Ot=0;Ot<d.inChannels;++Ot){const Ht=Ot*v+Mt;for(let Qt=0;Qt<d.outChannels;++Qt){let zt=0;for(let te=0;te<d.batchSize;++te){const oe=te*V,Ns=te*T;for(let Ne=j;Ne<J;++Ne){const bn=(Y+Ne*h-P)*_+oe,ei=Ne*N+Ns;for(let Bn=it;Bn<lt;++Bn){const io=(q+Bn*p-U)*X+bn,ro=Bn*$+ei;for(let ao=xt;ao<vt;++ao){const Jm=(pt+ao*f-B)*K+io,jm=ao*F+ro;zt+=W[Jm+Ot]*k[jm+Qt]}}}}w[Ht+Qt]=zt}}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const NM={kernelName:wd,backendName:"cpu",kernelFunc:TM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:i}=t,{pad:r,strides:a,inputShape:l}=s;rt([o],"conv3dBackpropInputV2");const c=ct(o.shape),u=ct(i.shape),d=Fs(l,i.shape,a,1,r),h=new $e(d.inShape,"float32"),p=h.values,[f,m,g,b]=h.strides,x=e.data.get(o.dataId).values,[w,y,I,C]=c,v=e.data.get(i.dataId).values,[k,T,N,$]=u,{batchSize:F,filterDepth:W,filterHeight:V,filterWidth:_,inChannels:X,inDepth:K,inHeight:P,inWidth:B,outChannels:U,outDepth:Y,outHeight:j,outWidth:J,strideDepth:nt,strideHeight:q,strideWidth:it}=d,lt=W-1-d.padInfo.front,dt=V-1-d.padInfo.top,pt=_-1-d.padInfo.left;for(let xt=0;xt<F;++xt)for(let vt=0;vt<X;++vt)for(let Mt=0;Mt<K;++Mt){const Ot=Mt-lt,Ht=Math.max(0,Math.ceil(Ot/nt)),Qt=Math.min(Y,(W+Ot)/nt);for(let zt=0;zt<P;++zt){const te=zt-dt,oe=Math.max(0,Math.ceil(te/q)),Ns=Math.min(j,(V+te)/q);for(let Ne=0;Ne<B;++Ne){const oo=Ne-pt,bn=Math.max(0,Math.ceil(oo/it)),ei=Math.min(J,(_+oo)/it);let Bn=0;for(let Rs=Ht;Rs<Qt;++Rs){const io=Rs*nt-Ot;for(let ro=oe;ro<Ns;++ro){const ao=ro*q-te;for(let fl=bn;fl<ei;++fl){const Jm=fl*it-oo,jm=w*xt+y*Rs+I*ro+C*fl,SQ=k*(W-1-io)+T*(V-1-ao)+N*(_-1-Jm)+$*vt;for(let qu=0;qu<U;++qu){const TQ=x[jm+qu],NQ=v[SQ+qu];Bn+=TQ*NQ}}}}p[f*xt+m*Mt+g*zt+b*Ne+vt]=Bn}}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}const $M={kernelName:Id,backendName:"cpu",kernelFunc:RM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GM=Dt(fr,n=>Math.cos(n)),EM={kernelName:fr,backendName:"cpu",kernelFunc:GM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LM=Dt(mr,n=>Math.cosh(n)),DM={kernelName:mr,backendName:"cpu",kernelFunc:LM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n){const{inputs:t,backend:e,attrs:s}=n,{image:o,boxes:i,boxInd:r}=t,{cropSize:a,method:l,extrapolationValue:c}=s,[u,d,h,p]=o.shape,f=i.shape[0],[m,g]=a,b=wt([f,m,g,p],"float32"),x=e.data.get(i.dataId).values,w=e.data.get(r.dataId).values,y=e.data.get(o.dataId).values,I=ct(o.shape),C=ct(b.shape);for(let v=0;v<f;v++){const k=v*4,T=x[k],N=x[k+1],$=x[k+2],F=x[k+3],W=w[v];if(W>=u)continue;const V=m>1?($-T)*(d-1)/(m-1):0,_=g>1?(F-N)*(h-1)/(g-1):0;for(let X=0;X<m;X++){const K=m>1?T*(d-1)+X*V:.5*(T+$)*(d-1);if(K<0||K>d-1){for(let P=0;P<g;P++)for(let B=0;B<p;B++){const U=B+P*C[2]+X*C[1]+v*C[0];b.values[U]=c}continue}if(l==="bilinear"){const P=Math.floor(K),B=Math.ceil(K),U=K-P;for(let Y=0;Y<g;Y++){const j=g>1?N*(h-1)+Y*_:.5*(N+F)*(h-1);if(j<0||j>h-1){for(let it=0;it<p;it++){const lt=it+Y*C[2]+X*C[1]+v*C[0];b.values[lt]=c}continue}const J=Math.floor(j),nt=Math.ceil(j),q=j-J;for(let it=0;it<p;it++){let lt=it+J*I[2]+P*I[1]+W*I[0];const dt=y[lt];lt=it+nt*I[2]+P*I[1]+W*I[0];const pt=y[lt];lt=it+J*I[2]+B*I[1]+W*I[0];const xt=y[lt];lt=it+nt*I[2]+B*I[1]+W*I[0];const vt=y[lt],Mt=dt+(pt-dt)*q,Ot=xt+(vt-xt)*q;lt=it+Y*C[2]+X*C[1]+v*C[0],b.values[lt]=Mt+(Ot-Mt)*U}}}else for(let P=0;P<g;++P){const B=g>1?N*(h-1)+P*_:.5*(N+F)*(h-1);if(B<0||B>h-1){for(let j=0;j<p;j++){const J=j+P*C[2]+X*C[1]+v*C[0];b.values[J]=c}continue}const U=Math.round(B),Y=Math.round(K);for(let j=0;j<p;j++){const J=j+U*I[2]+Y*I[1]+W*I[0],nt=j+P*C[2]+X*C[1]+v*C[0];b.values[nt]=y[J]}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const zM={kernelName:vd,backendName:"cpu",kernelFunc:MM};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,exclusive:r,reverse:a}=s;rt(o,"cumprod");const l=Jt([i],o.shape.length);let c=o;l!=null&&(c=Ke({inputs:{x:o},backend:e,attrs:{perm:l}}));const u=ne(1,o.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const d=Qe(c.dtype,"int32"),h=cd(Z(c.shape),d),p=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=a?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<p.length;b+=f)for(let x=0;x<f;x++){const w=m(b,x);if(x===0)h[w]=r?1:p[w];else{const y=m(b,x-1);h[w]=r?p[y]*h[y]:p[w]*h[y]}}const g=e.makeTensorInfo(c.shape,d,h);if(l!=null){const b=Ws(l),x=Ke({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),x}return g}const WM={kernelName:Cd,backendName:"cpu",kernelFunc:FM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,exclusive:r,reverse:a}=s;rt(o,"cumsum");const l=Jt([i],o.shape.length);let c=o;l!=null&&(c=Ke({inputs:{x:o},backend:e,attrs:{perm:l}}));const u=ne(1,o.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const d=Qe(c.dtype,"int32"),h=Re(Z(c.shape),d),p=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=a?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<p.length;b+=f)for(let x=0;x<f;x++){const w=m(b,x);if(x===0)h[w]=r?0:p[w];else{const y=m(b,x-1);h[w]=r?p[y]+h[y]:p[w]+h[y]}}const g=e.makeTensorInfo(c.shape,d,h);if(l!=null){const b=Ws(l),x=Ke({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),x}return g}const _M={kernelName:Nl,backendName:"cpu",kernelFunc:VM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,weights:i}=t,{size:r,binaryOutput:a}=s;if(o.shape.length===1){const l=e.data.get(o.dataId).values,c=e.data.get(i.dataId).values,u=Tf(l,c,i.dtype,i.shape,r);return e.makeTensorInfo([r],i.dtype,u)}else if(o.shape.length===2){const l=e.bufferSync(o),c=e.bufferSync(i),u=Cy(l,c,r,a);return e.makeTensorInfo(u.shape,i.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const XM={kernelName:kd,backendName:"cpu",kernelFunc:AM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockSize:i,dataFormat:r}=s;S(r==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${r}`);const a=o.shape[0],l=o.shape[1],c=o.shape[2],u=o.shape[3],d=l*i,h=c*i,p=u/(i*i),f=e.data.get(o.dataId).values,m=new Float32Array(a*d*h*p);let g=0;for(let b=0;b<a;++b)for(let x=0;x<d;++x){const w=Math.floor(x/i),y=x%i;for(let I=0;I<h;++I){const C=Math.floor(I/i),v=I%i,k=(y*i+v)*p;for(let T=0;T<p;++T){const $=T+k+u*(C+c*(w+l*b));m[g++]=f[$]}}}return e.makeTensorInfo([a,d,h,p],o.dtype,m)}const PM={kernelName:Sd,backendName:"cpu",kernelFunc:OM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i}=t,{strides:r,pad:a,dilations:l,dimRoundingMode:c}=s;rt([o,i],"depthwiseConv2DNative");const u=ct(o.shape),d=ct(i.shape);let h=l;h==null&&(h=[1,1]),S(Ge(r,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${h}'`);const p=Ce(o.shape,i.shape,r,h,a,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:x}=p,w=x.left,y=x.top,I=p.outChannels/p.inChannels,C=new $e(p.outShape,o.dtype),v=e.data.get(o.dataId).values,k=e.data.get(i.dataId).values,T=C.values;for(let N=0;N<p.batchSize;++N){const $=N*u[0],F=N*C.strides[0];for(let W=0;W<p.outHeight;++W){const V=F+W*C.strides[1],_=W*p.strideHeight-y;for(let X=0;X<f;++X){const K=_+X*g;if(K<0||K>=p.inHeight)continue;const P=X*d[0],B=$+K*u[1];for(let U=0;U<p.outWidth;++U){const Y=V+U*C.strides[2],j=U*p.strideWidth-w;for(let J=0;J<m;++J){const nt=j+J*b;if(nt<0||nt>=p.inWidth)continue;const q=P+J*d[1],it=B+nt*p.inChannels;let lt=Y,dt=q;for(let pt=0;pt<p.inChannels;++pt){const xt=v[it+pt];for(let vt=0;vt<I;++vt)T[lt+vt]+=xt*k[dt+vt];lt+=I,dt+=I}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const ZM={kernelName:Rl,backendName:"cpu",kernelFunc:vw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:i}=t,{strides:r,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s;rt([o,i],"depthwiseConv2dNativeBackpropFilter");const d=Ce(o.shape,u,r,a,l,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new $e(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,w=d.outChannels/d.inChannels,y=e.data.get(o.dataId).values,I=new $e(o.shape,o.dtype,y),C=e.data.get(i.dataId).values,v=new $e(i.shape,i.dtype,C);for(let k=0;k<f;++k){const T=Math.max(0,Math.ceil((x-k)/h)),N=Math.min(d.outHeight,(d.inHeight+x-k)/h);for(let $=0;$<m;++$){const F=Math.max(0,Math.ceil((b-$)/p)),W=Math.min(d.outWidth,(d.inWidth+b-$)/p);for(let V=0;V<d.outChannels;++V){const _=Math.trunc(V/w),X=V%w;let K=0;for(let P=0;P<d.batchSize;++P)for(let B=T;B<N;++B){const U=k+B*h-x;for(let Y=F;Y<W;++Y){const j=$+Y*p-b;K+=I.get(P,U,j,_)*v.get(P,B,Y,V)}}g.set(K,k,$,_,X)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const BM={kernelName:Td,backendName:"cpu",kernelFunc:KM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:i}=t,{strides:r,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s;rt([o,i],"depthwiseConv2DNativeBackpropInput");const d=ct(o.shape),h=ct(i.shape),p=Ce(u,i.shape,r,a,l,c,!0),f=new $e(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,w=e.data.get(o.dataId).values,[y,I,C]=d,v=e.data.get(i.dataId).values,[k,T,N]=h,{batchSize:$,filterHeight:F,filterWidth:W,inChannels:V,inHeight:_,inWidth:X,outChannels:K,outHeight:P,outWidth:B,strideHeight:U,strideWidth:Y}=p,j=F-1-p.padInfo.top,J=W-1-p.padInfo.left,nt=K/V;for(let q=0;q<$;++q)for(let it=0;it<V;++it)for(let lt=0;lt<_;++lt){const dt=lt-j,pt=Math.max(0,Math.ceil(dt/U)),xt=Math.min(P,(F+dt)/U);for(let vt=0;vt<X;++vt){const Mt=vt-J,Ot=Math.max(0,Math.ceil(Mt/Y)),Ht=Math.min(B,(W+Mt)/Y);let Qt=0;for(let zt=pt;zt<xt;++zt){const te=zt*U-dt;for(let oe=Ot;oe<Ht;++oe){const Ns=oe*Y-Mt,Ne=y*q+I*zt+C*oe,oo=k*(F-1-te)+T*(W-1-Ns)+N*it;for(let bn=0;bn<nt;++bn){const ei=it*nt+bn,Bn=w[Ne+ei],Rs=v[oo+bn];Qt+=Bn*Rs}}}m[g*q+b*lt+x*vt+it]=Qt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}const UM={kernelName:Nd,backendName:"cpu",kernelFunc:HM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(n){const{inputs:t,backend:e}=n,{x:s}=t,o=Z(s.shape),i=e.data.get(s.dataId).values,r=wt([o,o],s.dtype),a=r.values;for(let c=0;c<i.length;c++)a[c*o+c]=i[c];const l=[...s.shape,...s.shape];return e.makeTensorInfo(l,r.dtype,r.values)}const QM={kernelName:ug,backendName:"cpu",kernelFunc:YM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JM={kernelName:$l,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:o}=n,{strides:i,pad:r,dilations:a}=e,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,d=l.data.get(o.dataId).values,h=o.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:w,strideHeight:y,strideWidth:I,filterHeight:C,filterWidth:v,dilationHeight:k,dilationWidth:T,outShape:N}=ra(s.shape,o.shape,i,r,"NHWC",a),$=Z(N),F=N.length,W=ie(s.dtype,$);for(let _=0;_<p;++_)for(let X=0;X<b;++X){const K=X*y-w.top;for(let P=0;P<x;++P){const B=P*I-w.left;for(let U=0;U<g;++U){let Y=Number.MIN_SAFE_INTEGER;for(let J=0;J<C;++J){const nt=K+J*k;if(nt>=0&&nt<f)for(let q=0;q<v;++q){const it=B+q*T;if(it>=0&&it<m){const lt=Un([_,nt,it,U],u,ct(s.shape)),dt=Un([J,q,U],h,ct(o.shape)),pt=c[lt]+d[dt];pt>Y&&(Y=pt)}}}const j=Un([_,X,P,U],F,ct(N));W[j]=Y}}}return{dataId:l.write(mo(W,s.dtype),N,s.dtype),shape:N,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jM={kernelName:$d,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:o,dy:i}=n,{strides:r,pad:a,dilations:l}=e,c=t,u=Dn(s.shape,c.data.get(s.dataId).values),d=Dn(o.shape,c.data.get(o.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:w,strideWidth:y,filterHeight:I,filterWidth:C,dilationHeight:v,dilationWidth:k,outShape:T}=ra(s.shape,o.shape,r,a,"NHWC",l);S(i.rank===T.length,()=>`Error in ${$d}, dy must have the same rank as output ${T.length}, but got ${i.rank}`);const N=Dn(T,c.data.get(i.dataId).values),$=og(o.shape,o.dtype);for(let W=0;W<h;++W)for(let V=0;V<g;++V){const _=V*w-x.top;for(let X=0;X<b;++X){const K=X*y-x.left;for(let P=0;P<m;++P){let B=Number.MIN_SAFE_INTEGER,U=0,Y=0;for(let j=0;j<I;++j){const J=_+j*v;if(J>=0&&J<p)for(let nt=0;nt<C;++nt){const q=K+nt*k;if(q>=0&&q<f){const it=u[W][J][q][P]+d[j][nt][P];it>B&&(B=it,U=j,Y=nt)}}}$[U][Y][P]+=N[W][V][X][P]}}}return{dataId:c.write(mo($,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qM={kernelName:Rd,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:o,dy:i}=n,{strides:r,pad:a,dilations:l}=e,c=t,u=Dn(s.shape,c.data.get(s.dataId).values),d=Dn(o.shape,c.data.get(o.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:w,strideWidth:y,filterHeight:I,filterWidth:C,dilationHeight:v,dilationWidth:k,outShape:T}=ra(s.shape,o.shape,r,a,"NHWC",l);S(i.rank===T.length,()=>`Error in ${Rd}, dy must have the same rank as output ${T.length}, but got ${i.rank}`);const N=Dn(T,c.data.get(i.dataId).values),$=og(s.shape,s.dtype);for(let W=0;W<h;++W)for(let V=0;V<g;++V){const _=V*w-x.top;for(let X=0;X<b;++X){const K=X*y-x.left;for(let P=0;P<m;++P){let B=Number.MIN_SAFE_INTEGER,U=_<0?0:_,Y=K<0?0:K;for(let j=0;j<I;++j){const J=_+j*v;if(J>=0&&J<p)for(let nt=0;nt<C;++nt){const q=K+nt*k;if(q>=0&&q<f){const it=u[W][J][q][P]+d[j][nt][P];it>B&&(B=it,U=J,Y=q)}}}$[W][U][Y][P]+=N[W][V][X][P]}}}return{dataId:c.write(mo($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function La(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s;rt(o,"sum");let a;o.dtype==="bool"?a=Us({inputs:{x:o},backend:e,attrs:{dtype:"int32"}}):a=is({inputs:{x:o},backend:e});const l=a.shape.length,c=yt(i,a.shape),u=Jt(c,l);let d=c,h=a;u!=null&&(h=Ke({inputs:{x:a},backend:e,attrs:{perm:u}}),d=ne(d.length,l)),ve("sum",d,h.shape.length);const[p,f]=be(h.shape,d),m=Qe(h.dtype,"int32");let g=du(e,p,m);const b=Z(f),x=e.data.get(g.dataId).values,w=e.data.get(h.dataId).values;for(let y=0;y<x.length;++y){const I=y*b;let C=0;for(let v=0;v<b;++v)C+=w[I+v];x[y]=C}if(r){const y=le(g.shape,c),I=g;g=At({inputs:{x:g},backend:e,attrs:{shape:y}}),e.disposeIntermediateTensorInfo(I)}return e.disposeIntermediateTensorInfo(a),u!=null&&e.disposeIntermediateTensorInfo(h),g}const tz={kernelName:lc,backendName:"cpu",kernelFunc:La};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ez(n){const{inputs:t,backend:e,attrs:s}=n,{equation:o}=s,i=t,{allDims:r,summedDims:a,idDims:l}=Lp(o,i.length);Mp(r.length,l,i);const{path:c,steps:u}=zp(a,l),d=u.length;let h=null,p=r.length;const f=[];for(let m=0;m<d;++m){for(const g of u[m]){const{permutationIndices:b,expandDims:x}=Dp(p,l[g]);let w;Fp(b)?w=i[g]:(w=Ke({inputs:{x:i[g]},backend:e,attrs:{perm:b}}),f.push(w));const y=w.shape.slice();for(let I=0;I<x.length;++I)y.splice(x[I],0,1);$t(w.shape,y)||(w=At({inputs:{x:w},backend:e,attrs:{shape:y}}),f.push(w)),h===null?h=w:(h=hu({inputs:{a:w,b:h},backend:e}),f.push(h))}m<d-1&&(c[m]>=0&&(h=La({inputs:{x:h},backend:e,attrs:{axis:c[m]-(r.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&e.disposeIntermediateTensorInfo(m);return h}const nz={kernelName:dg,backendName:"cpu",kernelFunc:ez};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sz(n){const{inputs:t,backend:e}=n,{dy:s,y:o}=t;rt([s,o],"eluGrad");const i=new Float32Array(Z(o.shape)),r=e.data.get(o.dataId).values,a=e.data.get(s.dataId).values;for(let l=0;l<r.length;++l){const c=r[l];c>=1?i[l]=a[l]:i[l]=a[l]*(c+1)}return e.makeTensorInfo(o.shape,"float32",i)}const oz={kernelName:Gd,backendName:"cpu",kernelFunc:sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iz=kp,rz=Sp,az=Tp,lz=Np,cz=Rp,uz=$p,dz=Dt(xr,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+iz*e);return t*(1-((((uz*s+cz)*s+lz)*s+az)*s+rz)*s*Math.exp(-e*e))}),hz={kernelName:xr,backendName:"cpu",kernelFunc:dz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mu(n){const{inputs:t,backend:e,attrs:s}=n,{input:o}=t,{dim:i}=s,r=o.shape.length,a=o.shape.slice();let l=i;return i<0&&(S(-(r+1)<=i,()=>`Axis must be in the interval [${-(r+1)}, ${r}]`),l=r+i+1),a.splice(l,0,1),At({inputs:{x:o},backend:e,attrs:{shape:a}})}const pz={kernelName:El,backendName:"cpu",kernelFunc:mu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fz=ue((n,t)=>n/t),Lf=we(gr,fz),Df={kernelName:gr,backendName:"cpu",kernelFunc:Lf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kw(n,t,e){const s=n.shape,o=s[0],i=s[1],r=e.data.get(n.dataId),a=r.complexTensorInfos.real,l=r.complexTensorInfos.imag,c=[o,i],u=Z(c),d=Ie("float32",u),h=Ie("float32",u);for(let g=0;g<o;g++){const b=Xo({inputs:{x:a},backend:e,attrs:{begin:[g,0],size:[1,i]}}),x=Xo({inputs:{x:l},backend:e,attrs:{begin:[g,0],size:[1,i]}}),w=tn({inputs:{real:b,imag:x},backend:e}),{real:y,imag:I}=mz(w,t,e),C=ws(y,I);for(let v=0;v<i;v++){const k=Gp(C,v);d[g*i+v]=k.real,h[g*i+v]=k.imag}e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(w)}const p=e.makeTensorInfo(c,"float32",d),f=e.makeTensorInfo(c,"float32",h),m=tn({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),m}function mz(n,t,e){const s=Z(n.shape),o=e.data.get(n.dataId),i=e.data.get(o.complexTensorInfos.real.dataId).values,r=e.data.get(o.complexTensorInfos.imag.dataId).values;if(gz(s)){const a=Mf(i,r,s,t,e),l=[n.shape[0],n.shape[1]];if(t){const c=e.makeTensorInfo(l,"float32",a.real),u=e.makeTensorInfo(l,"float32",a.imag),d=e.makeTensorInfo([],"float32",Es(s,"float32")),h=is({inputs:{x:d},backend:e}),p=Df.kernelFunc({inputs:{a:c,b:d},backend:e}),f=Df.kernelFunc({inputs:{a:u,b:h},backend:e}),m=e.data.get(p.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=ws(i,r),l=bz(a,s,t);return cb(l)}}function gz(n){return(n&n-1)===0}function Mf(n,t,e,s,o){if(e===1)return{real:n,imag:t};const i=ws(n,t),r=e/2,a=ub(i),l=a.real,c=a.imag,u=[l.length],d=o.makeTensorInfo(u,"float32",l),h=o.makeTensorInfo(u,"float32",c),p=tn({inputs:{real:d,imag:h},backend:o}),f=db(i),m=f.real,g=f.imag,b=[m.length],x=o.makeTensorInfo(b,"float32",m),w=o.makeTensorInfo(b,"float32",g),y=tn({inputs:{real:x,imag:w},backend:o}),I=Mf(l,c,r,s,o),C=I.real,v=I.imag,k=[C.length],T=o.makeTensorInfo(k,"float32",C),N=o.makeTensorInfo(k,"float32",v),$=tn({inputs:{real:T,imag:N},backend:o}),F=Mf(m,g,r,s,o),W=F.real,V=F.imag,_=[W.length],X=o.makeTensorInfo(_,"float32",W),K=o.makeTensorInfo(_,"float32",V),P=tn({inputs:{real:X,imag:K},backend:o}),B=pb(e,s),U=[B.real.length],Y=o.makeTensorInfo(U,"float32",B.real),j=o.makeTensorInfo(U,"float32",B.imag),J=tn({inputs:{real:Y,imag:j},backend:o}),nt=hu({inputs:{a:J,b:P},backend:o}),q=$i({inputs:{a:$,b:nt},backend:o}),it=Gf({inputs:{a:$,b:nt},backend:o}),lt=Ao({inputs:{input:q},backend:o}),dt=Ao({inputs:{input:it},backend:o}),pt=Li({inputs:{input:q},backend:o}),xt=Li({inputs:{input:it},backend:o}),vt=Di({inputs:[lt,dt],backend:o,attrs:{axis:0}}),Mt=Di({inputs:[pt,xt],backend:o,attrs:{axis:0}}),Ot=o.data.get(vt.dataId).values,Ht=o.data.get(Mt.dataId).values;return o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(N),o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(K),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(it),o.disposeIntermediateTensorInfo(lt),o.disposeIntermediateTensorInfo(pt),o.disposeIntermediateTensorInfo(dt),o.disposeIntermediateTensorInfo(xt),o.disposeIntermediateTensorInfo(vt),o.disposeIntermediateTensorInfo(Mt),{real:Ot,imag:Ht}}function bz(n,t,e){const s=new Float32Array(t*2);for(let o=0;o<t;o++){let i=0,r=0;for(let a=0;a<t;a++){const l=fb(o*a,t,e),c=Gp(n,a);i+=c.real*l.real-c.imag*l.imag,r+=c.real*l.imag+c.imag*l.real}e&&(i/=t,r/=t),hb(s,i,r,o)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(n){const{inputs:t,backend:e}=n,{input:s}=t,o=Z(s.shape),i=s.shape[s.shape.length-1],r=o/i,a=At({inputs:{x:s},backend:e,attrs:{shape:[r,i]}}),l=kw(a,!1,e),c=At({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const yz={kernelName:Ed,backendName:"cpu",kernelFunc:xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zf(n){const{backend:t,attrs:e}=n,{shape:s,value:o,dtype:i}=e,r=i||sr(o),a=ie(r,Z(s));return Iz(a,o,r),t.makeTensorInfo(s,r,a)}const wz={kernelName:Ld,backendName:"cpu",kernelFunc:zf};function Iz(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cz={kernelName:Dd,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,o=e,i=Ie(s.dtype,Z(s.shape)),[r,a,l,c]=s.shape,u=o.data.get(s.dataId).values;for(let h=0;h<r;h++){const p=h*l*a*c;for(let f=0;f<a;f++){const m=f*(l*c);for(let g=0;g<l;g++){const b=g*c;for(let x=0;x<c;x++){const w=Math.round(l-g-1),y=p+m+b+x;let I=u[y];if(w>=0&&w<l){const C=w*c,v=p+m+C+x;I=u[v]}i[y]=I}}}}return{dataId:o.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vz=ue((n,t)=>Math.floor(n/t)),kz=we(Cr,vz,null,"int32"),Sz={kernelName:Cr,backendName:"cpu",kernelFunc:kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i,bias:r,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=Cw({inputs:{x:o,filter:i},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h}});if(r){const g=m;if(u==="NCHW"&&r.shape.length===1&&r.shape[0]!==1){const b=At({inputs:{x:r},backend:e,attrs:{shape:[r.shape[0],1,1]}});m=$i({inputs:{a:m,b},backend:e}),e.disposeIntermediateTensorInfo(b)}else m=$i({inputs:{a:m,b:r},backend:e});e.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(u==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const b=At({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});m=fu(e,m,p,b,f),e.disposeIntermediateTensorInfo(b)}else m=fu(e,m,p,a,f);e.disposeIntermediateTensorInfo(g)}return m}const Nz={kernelName:gc,backendName:"cpu",kernelFunc:Tz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rz(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i,bias:r,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=vw({inputs:{x:o,filter:i},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h}});if(r){const g=m;m=$i({inputs:{a:m,b:r},backend:e}),e.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=fu(e,m,p,a,f),e.disposeIntermediateTensorInfo(g)}return m}const $z={kernelName:$g,backendName:"cpu",kernelFunc:Rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n){const{inputs:t,backend:e}=n,{params:s,indices:o}=t,i=Z(s.shape),r=o.shape,a=r[r.length-1],[l,c,u,d]=xh(s,o);if(c===0)return e.makeTensorInfo(l,s.dtype,[]);const h=e.data.get(o.dataId).values,p=e.bufferSync(s),f=Ey(h,p,s.dtype,c,a,u,d,s.shape,i);return e.makeTensorInfo(l,s.dtype,f.values)}const Ez={kernelName:hg,backendName:"cpu",kernelFunc:Gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,indices:i}=t,{axis:r,batchDims:a}=s;rt([o,i],"gatherV2");const l=yt(r,o.shape)[0],c=e.data.get(i.dataId).values,u=o.shape[l];for(let y=0;y<c.length;++y){const I=c[y];S(I<=u-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${u-1}]`)}let d=a;a==null&&(d=0);const h=Z(i.shape),p=_p(o,i,l,d),f=At({inputs:{x:o},backend:e,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=At({inputs:{x:i},backend:e,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],b=e.bufferSync(m),x=e.bufferSync(f),w=Ly(x,b,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.makeTensorInfo(p.outputShape,w.dtype,w.values)}const Dz={kernelName:Dl,backendName:"cpu",kernelFunc:Lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(n){const{inputs:t,backend:e}=n,{input:s}=t,o=Z(s.shape),i=s.shape[s.shape.length-1],r=o/i,a=At({inputs:{x:s},backend:e,attrs:{shape:[r,i]}}),l=kw(a,!0,e),c=At({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const zz={kernelName:Md,backendName:"cpu",kernelFunc:Mz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fz=Dt(Sr,n=>Number.isFinite(n)?1:0,"bool"),Wz={kernelName:Sr,backendName:"cpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vz=Dt(Tr,n=>Math.abs(n)===1/0?1:0,"bool"),_z={kernelName:Tr,backendName:"cpu",kernelFunc:Vz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az=Dt(Nr,n=>Number.isNaN(n)?1:0,"bool"),Xz={kernelName:Nr,backendName:"cpu",kernelFunc:Az};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(n){const{backend:t,attrs:e}=n,{start:s,stop:o,num:i}=e,r=Wy(s,o,i);return t.makeTensorInfo([r.length],"float32",r)}const Pz={kernelName:pg,backendName:"cpu",kernelFunc:Oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zz=Dt($r,n=>Math.log1p(n)),Kz={kernelName:$r,backendName:"cpu",kernelFunc:Zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bz=ue((n,t)=>n&&t),Hz=we(Vl,Bz,null,"bool"),Uz={kernelName:Vl,backendName:"cpu",kernelFunc:Hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yz=Dt(_l,n=>n?0:1,"bool"),Qz={kernelName:_l,backendName:"cpu",kernelFunc:Yz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jz=ue((n,t)=>n||t),jz=we(Al,Jz,null,"bool"),qz={kernelName:Al,backendName:"cpu",kernelFunc:jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{depthRadius:i,bias:r,alpha:a,beta:l}=s;rt(o,"LRN");const c=o.shape[3],u=c-1,d=e.data.get(o.dataId).values,h=Z(o.shape),p=new Float32Array(h);function f(m){const g=m%c;let b=m-g+Math.max(0,g-i);const x=m-g+Math.min(g+i,u);let w=0;for(;b<=x;b++){const y=d[b];w+=y*y}return w}for(let m=0;m<h;m++){const g=f(m),b=d[m]*Math.pow(r+a*g,-l);p[m]=b}return e.makeTensorInfo(o.shape,o.dtype,p)}const eF={kernelName:Xl,backendName:"cpu",kernelFunc:tF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,y:i,dy:r}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=s;rt(r,"LRNGrad");const d=Z(r.shape),h=r.shape[3],p=e.data.get(r.dataId).values,f=e.data.get(o.dataId).values,m=e.data.get(i.dataId).values,g=new Float32Array(d),b=d;for(let x=0;x<b;x++){const w=x%h,y=x-w+Math.max(0,w-a),I=x-w+Math.min(h,w+a+1);let C=0;for(let v=y;v<I;v++)C+=Math.pow(f[v],2);C=c*C+l;for(let v=y;v<I;v++){let k=-2*c*u*f[v]*m[x]/C;x===v&&(k+=Math.pow(C,-u)),k*=p[x],g[v]+=k}}return e.makeTensorInfo(r.shape,o.dtype,g)}const sF={kernelName:Fd,backendName:"cpu",kernelFunc:nF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sw(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{reductionIndices:i,keepDims:r}=s,a=e;let l=o.shape;const c=l.length,u=yt(i,l);let d=u;const h=Jt(d,c);let p=a.data.get(o.dataId).values;if(h!=null){const y=new Array(c);for(let I=0;I<y.length;I++)y[I]=l[h[I]];p=Rf(p,l,o.dtype,h,y),d=ne(d.length,c),l=y}rt(o,"max"),ve("max",d,c);const[f,m]=be(l,d),g=Z(m),b=_y(p,g,f,o.dtype),x=a.write(b,f,o.dtype);let w=f;return r&&(w=le(f,u)),{dataId:x,shape:w,dtype:o.dtype}}const oF={kernelName:Ol,backendName:"cpu",kernelFunc:Sw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t;rt(o,"maxPool");const{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=s,c=1;S(Ge(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=Cn(o.shape,i,r,c,a,l);let d;if(u.filterWidth===1&&u.filterHeight===1&&$t(u.inShape,u.outShape))d=is({inputs:{x:o},backend:e});else{const h=e.data.get(o.dataId).values,p=ct(o.shape),f=Ef(h,o.shape,o.dtype,p,u,"max");d=e.makeTensorInfo(u.outShape,o.dtype,f.values)}return d}const rF={kernelName:Pl,backendName:"cpu",kernelFunc:iF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{filterSize:i,strides:r,pad:a,dimRoundingMode:l,dataFormat:c}=s;rt(o,"maxPool3d");const u=ms(o.shape,i,r,1,a,l,c),d=e.data.get(o.dataId).values,h=Iw(d,o.shape,o.dtype,ct(o.shape),u,"max");return e.makeTensorInfo(h.shape,"float32",h.values)}const lF={kernelName:Zl,backendName:"cpu",kernelFunc:aF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:i}=t,{filterSize:r,strides:a,pad:l,dimRoundingMode:c}=s;rt([o,i],"maxPool3DGrad");const u=ms(i.shape,r,a,1,l,c),d=e.bufferSync(i),h=JD(d,u),p=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,w=u.effectiveFilterDepth,y=u.effectiveFilterHeight,I=u.effectiveFilterWidth,C=w-1-u.padInfo.front,v=I-1-u.padInfo.left,k=y-1-u.padInfo.top,T=wt(i.shape,"float32"),N=e.bufferSync(o);for(let $=0;$<u.batchSize;++$)for(let F=0;F<u.inChannels;++F)for(let W=0;W<u.inDepth;++W)for(let V=0;V<u.inHeight;++V)for(let _=0;_<u.inWidth;++_){const X=W-C,K=V-k,P=_-v;let B=0;for(let U=0;U<w;U+=g){const Y=(X+U)/p;if(!(Y<0||Y>=u.outDepth||Math.floor(Y)!==Y))for(let j=0;j<y;j+=b){const J=(K+j)/f;if(!(J<0||J>=u.outHeight||Math.floor(J)!==J))for(let nt=0;nt<I;nt+=x){const q=(P+nt)/m;if(q<0||q>=u.outWidth||Math.floor(q)!==q)continue;const it=w*y*I-1-h.get($,Y,J,q,F),lt=U*y*I+j*I+nt,dt=it===lt?1:0;if(dt===0)continue;const pt=N.get($,Y,J,q,F);B+=pt*dt}}}T.set(B,$,W,V,_,F)}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const uF={kernelName:Vd,backendName:"cpu",kernelFunc:cF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:i,output:r}=t,a=i;rt([i,r],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,h=Cn(a.shape,l,c,1,u,d),p=e.data.get(a.dataId).values,f=wt(h.outShape,a.dtype,ww(p,a.shape,a.dtype,h).values),m=h.strideHeight,g=h.strideWidth,b=h.dilationHeight,x=h.dilationWidth,w=h.effectiveFilterHeight,y=h.effectiveFilterWidth,I=y-1-h.padInfo.left,C=w-1-h.padInfo.top,v=wt(a.shape,"float32"),k=e.data.get(o.dataId).values,T=wt(o.shape,"float32",k);for(let N=0;N<h.batchSize;++N)for(let $=0;$<h.inChannels;++$)for(let F=0;F<h.inHeight;++F)for(let W=0;W<h.inWidth;++W){const V=F-C,_=W-I;let X=0;for(let K=0;K<w;K+=b){const P=(V+K)/m;if(!(P<0||P>=h.outHeight||Math.floor(P)!==P))for(let B=0;B<y;B+=x){const U=(_+B)/g;if(U<0||U>=h.outWidth||Math.floor(U)!==U)continue;const Y=w*y-1-f.get(N,P,U,$),j=K*y+B,J=Y===j?1:0;if(J===0)continue;const nt=T.get(N,P,U,$);X+=nt*J}}v.set(X,N,F,W,$)}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const hF={kernelName:Wd,backendName:"cpu",kernelFunc:dF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n,t,e,s,o){const i=ct(t),r=Ef(n,t,e,i,o,"max"),a=ww(n,t,e,o,!0,s);return[r.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fF={kernelName:fg,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:o,strides:i,pad:r,includeBatchInIndex:a}=t,l=e;rt(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=Cn(s.shape,o,i,[1,1],r),[d,h]=pF(c,s.shape,s.dtype,a,u),p=l.write(d,u.outShape,s.dtype),f=l.write(h,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s,a=yt(i,o.shape),c=be(o.shape,a)[1],u=Z(c),d=[],h=e.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);const p=Us({inputs:{x:o},backend:e,attrs:{dtype:"float32"}});d.push(p);const f=Lf({inputs:{a:p,b:h},backend:e});d.push(f);const m=La({inputs:{x:f},backend:e,attrs:{axis:i,keepDims:r}});return d.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}const gF={kernelName:Kl,backendName:"cpu",kernelFunc:mF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s;rt(o,"min");const a=yt(i,o.shape);let l=a;const c=Jt(l,o.shape.length);let u=o;c!=null&&(u=Ke({inputs:{x:o},backend:e,attrs:{perm:c}}),l=ne(l.length,o.shape.length)),ve("min",l,u.shape.length);const[d,h]=be(u.shape,l),p=Z(h),f=Re(Z(d),u.dtype),m=e.data.get(u.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let w=m[x];for(let y=0;y<p;++y){const I=m[x+y];(Number.isNaN(I)||I<w)&&(w=I)}f[b]=w}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(d,u.dtype,f);if(r){const b=le(d,a),x=At({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),x}return g}const xF={kernelName:Bl,backendName:"cpu",kernelFunc:bF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{paddings:i,mode:r}=s;rt(o,"mirrorPad");const a=i.map((w,y)=>w[0]+o.shape[y]+w[1]),l=i.map(w=>w[0]),c=i.map((w,y)=>w[0]+o.shape[y]),u=r==="reflect"?0:1,d=e.data.get(o.dataId).values,h=o.shape.length,p=ct(o.shape),f=Z(a),m=a.length,g=ct(a),b=Ie(o.dtype,f);for(let w=0;w<f;w++){let y=ri(w,m,g);for(let C=0;C<m;C++)y[C]<l[C]?y[C]=l[C]*2-y[C]-u:y[C]>=c[C]&&(y[C]=(c[C]-1)*2-y[C]+u);y=y.map((C,v)=>C-l[v]);const I=Un(y,h,p);b[w]=d[I]}return{dataId:e.write(b,a,o.dtype),shape:a,dtype:o.dtype}}const wF={kernelName:Hl,backendName:"cpu",kernelFunc:yF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IF=ue((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),CF=we(Lr,IF),vF={kernelName:Lr,backendName:"cpu",kernelFunc:CF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(n){const{inputs:t,backend:e,attrs:s}=n,{logits:o}=t,{dim:i}=s,r=o.shape.length;let a=i;if(a===-1&&(a=r-1),a!==r-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${r} and dim was ${a}`);const l=yt([a],o.shape),c=Sw({inputs:{x:o},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=le(c.shape,l),d=At({inputs:{x:c},backend:e,attrs:{shape:u}}),h=Gf({inputs:{a:o,b:d},backend:e}),p=Ry({inputs:{x:h},backend:e}),f=La({inputs:{x:p},backend:e,attrs:{axis:l,keepDims:!1}}),m=At({inputs:{x:f},backend:e,attrs:{shape:u}}),g=Lf({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const kF={kernelName:dc,backendName:"cpu",kernelFunc:Tw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SF(n){const{inputs:t,backend:e,attrs:s}=n,{logits:o}=t,{numSamples:i,seed:r,normalized:a}=s;rt(o,"multinomial");const l=a?o:Tw({inputs:{logits:o},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],d=e.data.get(l.dataId).values,h=[c,i],p=Re(Z(h),"int32");for(let f=0;f<c;++f){const m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+d[m+w];const b=jh.alea(r.toString()),x=f*i;for(let w=0;w<i;++w){const y=b();p[x+w]=g.length;for(let I=0;I<g.length;I++)if(y<g[I]){p[x+w]=I;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(h,"int32",p)}const TF={kernelName:mg,backendName:"cpu",kernelFunc:SF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NF=cp;function RF(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:i}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l}=s;rt(o,"NonMaxSuppression");const c=e.data.get(o.dataId).values,u=e.data.get(i.dataId).values,{selectedIndices:d}=NF(c,u,r,a,l);return e.makeTensorInfo([d.length],"int32",new Int32Array(d))}const $F={kernelName:_d,backendName:"cpu",kernelFunc:RF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GF=up;function EF(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:i}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;rt(o,"NonMaxSuppressionPadded");const u=e.data.get(o.dataId).values,d=e.data.get(i.dataId).values,{selectedIndices:h,validOutputs:p}=GF(u,d,r,a,l,c);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const LF={kernelName:Ad,backendName:"cpu",kernelFunc:EF};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF=dp;function MF(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:i}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;rt(o,"NonMaxSuppressionWithScore");const u=e.data.get(o.dataId).values,d=e.data.get(i.dataId).values,h=r,p=a,f=l,m=c,{selectedIndices:g,selectedScores:b}=DF(u,d,h,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const zF={kernelName:Xd,backendName:"cpu",kernelFunc:MF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FF(n){const{inputs:t,backend:e,attrs:s}=n,{indices:o}=t,{dtype:i,depth:r,onValue:a,offValue:l}=s;rt(o,"oneHot");const c=Z(o.shape),u=new Float32Array(c*r);u.fill(l);const d=e.data.get(o.dataId).values;for(let h=0;h<c;++h)d[h]>=0&&d[h]<r&&(u[h*r+d[h]]=a);return e.makeTensorInfo([...o.shape,r],i,u)}const WF={kernelName:Jl,backendName:"cpu",kernelFunc:FF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gu(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Ao({inputs:{input:s},backend:e}),i=gu({inputs:{x:o},backend:e}),r=Li({inputs:{input:s},backend:e}),a=gu({inputs:{x:r},backend:e}),l=tn({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),l}else return zf({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const VF={kernelName:fc,backendName:"cpu",kernelFunc:gu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nw(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Ao({inputs:{input:s},backend:e}),i=Nw({inputs:{x:o},backend:e}),r=Li({inputs:{input:s},backend:e}),a=gu({inputs:{x:r},backend:e}),l=tn({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),l}else return zf({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const _F={kernelName:Ql,backendName:"cpu",kernelFunc:Nw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rw(n){const{inputs:t,backend:e,attrs:s}=n,{axis:o}=s;if(t.length===1)return mu({inputs:{input:t[0]},backend:e,attrs:{dim:o}});const i=t[0].shape,r=t[0].dtype;t.forEach(u=>{nd(i,u.shape,"All tensors passed to stack must have matching shapes"),S(r===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const d=mu({inputs:{input:u},backend:e,attrs:{dim:o}});return a.push(d),d}),c=Di({inputs:l,backend:e,attrs:{axis:o}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const AF={kernelName:jl,backendName:"cpu",kernelFunc:Rw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{paddings:i,constantValue:r}=s;rt(o,"pad");const a=i.map((x,w)=>x[0]+o.shape[w]+x[1]),l=i.map(x=>x[0]),c=e.data.get(o.dataId).values,u=Z(o.shape),d=o.shape.length,h=ct(o.shape),p=Z(a),f=a.length,m=ct(a),g=Ie(o.dtype,p);r!==0&&g.fill(r);for(let x=0;x<u;x++){const y=ri(x,d,h).map((C,v)=>C+l[v]),I=Un(y,f,m);g[I]=c[x]}return{dataId:e.write(g,a,o.dtype),shape:a,dtype:o.dtype}}const $w={kernelName:ql,backendName:"cpu",kernelFunc:XF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OF=ue((n,t)=>Math.pow(n,t)),PF=we(Mr,OF),ZF={kernelName:Mr,backendName:"cpu",kernelFunc:PF};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:i,indices:r}=t,a=o.map(g=>e.data.get(g.dataId).values),l=o.map(g=>g.shape),c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,[d,h,p]=By(a,l,c,i.shape,i.dtype,u,r.shape),f=d.map(g=>e.makeTensorInfo([g.length],"int32",g)),m=e.makeTensorInfo(p,i.dtype,h);return f.concat([m])}const BF={kernelName:gg,backendName:"cpu",kernelFunc:KF};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(n){const{inputs:t,backend:e}=n,{starts:s,limits:o,deltas:i}=t,r=e.data.get(s.dataId).values,a=e.data.get(o.dataId).values,l=e.data.get(i.dataId).values,[c,u]=Uy(r,s.shape,s.dtype,a,o.shape,l,i.shape),d=e.makeTensorInfo([c.length],"int32",c),h=e.makeTensorInfo([u.length],s.dtype,u);return[d,h]}const UF={kernelName:bg,backendName:"cpu",kernelFunc:HF};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(n){const{inputs:t,backend:e,attrs:s}=n,{shape:o,values:i,defaultValue:r,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=s,c=e.data.get(o.dataId).values,u=e.data.get(i.dataId).values,d=e.data.get(r.dataId).values,h=a.map(g=>e.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=Jy(c,o.shape,u,i.shape,i.dtype,d,r.shape,h,p,l);return e.makeTensorInfo(f,i.dtype,m)}const QF={kernelName:xg,backendName:"cpu",kernelFunc:YF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(n){const{backend:t,attrs:e}=n,{start:s,stop:o,dtype:i,step:r}=e,a=jy(s,o,r,i);return t.makeTensorInfo([a.length],i,a)}const jF={kernelName:Od,backendName:"cpu",kernelFunc:JF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qF=Dt(zr,n=>1/n),tW={kernelName:zr,backendName:"cpu",kernelFunc:qF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(n){const{inputs:t,backend:e,attrs:s}=n,{images:o}=t,{alignCorners:i,halfPixelCenters:r,size:a}=s;rt(o,"resizeBilinear");const l=ct(o.shape),[c,u]=a,[d,h,p,f]=o.shape,m=e.data.get(o.dataId).values,g=new Float32Array(Z([d,c,u,f])),b=[i&&c>1?h-1:h,i&&u>1?p-1:p],x=[i&&c>1?c-1:c,i&&u>1?u-1:u];let w=0;const y=b[0]/x[0],I=b[1]/x[1];for(let C=0;C<d;C++)for(let v=0;v<c;v++){let k;r?k=y*(v+.5)-.5:k=y*v;const T=Math.max(0,Math.floor(k)),N=k-T,$=Math.min(h-1,Math.ceil(k)),F=C*l[0]+T*l[1],W=C*l[0]+$*l[1];for(let V=0;V<u;V++){let _;r?_=I*(V+.5)-.5:_=I*V;const X=Math.max(0,Math.floor(_)),K=_-X,P=Math.min(p-1,Math.ceil(_)),B=F+X*l[2],U=W+X*l[2],Y=F+P*l[2],j=W+P*l[2];for(let J=0;J<f;J++){const nt=m[B+J],q=m[U+J],it=m[Y+J],lt=m[j+J],dt=nt+(it-nt)*K,pt=q+(lt-q)*K,xt=dt+(pt-dt)*N;g[w++]=xt}}}return e.makeTensorInfo([d,c,u,f],"float32",g)}const nW={kernelName:oc,backendName:"cpu",kernelFunc:eW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(n){const{inputs:t,backend:e,attrs:s}=n,{images:o,dy:i}=t,{alignCorners:r}=s;rt([i,o],"resizeBilinearGrad");const a=ct(o.shape),[l,c,u,d]=o.shape,[,h,p]=i.shape,f=new Float32Array(l*c*u*d),m=[r&&h>1?c-1:c,r&&p>1?u-1:u],g=[r&&h>1?h-1:h,r&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],w=e.data.get(i.dataId).values;let y=0;for(let I=0;I<l;I++){const C=I*a[0];for(let v=0;v<h;v++){const k=v*b,T=Math.floor(k),N=Math.min(Math.ceil(k),c-1),$=C+T*a[1],F=C+N*a[1],W=k-T,V=1-W;for(let _=0;_<p;_++){const X=_*x,K=Math.floor(X),P=Math.min(Math.ceil(X),u-1),B=X-K,U=1-B,Y=$+K*a[2],j=$+P*a[2],J=F+K*a[2],nt=F+P*a[2],q=V*U,it=V*B,lt=W*U,dt=W*B;for(let pt=0;pt<d;pt++){const xt=w[y++];f[Y+pt]+=xt*q,f[j+pt]+=xt*it,f[J+pt]+=xt*lt,f[nt+pt]+=xt*dt}}}}return e.makeTensorInfo([l,u,c,d],"float32",f)}const oW={kernelName:Kd,backendName:"cpu",kernelFunc:sW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(n){const{inputs:t,backend:e,attrs:s}=n,{images:o}=t,{alignCorners:i,halfPixelCenters:r,size:a}=s;rt(o,"resizeNearestNeighbor");const l=ct(o.shape),[c,u]=a,[d,h,p,f]=o.shape,m=e.data.get(o.dataId).values,g=new Float32Array(d*c*u*f),b=[i&&c>1?h-1:h,i&&u>1?p-1:p],x=[i&&c>1?c-1:c,i&&u>1?u-1:u],w=b[0]/x[0],y=b[1]/x[1];let I=0;for(let C=0;C<d;C++){const v=C*l[0];for(let k=0;k<c;k++){const T=r?w*(k+.5):w*k;let N=Math.min(h-1,i?Math.round(T):Math.floor(T));r&&(N=Math.max(0,N));const $=v+N*l[1];for(let F=0;F<u;F++){const W=r?y*(F+.5):y*F;let V=Math.min(p-1,i?Math.round(W):Math.floor(W));r&&(V=Math.max(0,V));const _=$+V*l[2];for(let X=0;X<f;X++){const K=m[_+X];g[I++]=K}}}}return e.makeTensorInfo([d,c,u,f],o.dtype,g)}const rW={kernelName:sc,backendName:"cpu",kernelFunc:iW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(n){const{inputs:t,backend:e,attrs:s}=n,{images:o,dy:i}=t,{alignCorners:r}=s;rt([i,o],"resizeNearestNeighborGrad");const a=ct(o.shape),l=ct(i.shape),[c,u,d,h]=o.shape,[,p,f]=i.shape,m=new Float32Array(c*u*d*h),g=e.data.get(i.dataId).values,b=[r&&p>1?u-1:u,r&&f>1?d-1:d],x=[r&&p>1?p-1:p,r&&f>1?f-1:f],w=b[0]/x[0],y=b[1]/x[1],I=1/w,C=1/y,v=Math.ceil(I)*2+2,k=Math.ceil(C)*2+2;for(let T=0;T<c;T++){const N=T*a[0];for(let $=0;$<u;$++){const F=N+$*a[1],W=Math.floor($*I),V=Math.floor(W-v/2);for(let _=0;_<d;_++){const X=F+_*a[2],K=Math.floor(_*C),P=Math.floor(K-k/2);for(let B=0;B<h;B++){let U=0;for(let Y=0;Y<v;Y++){const j=Y+V;if(j<0||j>=p)continue;const J=N+j*l[1],nt=j*w,q=Math.min(u-1,r?Math.round(nt):Math.floor(nt));if($===q)for(let it=0;it<k;it++){const lt=it+P;if(lt<0||lt>=f)continue;const dt=J+lt*l[2],pt=lt*y,xt=Math.min(d-1,r?Math.round(pt):Math.floor(pt));_===xt&&(U+=g[dt+B])}}m[X+B]=U}}}}return e.makeTensorInfo(o.shape,o.dtype,m)}const lW={kernelName:Zd,backendName:"cpu",kernelFunc:aW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{dims:i}=s;rt(o,"reverse");const r=o.shape.length,a=yt(i,o.shape);if(r===0)return is({inputs:{x:o},backend:e});const l=new $e(o.shape,o.dtype),c=e.bufferSync(o);for(let u=0;u<l.size;u++){const d=l.indexToLoc(u),h=d.slice();a.forEach(p=>h[p]=o.shape[p]-1-h[p]),l.set(c.get(...h),...d)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}const uW={kernelName:ic,backendName:"cpu",kernelFunc:cW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dW={kernelName:jd,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:o,fillValue:i,center:r}=t,a=e,l=Ie(s.dtype,Z(s.shape)),[c,u,d,h]=s.shape,[p,f]=Ip(r,u,d),m=255,g=Math.sin(o),b=Math.cos(o),x=a.data.get(s.dataId).values;for(let y=0;y<c;y++){const I=y*d*u*h;for(let C=0;C<u;C++){const v=C*(d*h);for(let k=0;k<d;k++){const T=k*h;for(let N=0;N<h;N++){const $=[c,C,k,N],F=$[2],W=$[1];let V=(F-p)*b-(W-f)*g,_=(F-p)*g+(W-f)*b;V=Math.round(V+p),_=Math.round(_+f);let X=i;if(typeof i!="number"&&(N===3?X=m:X=i[N]),V>=0&&V<d&&_>=0&&_<u){const P=_*(d*h),B=V*h,U=I+P+B+N;X=x[U]}const K=I+v+T+N;l[K]=X}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW=Dt(Vr,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),pW={kernelName:Vr,backendName:"cpu",kernelFunc:hW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(n){const{inputs:t,backend:e,attrs:s}=n,{indices:o,updates:i}=t,{shape:r}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=oa(i,o,r),h=!0,p=e.bufferSync(o),f=e.bufferSync(i),m=Ei(p,f,r,d,c,l,a,u,0,h);return e.makeTensorInfo(r,m.dtype,m.values)}const mW={kernelName:yg,backendName:"cpu",kernelFunc:fW};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(n,t){let e=0,s=n.length,o=0;for(;e<s;)o=Math.floor((e+s)/2),n[o]<t?e=o+1:s=o;return s}function bW(n,t){let e=0,s=n.length,o=0;for(;e<s;)o=Math.floor((e+s)/2),n[o]<=t?e=o+1:s=o;return s}function xW(n,t,e,s,o,i){const r=ie("int32",e*o);for(let a=0;a<e;++a){const l=n.slice(a*s,(a+1)*s),c=a*o;for(let u=0;u<o;++u)r[c+u]=i==="left"?gW(l,t[u+c]):bW(l,t[u+c])}return r}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:o,values:i}=t,{side:r}=s,a=e.data.get(o.dataId).values,l=e.data.get(i.dataId).values,c=xW(a,l,o.shape[0],o.shape[1],i.shape[1],r);return e.makeTensorInfo(i.shape,"int32",c)}const wW={kernelName:wg,backendName:"cpu",kernelFunc:yW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(n){const{inputs:t,backend:e}=n,{condition:s,t:o,e:i}=t;rt([s,o,i],"select");const r=s.shape.length,a=e.data.get(s.dataId).values,l=e.data.get(o.dataId).values,c=e.data.get(i.dataId).values,u=Qe(o.dtype,i.dtype),d=Re(Z(o.shape),u);let h=0;const p=r===0||r>1||o.shape.length===1?1:Z(o.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?d[h++]=l[f]:d[h++]=c[f];return e.makeTensorInfo(o.shape,u,d)}const CW={kernelName:rc,backendName:"cpu",kernelFunc:IW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW=_c,kW=Ac,SW=Dt(Ar,n=>n>=0?kW*n:vW*(Math.exp(n)-1)),TW={kernelName:Ar,backendName:"cpu",kernelFunc:SW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW=Dt(Pr,n=>n<0?-1:n>0?1:0),RW={kernelName:Pr,backendName:"cpu",kernelFunc:NW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W=Dt(Xr,n=>Math.sin(n)),GW={kernelName:Xr,backendName:"cpu",kernelFunc:$W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EW=Dt(Or,n=>Math.sinh(n)),LW={kernelName:Or,backendName:"cpu",kernelFunc:EW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gw=Math.log(11920928955078125e-23)+2,DW=Dt(Kr,n=>{const t=n>-Gw,e=n<Gw,s=Math.exp(n);let o;return e?o=s:t?o=n:o=Math.log(1+s),o}),MW={kernelName:Kr,backendName:"cpu",kernelFunc:DW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockShape:i,paddings:r}=s;rt([o],"spaceToBatchND");const a=Z(i),l=[[0,0]];l.push(...r);for(let C=1+i.length;C<o.shape.length;++C)l.push([0,0]);const c=$w.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:l,constantValue:0}}),u=ha(c.shape,i,a,!1),d=pa(u.length,i.length,!1),h=fa(c.shape,i,a,!1),m=At({inputs:{x:c},backend:e,attrs:{shape:u}}),x=Ke({inputs:{x:m},backend:e,attrs:{perm:d}}),I=At({inputs:{x},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),I}const FW={kernelName:cc,backendName:"cpu",kernelFunc:zW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WW(n){const{inputs:t,backend:e}=n,{indices:s,values:o,denseShape:i,defaultValue:r}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(r.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${r.shape}`);const a=e.data.get(s.dataId).values,l=e.data.get(o.dataId).values,c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values[0],[d,h,p,f,m]=nw(a,s.shape,s.dtype,l,o.dtype,c,u);return[e.makeTensorInfo(h,s.dtype,d),e.makeTensorInfo([h[0]],o.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const VW={kernelName:Ig,backendName:"cpu",kernelFunc:WW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:o,newShape:i}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const r=Array.from(e.data.get(o.dataId).values),a=e.data.get(s.dataId).values,l=Array.from(e.data.get(i.dataId).values),[c,u,d]=sw(a,s.shape,s.dtype,r,l);return[e.makeTensorInfo(u,s.dtype,c),e.makeTensorInfo([d.length],i.dtype,new Int32Array(d))]}const AW={kernelName:Cg,backendName:"cpu",kernelFunc:_W};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(n){const{inputs:t,backend:e}=n,{data:s,indices:o,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(o.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const r=e.data.get(s.dataId).values,a=e.data.get(o.dataId).values,l=e.data.get(i.dataId).values,[c,u]=$f(r,s.shape,s.dtype,a,l,!0);return e.makeTensorInfo(u,s.dtype,c)}const OW={kernelName:vg,backendName:"cpu",kernelFunc:XW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(n){const{inputs:t,backend:e}=n,{data:s,indices:o,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(o.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const r=e.data.get(s.dataId).values,a=e.data.get(o.dataId).values,l=e.data.get(i.dataId).values,[c,u]=$f(r,s.shape,s.dtype,a,l);return e.makeTensorInfo(u,s.dtype,c)}const ZW={kernelName:kg,backendName:"cpu",kernelFunc:PW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:o,sparseValues:i,defaultValue:r}=t,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:h}=oa(i,o,a),p=!1,f=e.bufferSync(o);let m;switch(i.dtype){case"bool":{const g=e.bufferSync(i),b=Boolean(e.data.get(r.dataId).values[0]);m=Ei(f,g,a,h,u,c,l,d,b,p);break}case"float32":{const g=e.bufferSync(i),b=e.data.get(r.dataId).values[0];m=Ei(f,g,a,h,u,c,l,d,b,p);break}case"int32":{const g=e.bufferSync(i),b=e.data.get(r.dataId).values[0];m=Ei(f,g,a,h,u,c,l,d,b,p);break}case"string":{const g=e.bufferSync(i),b=Ds(e.data.get(r.dataId).values[0]);m=Ei(f,g,a,h,u,c,l,d,b,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return e.makeTensorInfo(a,m.dtype,m.values)}const BW={kernelName:Sg,backendName:"cpu",kernelFunc:KW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{numOrSizeSplits:i,axis:r}=s,a=yt(r,o.shape)[0],l=Wp(o,i,a),c=new Array(o.shape.length).fill(0),u=o.shape.slice();return l.map(d=>{const h=[...u];h[a]=d;const p=Xo({inputs:{x:o},backend:e,attrs:{begin:c,size:h}});return c[a]+=d,p})}const UW={kernelName:uc,backendName:"cpu",kernelFunc:HW};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YW={kernelName:Bd,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;rt(e,"square");const o=s.data.get(e.dataId).values,i=new Float32Array(o.length);for(let a=0;a<o.length;++a){const l=o[a];i[a]=l*l}return{dataId:s.write(i,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QW=Dt(jr,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),JW={kernelName:jr,backendName:"cpu",kernelFunc:QW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{begin:i,end:r,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s;rt(o,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:w,strides:y}=kh(o.shape,i,r,a,l,c,u,d,h);let I;if(m)I=At({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){S(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const C=Ih(x,w,y),v=Xo({inputs:{x:o},backend:e,attrs:{begin:x,size:C}});I=At({inputs:{x:v},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(v)}else{const C=e.bufferSync(o),v=iw(p,C,y,x);I=e.makeTensorInfo(f,v.dtype,v.values)}return I}const qW={kernelName:Hd,backendName:"cpu",kernelFunc:jW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(n){const{inputs:t,backend:e,attrs:s}=n,{separator:o,nGramWidths:i,leftPad:r,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,h=e.data.get(u.dataId).values,p=e.data.get(d.dataId).values,[f,m]=rw(h,p,o,i,r,a,l,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(d.shape,"int32",m)]}const eV={kernelName:Tg,backendName:"cpu",kernelFunc:tV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:o}=s,{input:i,delimiter:r}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(r.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${r.shape}`);const a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values[0],[c,u,d]=aw(a,l,o),h=u.length;return[e.makeTensorInfo([h,2],"int32",c),e.makeTensorInfo([h],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(d))]}const sV={kernelName:Ng,backendName:"cpu",kernelFunc:nV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:o}=s,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const r=e.data.get(i.dataId).values,a=lw(r,o);return e.makeTensorInfo(i.shape,"int32",a)}const iV={kernelName:Rg,backendName:"cpu",kernelFunc:oV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rV=Dt(Yr,n=>Math.tan(n)),aV={kernelName:Yr,backendName:"cpu",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lV=Dt(Qr,n=>Math.tanh(n)),cV={kernelName:Qr,backendName:"cpu",kernelFunc:lV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{reps:i}=s;rt(o,"tile");const r=uw(e.bufferSync(o),i);return e.makeTensorInfo(r.shape,r.dtype,r.values)}const dV={kernelName:Jr,backendName:"cpu",kernelFunc:uV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{k:i,sorted:r}=s;rt(o,"topk");const a=e.data.get(o.dataId).values,[l,c]=hw(a,o.shape,o.dtype,i,r);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const pV={kernelName:Ud,backendName:"cpu",kernelFunc:hV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n){const{inputs:t,attrs:e,backend:s}=n,{image:o,transforms:i}=t,{interpolation:r,fillMode:a,fillValue:l,outputShape:c}=e,[u,d,h,p]=o.shape,[f,m]=c??[d,h],g=[u,f,m,p],b=ct(o.shape),x=b[0],w=b[1],y=b[2],I=ct(g),C=I[0],v=I[1],k=I[2],T=Ie(o.dtype,Z(g));T.fill(l);const N=s.data.get(o.dataId).values,$=s.data.get(i.dataId).values;for(let W=0;W<u;++W){const V=i.shape[0]===1?$:$.subarray(W*8,W*8+8);for(let _=0;_<f;++_)for(let X=0;X<m;++X)for(let K=0;K<p;++K){let P;const B=V[6]*X+V[7]*_+1;if(B===0)continue;const U=(V[0]*X+V[1]*_+V[2])/B,Y=(V[3]*X+V[4]*_+V[5])/B,j=Ew(U,h,a),J=Ew(Y,d,a);switch(r){case"nearest":P=wV(N,d,h,x,w,y,W,J,j,K,l);break;case"bilinear":P=IV(N,d,h,x,w,y,W,J,j,K,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${r}`)}const nt=W*C+_*v+X*k+K;T[nt]=P}return s.makeTensorInfo(g,o.dtype,T)}return{dataId:s.write(T,g,o.dtype),shape:o.shape,dtype:o.dtype}}const mV={kernelName:Yd,backendName:"cpu",kernelFunc:fV};function Ew(n,t,e){switch(e){case"reflect":return gV(n,t);case"wrap":return bV(n,t);case"nearest":return yV(n,t);case"constant":default:return xV(n)}}function gV(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return lo(0,e,t-1)}function bV(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return lo(0,e,t-1)}function xV(n,t){return n}function yV(n,t){return lo(0,n,t-1)}function Da(n,t,e,s,o,i,r,a,l,c,u){const d=r*s+a*o+l*i+c;return 0<=a&&a<t&&0<=l&&l<e?n[d]:u}function wV(n,t,e,s,o,i,r,a,l,c,u){const d=Math.round(a),h=Math.round(l);return Da(n,t,e,s,o,i,r,d,h,c,u)}function IV(n,t,e,s,o,i,r,a,l,c,u){const d=Math.floor(a),h=Math.floor(l),p=d+1,f=h+1,m=(f-l)*Da(n,t,e,s,o,i,r,d,h,c,u)+(l-h)*Da(n,t,e,s,o,i,r,d,f,c,u),g=(f-l)*Da(n,t,e,s,o,i,r,p,h,c,u)+(l-h)*Da(n,t,e,s,o,i,r,p,f,c,u);return(p-a)*m+(a-d)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n){const{inputs:t,attrs:e,backend:s}=n,{axis:o}=e,{x:i}=t;rt(i,"unique");const r=s.data.get(i.dataId).values,{outputValues:a,outputShape:l,indices:c}=pw(r,o,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const vV={kernelName:Qd,backendName:"cpu",kernelFunc:CV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n){const{inputs:t,backend:e,attrs:s}=n,{value:o}=t;let{axis:i}=s;i<0&&(i+=o.shape.length);const r=o.shape.length,a=o.shape[i],l=new Array(r-1);let c=0;for(let p=0;p<r;p++)p!==i&&(l[c++]=o.shape[p]);const u=new Array(r).fill(0),d=o.shape.slice();d[i]=1;const h=new Array(a);for(let p=0;p<h.length;p++){u[i]=p;const f=Xo({inputs:{x:o},backend:e,attrs:{begin:u,size:d}});h[p]=At({inputs:{x:f},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(f)}return h}const SV={kernelName:hc,backendName:"cpu",kernelFunc:kV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,segmentIds:i}=t,{numSegments:r}=s;rt(o,"unsortedSegmentSum");const a=o.shape.length,l=i.shape.length,c=[],u=[],d=a-l;let h=i;for(let f=0;f<d;++f){const m=mu({inputs:{input:h},backend:e,attrs:{dim:f+1}});h=m,u.push(m)}for(let f=0;f<r;++f){const m=Es(f,"int32"),g=e.makeTensorInfo([],"int32",m),b=Ty({inputs:{a:g,b:h},backend:e}),x=Us({inputs:{x:b},backend:e,attrs:{dtype:"float32"}}),w=hu({inputs:{a:x,b:o},backend:e}),y=La({inputs:{x:w},backend:e,attrs:{axis:0,keepDims:!1}});c.push(y),u.push(g),u.push(b),u.push(x),u.push(w),u.push(y)}const p=Rw({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const NV={kernelName:pc,backendName:"cpu",kernelFunc:TV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RV=[SD,d3,ND,$D,b3,ED,DD,zD,WD,_D,XD,PD,KD,UD,QD,qD,eM,sM,iM,vD,aM,cM,dM,pM,m3,y3,mM,h3,gM,xM,yM,IM,vM,SM,NM,$M,EM,DM,zM,WM,_M,XM,PM,ZM,BM,UM,QM,JM,jM,qM,nz,gD,oz,w3,hz,I3,pz,v3,yz,wz,Cz,S3,Sz,Nz,$z,Ez,Dz,N3,$3,p3,zz,bM,Wz,_z,Xz,bD,E3,D3,Pz,z3,Kz,Uz,Qz,qz,eF,sF,oF,W3,rF,lF,uF,hF,fF,gF,xF,_3,wF,vF,TF,X3,P3,$F,LF,zF,K3,WF,_F,AF,$w,ZF,yD,U3,BF,UF,QF,jF,f3,Df,tW,wD,ID,CD,nW,oW,rW,lW,uW,dW,pW,nD,mW,wW,CW,TW,oD,RW,GW,LW,iD,kF,MW,FW,VW,AW,OW,ZW,BW,UW,lD,YW,uD,JW,qW,eV,sV,iV,fD,tz,aV,cV,dV,pV,mV,B3,vV,SV,NV,VF];for(const n of RV)on(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oo={},bu={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function $V(n,t){Oo[n]=t}function Kn(n,t){if(!(n in Oo)||t!=null){const s=EV(n,t);if(s!==null)Oo[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=Oo[n];return e==null||e.isContextLost()?(delete Oo[n],Kn(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Oo[n])}function GV(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function EV(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??GV(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Oo[n]},!1),A().getBool("SOFTWARE_WEBGL_ENABLED")&&(bu.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",bu)||e.getContext("experimental-webgl",bu):e.getContext("webgl2",bu)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ma;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Ma||(Ma={}));var fn;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(fn||(fn={}));var ke;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(ke||(ke={}));function za(n,t){return[t,n]}function LV(n,t){return n*t}function xu(n){const t=Z(n),e=Math.ceil(t/4);return od(e)}function Mi(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function DV(n,t){const[e,s]=Mi(n,t);return e*s*4}function Ff(n,t){const e=n;let s,o,i,r,a,l,c,u,d,h;return A().getNumber("WEBGL_VERSION")===2?(s=e.R32F,o=e.R16F,i=e.RGBA16F,r=e.RGBA32F,a=e.RED,c=4,u=1,d=e.HALF_FLOAT,h=e.FLOAT,l=e.RGBA8):(s=n.RGBA,o=n.RGBA,i=n.RGBA,r=e.RGBA,a=n.RGBA,c=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,h=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:r,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function st(n,t){const e=t();return A().getBool("DEBUG")&&MV(n),e}function MV(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+VV(n,t))}const zV=596e-10,FV=65504;function WV(n){return!!(A().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||zV<Math.abs(n)&&Math.abs(n)<FV)}function VV(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function yu(n,t){return vs(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function _V(n,t){const e=vs(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(st(n,()=>n.shaderSource(e,t)),st(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function AV(n,t){const e=vs(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(st(n,()=>n.shaderSource(e,t)),st(n,()=>n.compileShader(e)),A().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw Lw(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const XV=/ERROR: [0-9]+:([0-9]+):/g;function Lw(n,t){const e=XV.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],o=n.split(`
`),i=o.length.toString().length+2,r=o.map((d,h)=>ii((h+1).toString(),i)+d);let a=0;for(let d=0;d<r.length;d++)a=Math.max(r[d].length,a);const l=r.slice(0,s-1),c=r.slice(s-1,s),u=r.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${ii(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function OV(n){return vs(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function PV(n,t){if(st(n,()=>n.linkProgram(t)),!A().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Wf(n,t){if(st(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function ZV(n,t){const e=vs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return st(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),st(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function KV(n,t){const e=vs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return st(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),st(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function BV(n){return vs(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function HV(n,t){const e=A().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,o=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+o+".")}}function UV(n){return vs(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Dw(n,t,e,s,o,i,r){const a=n.getAttribLocation(t,e);return a===-1?!1:(st(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),st(n,()=>n.vertexAttribPointer(a,o,n.FLOAT,!1,i,r)),st(n,()=>n.enableVertexAttribArray(a)),!0)}function YV(n,t,e){t_(n,e),st(n,()=>n.activeTexture(n.TEXTURE0+e)),st(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function QV(n,t,e){return vs(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function JV(n,t,e){return n.getUniformLocation(t,e)}function jV(n,t,e,s){st(n,()=>YV(n,t,s)),st(n,()=>n.uniform1i(e,s))}function Vf(n,t,e){st(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),st(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function Mw(n,t){st(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),st(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function wu(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+qV(n,t))}function qV(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function vs(n,t,e){const s=st(n,()=>t());if(s==null)throw new Error(e);return s}function t_(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const o=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${o}.`)}}function zi(n,t=2){return Z(n.slice(0,n.length-t))}function Fi(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Iu(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[zi(n),...Fi(n)]),t}function e_(n,t=!1){let e=A().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=A().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&A().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?ed(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=$s(n).newShape);let o=Z(n),i=null;n.length<=1&&o<=e?i=[1,o]:n.length===2&&n[0]<=e&&n[1]<=e?i=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?i=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?i=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?i=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(i=[n[0],n[1]*n[2]*n[3]]);const r=i!=null&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(i==null||r)if(t){const a=zi(n);let l=2,c=2;n.length&&([l,c]=Fi(n)),o=a*(l/2)*(c/2),i=od(o).map(u=>u*2)}else i=od(o);return i}function Cu(n){return n%2===0}function vu(n,t){if(n=n.slice(-2),t=t.slice(-2),$t(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n.slice(-1)[0],s=t.slice(-1)[0];if(e===s||Cu(e)&&Cu(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&Cu(n[0])&&Cu(t[0])}let _f,Af;function n_(n){if(_f==null){const t=Kn(n);_f=t.getParameter(t.MAX_TEXTURE_SIZE)}return _f}function s_(n){if(Af==null){const t=Kn(n);Af=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Af)}function o_(n){if(n===0)return 0;let t;const e=Kn(n);return $n(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:$n(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function $n(n,t){return n.getExtension(t)!=null}function zw(n){try{if(Kn(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function i_(n){if(n===0)return!1;const t=Kn(n);if(n===1){if(!$n(t,"OES_texture_float"))return!1}else if(!$n(t,"EXT_color_buffer_float"))return!1;return Xf(t)}function r_(n){if(n===0)return!1;const t=Kn(n);if(n===1){if(!$n(t,"OES_texture_float")||!$n(t,"WEBGL_color_buffer_float"))return!1}else{if($n(t,"EXT_color_buffer_float"))return Xf(t);const s="EXT_color_buffer_half_float";if($n(t,s)){const o=t.getExtension(s);return a_(t,o)}return!1}return Xf(t)}function Xf(n){const t=Ff(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e);const s=1,o=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,s,o,0,t.textureFormatFloat,t.textureTypeFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const r=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(i),r}function a_(n,t){const e=Ff(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const o=1,i=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,o,i,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(r),a}function l_(n){return n!==2?!1:Kn(n).fenceSync!=null}function Fa(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&S(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const at=A();at.registerFlag("HAS_WEBGL",()=>at.getNumber("WEBGL_VERSION")>0),at.registerFlag("WEBGL_VERSION",()=>zw(2)?2:zw(1)?1:0),at.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),at.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>at.get("WEBGL_VERSION")===2),at.registerFlag("WEBGL_CPU_FORWARD",()=>!0),at.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),at.registerFlag("WEBGL_PACK",()=>at.getBool("HAS_WEBGL")),at.registerFlag("WEBGL_PACK_NORMALIZATION",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_PACK_CLIP",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_PACK_REDUCE",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_LAZILY_UNPACK",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_CONV_IM2COL",()=>at.getBool("WEBGL_PACK")),at.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>n_(at.getNumber("WEBGL_VERSION"))),at.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>s_(at.getNumber("WEBGL_VERSION"))),at.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=at.getNumber("WEBGL_VERSION");return n===0?0:o_(n)}),at.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>at.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!jg()),at.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>i_(at.getNumber("WEBGL_VERSION"))),at.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>at.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:at.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),at.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>r_(at.getNumber("WEBGL_VERSION"))),at.registerFlag("WEBGL_FENCE_API_ENABLED",()=>l_(at.getNumber("WEBGL_VERSION"))),at.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>at.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),at.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),at.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>jg()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),at.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),at.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),at.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),at.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),at.registerFlag("WEBGL_EXP_CONV",()=>!1),at.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>at.getBool("IS_TEST")),at.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),at.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),at.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),at.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(){let n,t,e,s,o,i,r,a,l,c;return A().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",o="texture",i="outputColor",r="out vec4 outputColor;",a=A().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",o="texture2D",i="gl_FragColor",r="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:o,output:i,defineOutput:r,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Po(n,t,e="index"){const s=ct(t);return s.map((o,i)=>{const r=`int ${n[i]} = ${e} / ${o}`,a=i===s.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${o}`:`index -= ${n[i]} * ${o}`;return`${r}; ${a};`}).join("")}function ku(n,t,e="index"){const s=ct(t);return s.map((o,i)=>{const r=`int ${n[i]} = ${e} / outShapeStrides[${i}]`,a=i===s.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * outShapeStrides[${i}]`:`index -= ${n[i]} * outShapeStrides[${i}]`;return`${r}; ${a};`}).join("")}function c_(n,t){const e=n.length,s=n.map(i=>`${t}[${i}]`),o=new Array(e-1);o[e-2]=s[e-1];for(let i=e-3;i>=0;--i)o[i]=`(${o[i+1]} * ${s[i+1]})`;return o}function u_(n,t,e="index"){const s=n.map((i,r)=>r),o=c_(s,t);return o.map((i,r)=>{const a=`int ${n[r]} = ${e} / ${o[r]}`,l=r===o.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * ${o[r]}`:`index -= ${n[r]} * ${o[r]}`;return`${a}; ${l};`}).join("")}function Of(n){const t=ct(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Pf(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Fw=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Ww}=g$;function d_(n,t,e){const s=[];if(n.forEach(p=>{const f=Z(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),e.enableShapeUniforms){const{uniformShape:m}=Zf(e.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const o=s.join(`
`),i=n.map(p=>h_(p,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),r=t.texShape,a=Fe(),l=m_(a);let c,u,d=x_(a);return t.isPacked?(c=p_(t.logicalShape,r,e.enableShapeUniforms),u=b_(a)):(c=f_(t.logicalShape,r,e.enableShapeUniforms),u=g_(a)),e.packedInputs&&(d+=C_),[d,l,u,o,c,i,e.userCode].join(`
`)}function Wi(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return M_(n,t);case 1:return F_(n,t);case 2:return V_(n,t);case 3:return A_(n,t);case 4:return O_(n,t);case 5:return P_(n);case 6:return Z_(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function Vw(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return D_(n);case 1:return z_(n,t);case 2:return W_(n,t);case 3:return __(n,t);default:return X_(n,t)}}function h_(n,t,e=!1,s){let o="";e?o+=Vw(n,s):o+=Wi(n,s);const i=n.shapeInfo.logicalShape,r=t.logicalShape;return i.length<=r.length&&(e?o+=K_(n,t):o+=B_(n,t)),o}function p_(n,t,e){switch(n.length){case 0:return _w();case 1:return v_(n,t,e);case 2:return E_(n,t,e);case 3:return S_(n,t,e);default:return N_(n,t,e)}}function f_(n,t,e){switch(n.length){case 0:return _w();case 1:return k_(n,t,e);case 2:return L_(n,t,e);case 3:return T_(n,t,e);case 4:return R_(n,t,e);case 5:return $_(n,t);case 6:return G_(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function m_(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function g_(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function b_(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function x_(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${y_}
    ${w_}
    ${I_}
  `}const y_=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,w_=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,I_=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,C_=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function _w(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function v_(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function k_(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function S_(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(n[2]/2),i=o*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function T_(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ku(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Po(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function N_(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(n[n.length-1]/2),i=o*Math.ceil(n[n.length-2]/2);let r=i,a="",l="b, r, c";for(let c=2;c<n.length-1;c++)r*=n[n.length-c-1],a=`
      int b${c} = index / ${r};
      index -= b${c} * ${r};
    `+a,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${n.length}(${l});
    }
  `}function R_(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ku(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Po(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function $_(n,t){const e=Po(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function G_(n,t){const e=Po(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function E_(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if($t(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const o=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function L_(n,t,e){return $t(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Zo(n){return`offset${n}`}function D_(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Fe();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function M_(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[o,i]=n.shapeInfo.texShape;if(o===1&&i===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const r=Zo(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${r});
      return sampleTexture(${e}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${r});
      return sampleTexture(${e}, uv);
    }
  `}function z_(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),o=n.shapeInfo.texShape,i=Fe();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${e}, uv);
    }
  `;const r=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${i.texture2D}(${e}, uv);
    }
  `}function F_(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Vi(n)}
      }
    `;const o=n.shapeInfo.texShape,i=o[0],r=o[1];if(r===1&&i===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=Zo(e);return r===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${e}, uv);
      }
    `:i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${r}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${i}, ${r}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function W_(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,r=i[0],a=i[1],l=Fe();if(i!=null&&$t(e,i))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${r}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function V_(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape;if(i!=null&&$t(e,i)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const h=i[0],p=i[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:r,keptDims:a}=$s(e),l=r;if(l.length<e.length){const h=_i(n,l),p=["row","col"];return`
      ${Wi(h,t)}
      float ${o}(int row, int col) {
        return ${o}(${Ai(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Vi(n)}
      }
    `;const c=i[0],u=i[1],d=Zo(s);return u===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function __(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,r=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(e[0]===1){const h=e.slice(1),p=[1,2],f=_i(n,h),m=["b","row","col"];return`
        ${Vw(f,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Ai(m,p)});
        }
      `}const a=Fe();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=r[0],c=r[1],u=Math.ceil(e[2]/2),d=u*Math.ceil(e[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${d}, ${u}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function A_(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e[1]*e[2],r=e[2],{newShape:a,keptDims:l}=$s(e),c=a;if(c.length<e.length){const m=_i(n,c),g=["row","col","depth"];return`
        ${Wi(m,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Ai(g,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${r}, 1)));
        ${Vi(n)}
      }
    `;const u=n.shapeInfo.texShape,d=u[0],h=u[1],p=n.shapeInfo.flatOffset;if(h===i&&p==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${r}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===r&&p==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Zo(s);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${r} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function X_(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),o=Fe();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${e}, uv);
    }
  `;const i=n.shapeInfo.logicalShape,r=i.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],d=Math.ceil(i[r-1]/2);let h=d*Math.ceil(i[r-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<r-1;m++)p=`int b${m}, `+p,h*=i[r-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${o.texture2D}(${e}, uv);
    }
  `}function O_(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e[3],r=e[2]*i,a=e[1]*r,{newShape:l,keptDims:c}=$s(e);if(l.length<e.length){const x=_i(n,l),w=["row","col","depth","depth2"];return`
      ${Wi(x,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Ai(w,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${r}, ${i}, 1)));
        ${Vi(n)}
      }
    `;const u=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&u==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===i&&u==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;const b=Zo(s);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${r} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function P_(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[4],i=t[3]*o,r=t[2]*i,a=t[1]*r,{newShape:l,keptDims:c}=$s(t);if(l.length<t.length){const m=_i(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${Wi(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Ai(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${r}, ${i}, ${o})) +
          depth3;
        ${Vi(n)}
      }
    `;const u=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1];if(p===a&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${r}, ${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===o&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;const f=Zo(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${r} + depth * ${i} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Z_(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:o,keptDims:i}=$s(t);if(o.length<t.length){const g=_i(n,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${Wi(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Ai(b,i)});
      }
    `}const r=t[5],a=t[4]*r,l=t[3]*a,c=t[2]*l,u=t[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${r}, 1)));
        ${Vi(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1];if(f===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${r})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===r&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;const m=Zo(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${r} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Vi(n){const t=n.name,e=Z(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function K_(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),o="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,r=t.logicalShape.length,a=Ww(n.shapeInfo.logicalShape,t.logicalShape),l=Xt(r),c=r-i;let u;const d=["x","y","z","w","u","v"];i===0?u="":r<2&&a.length>=1?u="coords = 0;":u=a.map(x=>`coords.${d[x+c]} = 0;`).join(`
`);let h="";r<2&&i>0?h="coords":h=n.shapeInfo.logicalShape.map((x,w)=>`coords.${d[w+c]}`).join(", ");let p="return outputValue;";const m=Z(n.shapeInfo.logicalShape)===1,b=Z(t.logicalShape)===1;if(i===1&&!m&&!b)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)r===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const x=i-2,w=i-1;a.indexOf(x)>-1&&a.indexOf(w)>-1?p="return vec4(outputValue.x);":a.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function B_(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),o="get"+s+"AtOutCoords",i=t.texShape,r=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&$t(r,i))return`
      float ${o}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=Xt(l),u=Ww(n.shapeInfo.logicalShape,t.logicalShape),d=l-a;let h;const p=["x","y","z","w","u","v"];a===0?h="":l<2&&u.length>=1?h="coords = 0;":h=u.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${o}() {
      ${c} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function Xt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Zf(n,t,e){const{newShape:s,keptDims:o}=$s(t),i=t.length,r=n&&i===3&&t[0]===1,a=r?t.slice(1):s,l=!n&&i>1&&!$t(t,e)&&s.length<i||r;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:o}}function _i(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function Ai(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n,t,e,s){const o=e.map((u,d)=>{const h={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(h.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[d],shapeInfo:h}}),i=o.map(u=>u.shapeInfo),r={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=d_(o,r,t),l=AV(n.gl,a),c=n.createProgram(l);return A().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:i,outShapeInfo:r,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:i,outShapeInfo:r},Aw(n,t,c))}function Aw(n,t,e){const s={},o={},i={},r=[];let a,l,c,u=null,d=null;d=n.getUniformLocation(e,"NAN",!1),A().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(e,"INFINITY",!1));const h=!1;for(let p=0;p<t.variableNames.length;p++){const f=t.variableNames[p];s[f]=n.getUniformLocation(e,f,h),s[`offset${f}`]=n.getUniformLocation(e,`offset${f}`,h),t.enableShapeUniforms&&(o[`${f}Shape`]=n.getUniformLocation(e,`${f}Shape`,h),i[`${f}TexShape`]=n.getUniformLocation(e,`${f}TexShape`,h))}return t.enableShapeUniforms&&(a=n.getUniformLocation(e,"outShape",h),c=n.getUniformLocation(e,"outShapeStrides",h),l=n.getUniformLocation(e,"outTexShape",h)),t.customUniforms&&t.customUniforms.forEach((p,f)=>{r[f]=n.getUniformLocation(e,p.name,h)}),{uniformLocations:s,customUniformLocations:r,infLoc:u,nanLoc:d,inShapesLocations:o,inTexShapesLocations:i,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:l}}function Xw(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const o=e.logicalShape,i=t[s],r=i.shape;if(!$t(o,r))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${r} must match`);if(e.isUniform&&i.isUniform)return;const a=e.texShape,l=i.isUniform?null:i.texData.texShape;if(!$t(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function U_(n,t,e,s,o){t.program.enableShapeUniforms||(Xw(t.inShapeInfos,e),Xw([t.outShapeInfo],[s]));const i=s.texData.texture,r=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(i.texture,r[0],r[1]):n.setOutputMatrixTexture(i.texture,r[0],r[1]),n.setProgram(t.webGLProgram),A().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN),e.forEach((l,c)=>{const u=t.program.variableNames[c],d=t.uniformLocations[u],h=t.uniformLocations[`offset${u}`],p=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(p){const{uniformShape:m}=Zf(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:n.gl.uniform1iv(p,new Int32Array(m));break;case 2:n.gl.uniform2iv(p,new Int32Array(m));break;case 3:n.gl.uniform3iv(p,new Int32Array(m));break;case 4:n.gl.uniform4iv(p,new Int32Array(m));break}}if(f&&n.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),d!=null){if(l.isUniform){if(Z(l.shape)<2)n.gl.uniform1f(d,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),n.gl.uniform1fv(d,m)}return}l.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,l.texData.slice.flatOffset),n.setInputMatrixTexture(l.texData.texture.texture,d,c)}});const a=t.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const l=ct(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&o&&t.program.customUniforms.forEach((l,c)=>{const u=t.customUniformLocations[c],d=o[c];if(l.type==="float")n.gl.uniform1fv(u,d);else if(l.type==="vec2")n.gl.uniform2fv(u,d);else if(l.type==="vec3")n.gl.uniform3fv(u,d);else if(l.type==="vec4")n.gl.uniform4fv(u,d);else if(l.type==="int")n.gl.uniform1iv(u,d);else if(l.type==="ivec2")n.gl.uniform2iv(u,d);else if(l.type==="ivec3")n.gl.uniform3iv(u,d);else if(l.type==="ivec4")n.gl.uniform4iv(u,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}),n.executeProgram()}function Y_(n,t,e){let s="";t.concat(e).forEach(r=>{const a=r.texData!=null&&r.texData.slice!=null&&r.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!r.isUniform){const l=r.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:d}=Zf(n.packedInputs,r.shape,l);let h="",p="",f="";if(u.length===1&&n.packedInputs){const I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];h=`${I[0]>1}_${I[1]>1}`}else if(u.length===2&&!n.packedInputs)p=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const I=ct(u);f=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}const m=r.shape.length,g=u.length===2&&$t(r.shape,l),b=Z(r.shape)===1,x=mi(r.shape,e.shape),w=!n.packedInputs&&m===e.shape.length&&$t(l,e.texData.texShape),y=n.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${w}_${c?d:""}_${u.length}_${b}_${x}_${g}_${h}_${p}_${f}_${y}_${a}`}else{const l=r.isUniform?"uniform":r.texData.texShape;s+=`${r.shape}_${l}_${a}`}});const o=n.userCode;let i=n.constructor.name;return i+="_"+s+"_"+o+`${A().getNumber("WEBGL_VERSION")}`,i}function We(n){return A().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q_{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ma.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Fe();this.outputShape=t,this.enableShapeUniforms=We(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ku(["r","c","d"],t):Po(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J_{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ma.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Fe();this.outputShape=t,this.enableShapeUniforms=We(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ku(["r","c","d"],t):Po(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j_{constructor(t){this.variableNames=["A"],this.outTexUsage=fn.DOWNLOAD;const e=Fe();this.outputShape=t,this.userCode=`
      ${Fw}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q_{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=fn.DOWNLOAD;const e=Fe();this.outputShape=t,this.userCode=`
      ${Fw}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tA={R:0,G:1,B:2,A:3};class Ow{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const o=Fe();this.outputShape=t,this.enableShapeUniforms=We(this.outputShape.length);let i="result";e&&(i="floor(result * 255. + 0.5)");let r="";for(let a=0;a<s.length;a++){const l=s[a];r+=`
          if(offset == ${a}) {
            result = values[${tA[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Pf():Of(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${r}
        }
        ${o.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eA{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Fe();this.outputShape=t,this.enableShapeUniforms=We(this.outputShape.length);let o="",i="result";e&&(i="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){const l=r*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${r} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${r};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Pf():Of(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${s.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n){const t=Fe(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return _V(n,e)}function sA(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return ZV(n,t)}function oA(n){const t=new Uint16Array([0,1,2,2,1,3]);return KV(n,t)}function Wa(n,t,e,s,o,i){HV(t,e);const r=BV(n),a=n.TEXTURE_2D;return st(n,()=>n.bindTexture(a,r)),st(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),st(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),st(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),st(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),A().getNumber("WEBGL_VERSION")===1?st(n,()=>n.texImage2D(a,0,s,t,e,0,o,i,null)):st(n,()=>n.texStorage2D(a,1,s,t,e)),st(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:r,texShape:[e,t]}}function Pw(n){return n.internalFormatFloat}function iA(n,t,e,s){const[o,i]=za(t,e);return Wa(n,o,i,Pw(s),s.textureFormatFloat,n.FLOAT)}function Zw(n){return n.internalFormatHalfFloat}function rA(n,t,e,s){const[o,i]=za(t,e);return Wa(n,o,i,Zw(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Kw(n){return n.downloadTextureFormat}function aA(n,t,e,s){const[o,i]=za(t,e);return Wa(n,o,i,Kw(s),n.RGBA,n.UNSIGNED_BYTE)}function Bw(n){return n.internalFormatPackedFloat}function lA(n,t,e,s){const[o,i]=Mi(t,e);return Wa(n,o,i,Bw(s),n.RGBA,n.FLOAT)}function Hw(n){return n.internalFormatPackedHalfFloat}function cA(n,t,e,s){const[o,i]=Mi(t,e);return Wa(n,o,i,Hw(s),n.RGBA,s.textureTypeHalfFloat)}function uA(n,t,e){return st(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Dw(n,t,"clipSpacePos",e,3,20,0)&&Dw(n,t,"uv",e,2,20,12)}function dA(n,t,e,s,o,i){st(n,()=>n.bindTexture(n.TEXTURE_2D,t));let r,a,l;o instanceof Uint8Array?(r=new Uint8Array(e*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(r=new Float32Array(e*s*4),a=n.FLOAT,l=i.internalFormatPackedFloat),r.set(o),A().getNumber("WEBGL_VERSION")===2?st(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,a,r)):st(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,e,s,0,n.RGBA,a,r)),st(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function hA(n,t,e){st(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?A().getNumber("WEBGL_VERSION")===2?st(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):st(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):A().getNumber("WEBGL_VERSION")===2?st(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):st(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),st(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function pA(n,t,e,s){const o=n.createBuffer();st(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,o));const a=4*4*t*e;return st(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),st(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),st(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),o}function fA(n,t,e){const s=n,o=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,o),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),o}function mA(n,t,e,s){const[o,i]=za(t,e),r=4,a=new Uint8Array(LV(t*e,r));return st(n,()=>n.readPixels(0,0,o,i,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function gA(n,t,e,s,o,i,r,a){const l=n,c=new Float32Array(DV(i,r));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function bA(n,t,e){const s=new Float32Array(t*e*4);return st(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kf{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=A().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,$V(e,t)):this.gl=Kn(e),t=this.gl,A().getNumber("WEBGL_VERSION")===2){const i=t;this.createVertexArray=()=>st(i,()=>i.createVertexArray()),this.bindVertexArray=r=>st(i,()=>i.bindVertexArray(r)),this.deleteVertexArray=r=>st(i,()=>i.deleteVertexArray(r)),this.getVertexArray=()=>st(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(t!=null){const i=t.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>st(t,()=>i.createVertexArrayOES()),this.bindVertexArray=r=>st(t,()=>i.bindVertexArrayOES(r)),this.deleteVertexArray=r=>st(t,()=>i.deleteVertexArrayOES(r)),this.getVertexArray=()=>st(t,()=>t.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),A().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",r="OES_texture_half_float";if(this.textureFloatExtension=yu(this.gl,i),$n(this.gl,r))this.textureHalfFloatExtension=yu(this.gl,r);else if(A().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),$n(this.gl,o))this.colorBufferHalfFloatExtension=yu(this.gl,o);else if(A().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",$n(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if($n(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=sA(this.gl),this.indexBuffer=oA(this.gl),this.framebuffer=UV(this.gl),this.textureConfig=Ff(this.gl,this.textureHalfFloatExtension)}get debug(){return A().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;st(t,()=>t.finish()),st(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),st(t,()=>t.deleteFramebuffer(this.framebuffer)),st(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),st(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),st(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),iA(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),rA(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),aA(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),hA(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,o){this.throwIfDisposed(),dA(this.gl,t,e,s,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),cA(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),lA(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Mw(this.gl,this.framebuffer),this.outputTexture=null),st(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>mA(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,o,i,r){return gA(this.gl,t,e,s,o,i,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return fA(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const o=pA(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(A().getBool("WEBGL_FENCE_API_ENABLED")){const o=t,i=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const r=o.clientWaitSync(i,0,0);return r===o.ALREADY_SIGNALED||r===o.CONDITION_SATISFIED},e=i}else A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>bA(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=nA(e));const s=OV(e);st(e,()=>e.attachShader(s,this.vertexShader)),st(e,()=>e.attachShader(s,t)),PV(e,s);let o;return o=Object.assign(s,{vao:this.createVertexArray()}),this.bindVertexArray(o.vao),st(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(uA(e,o,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Wf(e,o),this.setProgram(o),o}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(st(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&Wf(this.gl,this.program)),st(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?QV(this.gl,t,e):JV(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),st(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),jV(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[o,i]=Mi(e,s);this.setOutputMatrixTextureDriver(t,o,i)}setOutputMatrixWriteRegion(t,e,s,o){this.setOutputMatrixWriteRegionDriver(s,t,o,e)}setOutputPackedMatrixWriteRegion(t,e,s,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Wf(this.gl,this.program),wu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}st(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),st(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=yu(this.gl,A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(o.TIME_ELAPSED_EXT,i),i}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await tg(()=>this.disposed||this.isQueryAvailable(t,A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),o=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=xA(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in A().platform&&(s=A().platform.setTimeoutCustom.bind(A().platform)),tg(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Vf(this.gl,t,this.framebuffer),this.debug&&wu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Vf(this.gl,this.outputTexture,this.framebuffer),this.debug&&wu(this.gl)):Mw(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const o=this.gl;Vf(o,t,this.framebuffer),this.debug&&wu(o),this.outputTexture=t,st(o,()=>o.viewport(0,0,e,s)),st(o,()=>o.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,o){this.throwIfDisposed(),st(this.gl,()=>this.gl.scissor(t,e,s,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function xA(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:yA,bincountImpl:Uw,bincountReduceImpl:wA,castImpl:IA,ceilImpl:CA,concatImpl:vA,equalImpl:kA,expImpl:SA,expm1Impl:TA,floorImpl:NA,gatherNdImpl:RA,gatherV2Impl:$A,greaterImpl:GA,greaterEqualImpl:EA,lessImpl:LA,lessEqualImpl:DA,linSpaceImpl:MA,logImpl:zA,maxImpl:FA,maximumImpl:WA,minimumImpl:VA,multiplyImpl:_A,negImpl:AA,notEqualImpl:XA,prodImpl:OA,raggedGatherImpl:PA,raggedRangeImpl:ZA,raggedTensorToTensorImpl:KA,rangeImpl:BA,rsqrtImpl:HA,scatterImpl:UA,sigmoidImpl:YA,simpleAbsImpl:Yw,sliceImpl:QA,sparseFillEmptyRowsImpl:JA,sparseReshapeImpl:jA,sparseSegmentReductionImpl:Qw,sqrtImpl:qA,stridedSliceImpl:tX,stringNGramsImpl:eX,stringSplitImpl:nX,stringToHashBucketFastImpl:sX,subImpl:oX,tileImpl:iX,topKImpl:rX,transposeImpl:Bf,uniqueImpl:aX}=mD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jw(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function Ve(n,t){return t===1?[n]:Jw(n,t)}function lX(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cX{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=We(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=Ve("rc",this.rank),s=Xt(this.rank),o=this.getOutOfBoundsCondition(e),i=this.getSetup(e),r=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${r}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let o=0;o<=1;o++){let i=`${s===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let r=2;r<this.rank;r++)i=`${t[t.length-1-r]},`+i;e.push(i)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${o};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jw{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=We(this.outputShape.length);let s="";for(let o=0;o<4;o++){let i="thisRC = rc;";o%2===1&&(i+="thisRC.z += 1;"),o>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${uX(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Pf():Of(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function uX(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?u_(["r","c","d"],"inputShape"):Po(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dX{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,s){const o=tI(e,s),i=eI(t,o,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const r=qw(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const l=this.freeTextures[i].shift();return this.usedTextures[i].push(l),l}let a;return o===ke.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===ke.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===ke.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===ke.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===ke.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),a}releaseTexture(t,e,s,o){if(this.freeTextures==null)return;const i=tI(s,o),r=eI(e,i,o);r in this.freeTextures||(this.freeTextures[r]=[]);const a=qw(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,o),l=A().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[r].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[r],u=c.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function hX(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function qw(n,t,e,s,o){const i=pX(t,s);let r;if(o){const[l,c]=Mi(n[0],n[1]);r=l*c}else{const[l,c]=za(n[0],n[1]);r=l*c}const a=hX(e,i);return r*a}function pX(n,t){switch(n){case ke.PACKED_2X2_FLOAT32:return Bw(t);case ke.PACKED_2X2_FLOAT16:return Hw(t);case ke.UNPACKED_FLOAT32:return Pw(t);case ke.UNPACKED_FLOAT16:return Zw(t);case ke.PACKED_4X1_UNSIGNED_BYTE:return Kw(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function fX(n){return A().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?ke.PACKED_2X2_FLOAT32:ke.UNPACKED_FLOAT32:n?ke.PACKED_2X2_FLOAT16:ke.UNPACKED_FLOAT16}function tI(n,t){if(n===fn.UPLOAD)return ke.PACKED_2X2_FLOAT32;if(n===fn.RENDER||n==null)return fX(t);if(n===fn.DOWNLOAD||n===fn.PIXELS)return ke.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function eI(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rs{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=We(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Gn="if (isnan(x)) return x;",mX="return x;",nI="return abs(x);",gX="return (x >= 0.0) ? x : (exp(x) - 1.0);",bX=Gn+`
  return (x < 0.0) ? 0.0 : x;
`,xX=Gn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Qs="return x;",yX="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wX="return x;",IX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,CX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vX=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kX="return 1.0 / (1.0 + exp(-1.0 * x));";class Js{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=We(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SX{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=We(this.outputShape.length);const e=t.length,s=Ve("rc",e),o=Xt(e),i=lX(e,s),r=s.slice(-2),a=e<=1?"rc":`vec2(${r.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TX=q0,NX=1e-7,RX=1e-4,Su={};function $X(n){return n in Su||(Su[n]={}),Su[n]}const GX=A().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),EX=600;function LX(){return A().global.screen==null?1024:A().global.screen.height*A().global.screen.width*window.devicePixelRatio*EX/1024/1024}class Tu extends td{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!A().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Kf)e=t;else{const s=Kn(A().getNumber("WEBGL_VERSION"),t);e=new Kf(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Kn(A().getNumber("WEBGL_VERSION"));e=new Kf(s),this.binaryCache=$X(A().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new dX(this.gpgpu),this.numMBBeforeWarning=LX(),this.texData=new qm(this,Vt())}nextDataId(){return Tu.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,o,i,r){const a=this.makeTensorInfo(e,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[o,i]},l.texShape=[o,i];const c=Iu(e),u=new Ow(c,!1,r),d=this.runWebGLProgram(u,[a],s,[[o,i]]);return d.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),d.dataId}write(t,e,s){if((A().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||A().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:e,dtype:s,values:t,usage:fn.UPLOAD,refCount:1}),o}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,o,i){if(A().getBool("DEBUG")&&this.checkNumericalProblems(e),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:o,values:e,usage:fn.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:o,complexTensorInfos:i,slice:r,shape:a,isPacked:l}=e;if(r!=null){let h;l?h=new Js(a,Qs):h=new rs(a,Qs);const p=this.runWebGLProgram(h,[{dataId:t,shape:a,dtype:o}],o),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(t);if(o==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=Ae());let d;if(o==="complex64"){const h=this.readSync(i.real.dataId),p=this.readSync(i.imag.dataId);d=ws(h,p)}else d=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=Ae()-u),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}const e=this.texData.get(t),{values:s,shape:o,slice:i,dtype:r,complexTensorInfos:a,isPacked:l}=e;if(i!=null){let f;l?f=new Js(o,Qs):f=new rs(o,Qs);const m=this.runWebGLProgram(f,[{dataId:t,shape:o,dtype:r}],r),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(t);if(A().getBool("DEBUG")&&!A().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&A().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(r!=="complex64"&&A().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const f=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...xu(o))}this.pendingRead.set(t,[]),r!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(r==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];d=ws(m,g)}else if(c==null)d=this.getValuesFromTexture(t);else{const f=Z(o);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const f=this.gpgpu.gl;st(f,()=>f.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(t,d),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(f=>f(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Vt().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const s=this.texData.get(t),{values:o,shape:i,slice:r,dtype:a,isPacked:l,texture:c}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(r!=null){let p;l?p=new Js(i,Qs):p=new rs(i,Qs);const f=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:a}],a),m=this.readToGPU(f,e);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),d=Vt().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(o=>Ds(o));return wt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return wt(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!WV(s))throw A().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:o}=this.texData.get(t),i=Z(e);if(A().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(t),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...xu(e)).subarray(0,i);return this.disposeIntermediateTensorInfo(h),f}const r=A().getBool("WEBGL_PACK")&&o===!0,a=r?Iu(e):e,l=r?new q_(a):new j_(a),c=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:t}],"float32"),u=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=s,o=!0):this.activeTimers.push(s),this.activeTimers=s,t();const i=si(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),r=si(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,o&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(i);a.kernelMs=HC(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:r[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ae(),endMs:null}}endTimer(t){return A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Ae(),t)}async getQueryTime(t){if(A().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:o,usage:i,isPacked:r,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(o,s),this.textureManager.releaseTexture(e,o,i,r)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=GX){return A().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&Z(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){sn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return TX(t.shape,e)}packedUnaryOp(t,e,s){const o=new Js(t.shape,e),i=this.compileAndRun(o,[t],s);return Vt().makeTensorFromTensorInfo(i)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const o=Yw(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,o)}if(A().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,nI,t.dtype);const e=new rs(t.shape,nI),s=this.compileAndRun(e,[t]);return Vt().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let o;if(e==="string"&&s!=null&&s.length>0&&nr(s[0])){const i=s.map(r=>Ls(r));o=this.write(i,t,e)}else o=this.write(s,t,e);return this.texData.get(o).usage=null,{dataId:o,shape:t,dtype:e}}makeOutput(t,e,s){return Vt().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new SX(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new cX(t.shape),s=!0;return this.runWebGLProgram(e,[t],t.dtype,null,s)}packedReshape(t,e){const s=[zi(t.shape),...Fi(t.shape)],o={dtype:t.dtype,shape:s,dataId:t.dataId},i=[zi(e),...Fi(e)],r=new jw(i,s),a=!0,l=[s],c=this.runWebGLProgram(r,[o],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:o,shape:i,dtype:r}=s;if(e!=null){const h=Z(i),p=e[0]*e[1]*4;S(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Iu(i);let l;o?l=new J_(a):l=new Q_(a);const c=!0,u=[e??xu(a)],d=this.runWebGLProgram(l,[{shape:a,dtype:r,dataId:t}],r,u,c,e);return{dtype:r,shape:i,dataId:d.dataId}}runWebGLProgram(t,e,s,o,i=!1,r){const a=this.makeTensorInfo(t.outputShape,s),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===Ma.DENSE){const b=r??xu(t.outputShape);l.texShape=b.map(x=>x*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),Z(a.shape)===0)return l.values=Ie(a.dtype,0),a;const c=[],u=e.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(b.dataId);if(x.texture==null){if(!t.packedInputs&&Z(b.shape)<=A().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:x.values};t.packedInputs&&(x.isPacked=!0,x.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!x.isPacked!=!!t.packedInputs)b=x.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),x=this.texData.get(b.dataId);else if(x.isPacked&&!vu(x.shape,b.shape)){const w=b,y=b.shape;b.shape=x.shape,b=this.packedReshape(b,y),c.push(b),x=this.texData.get(b.dataId),w.shape=y}return{shape:b.shape,texData:x,isUniform:!1}});this.uploadToGPU(a.dataId);const d={shape:a.shape,texData:l,isUniform:!1},h=Y_(t,u,d),p=this.getAndSaveBinary(h,()=>H_(this.gpgpu,t,u,d)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),A().get("ENGINE_COMPILE_ONLY")||U_(this.gpgpu,p,u,d,o),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=A().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const b=Ae();b-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!A().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){const b=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),b}return a}compileAndRun(t,e,s,o,i=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,o,i)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(A().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!A().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=A().getBool("DEBUG");A().set("DEBUG",!1);const e=this.abs(Et(1e-8)).dataSync()[0];if(A().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?NX:RX}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:o,values:i,texture:r,usage:a,isPacked:l}=e;if(r!=null)return;const c=this.activeTimers!=null;let u;c&&(u=Ae());let d=e.texShape;if(d==null&&(d=e_(s,l),e.texShape=d),i!=null){const h=Iu(s);let p,f=d[1],m=d[0];const g=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!g)&&([f,m]=Mi(d[0],d[1])),l?p=new eA(h,g):p=new Ow(h,g);const b=g?[m,f]:d,x=this.makeTensorInfo(b,o),w=this.texData.get(x.dataId);g?w.usage=fn.PIXELS:w.usage=fn.UPLOAD,w.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,i);const y=[[m,f]],I=!0,C=this.runWebGLProgram(p,[x],o,y,I),v=this.texData.get(C.dataId);e.texShape=v.texShape,e.isPacked=v.isPacked,e.usage=v.usage,A().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(e.texture=v.texture,e.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(x),c&&(this.uploadWaitMs+=Ae()-u)}else{const h=this.acquireTexture(d,a,o,l);e.texture=h}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:o}=s;return e!=null&&(s.values=DX(e,o)),s.values}acquireTexture(t,e,s,o){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,o)}computeBytes(t,e){return t[0]*t[1]*id(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(o=>{try{this.checkCompletion_(e),o(!0)}catch(i){throw i}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await Wc(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Lw(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:s,infLoc:o,nanLoc:i,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=Aw(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=s,t.infLoc=o,t.nanLoc=i,t.inShapesLocations=r,t.inTexShapesLocations=a,t.outShapeLocation=l,t.outShapeStridesLocation=c,t.outTexShapeLocation=u}}createTensorFromTexture(t,e,s){const{texture:o,height:i,width:r,channels:a}=t,l=Vt().backend;if(!l.gpgpu.gl.isTexture(o))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(o,e,s,i,r,a);return Vt().makeTensorFromDataId(c,e,s,l)}}Tu.nextDataId=0;function DX(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */qg()&&m0("webgl",()=>new Tu,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hf=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Xi{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=gt(e,s),this.enableShapeUniforms=We(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Va=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class _a{constructor(t,e,s,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=gt(e,s);const i=this.outputShape.length;this.enableShapeUniforms=We(i);let r="";if(o)if(i===0||Z(this.outputShape)===1)r=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(r=`
          ${Xt(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?r+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:r+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=Ve("coords",i);this.enableShapeUniforms?r+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:r+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${r}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const MX={kernelName:kr,backendName:"webgl",kernelFunc:en};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function js(n){const{inputs:t,backend:e}=n,{real:s,imag:o}=t,i=e.makeTensorInfo(s.shape,"complex64"),r=e.texData.get(i.dataId),a=en({inputs:{x:s},backend:e}),l=en({inputs:{x:o},backend:e});return r.complexTensorInfos={real:a,imag:l},i}const zX={kernelName:xd,backendName:"webgl",kernelFunc:js};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sI="return (a < 0.) ? b * a : a;",oI=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function FX(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{alpha:i}=s,r=e.makeTensorInfo([],"float32",Es(i,"float32")),a=A().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _a(oI,o.shape,r.shape):new Xi(sI,o.shape,r.shape),l=e.runWebGLProgram(a,[o,r],"float32");return e.disposeIntermediateTensorInfo(r),l}const WX={kernelName:zl,backendName:"webgl",kernelFunc:FX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iI="return (a < 0.) ? b * a : a;",rI=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function VX(n){const{inputs:t,backend:e}=n,{x:s,alpha:o}=t,i=A().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _a(rI,s.shape,o.shape):new Xi(iI,s.shape,o.shape);return e.runWebGLProgram(i,[s,o],"float32")}const _X={kernelName:tc,backendName:"webgl",kernelFunc:VX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oi="if (isnan(x)) return x;";function Tt({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:o,backend:i})=>{const{x:r}=o,a=i,l=s||r.dtype;if(a.shouldExecuteOnCPU([r])&&e!=null){const d=a.texData.get(r.dataId),h=e(d.values,l);return a.makeTensorInfo(r.shape,l,h)}const c=A().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let u;return c?u=new Js(r.shape,t):u=new rs(r.shape,n),a.runWebGLProgram(u,[r],l)}}function Se({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:o,dtype:i}){return({inputs:r,backend:a})=>{const{a:l,b:c}=r,u=a;if(s&&l.dtype==="complex64"){const f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[y,I]=w,C={dataId:y.dataId,dtype:y.dtype,shape:l.shape},v={dataId:I.dataId,dtype:I.dtype,shape:c.shape},k=new Xi(n,l.shape,c.shape);return u.runWebGLProgram(k,[C,v],Qe(y.dtype,I.dtype))}),x=js({inputs:{real:g,imag:b},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(b),x}const d=i||Qe(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&o!=null){const f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?Lo(f):f,b=l.dtype==="string"?Lo(m):m,[x,w]=o(l.shape,c.shape,g,b,d),y=u.makeTensorInfo(w,d),I=u.texData.get(y.dataId);return I.values=x,y}const h=A().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let p;return h?p=new _a(t,l.shape,c.shape,e):p=new Xi(n,l.shape,c.shape),u.runWebGLProgram(p,[l,c],d)}}function Aa(n,t=!1){if(n==="linear")return t?wX:mX;if(n==="relu")return t?CX:bX;if(n==="elu")return t?IX:gX;if(n==="relu6")return t?vX:xX;if(n==="prelu")return t?rI:iI;if(n==="leakyrelu")return t?oI:sI;if(n==="sigmoid")return t?kX:yX;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aI{constructor(t,e,s,o=!1,i=!1,r=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=We(this.outputShape.length);const u=o?t[1]:t[2],d=Math.ceil(u/2),h=o?"i * 2, rc.y":"rc.y, i * 2",p=i?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",b="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,b="result = activation(result);");const x=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let w="rc.x",y="rc.x";t[0]<e[0]?w=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(y=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${w};
          int batchB = ${y};
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lI={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class cI{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=gt(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uI="return a * b;";function Uf(n){const{inputs:t,backend:e}=n,{a:s,b:o}=t,i=Qe(s.dtype,o.dtype);if(s.dtype==="complex64"){const a=e.texData.get(s.dataId),l=e.texData.get(o.dataId),c=new cI(lI.REAL,s.shape,o.shape),u=new cI(lI.IMAG,s.shape,o.shape),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],h=e.runWebGLProgram(c,d,"float32"),p=e.runWebGLProgram(u,d,"float32"),f=js({inputs:{real:h,imag:p},backend:e});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),f}if(e.shouldExecuteOnCPU([s,o])){const a=e.texData.get(s.dataId),l=e.texData.get(o.dataId),[c,u]=_A(s.shape,o.shape,a.values,l.values,i),d=e.makeTensorInfo(u,i),h=e.texData.get(d.dataId);return h.values=c,d}let r;return A().getBool("WEBGL_PACK_BINARY_OPERATIONS")?r=new _a(uI,s.shape,o.shape):r=new Xi(uI,s.shape,o.shape),e.runWebGLProgram(r,[s,o],i)}const AX={kernelName:Dr,backendName:"webgl",kernelFunc:Uf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XX(n,t,e){const s=[zi(n.shape),...Fi(n.shape)],o={dtype:n.dtype,shape:s,dataId:n.dataId},i=[zi(t),...Fi(t)],r=new jw(i,s),a=!0,l=[s],c=e.runWebGLProgram(r,[o],n.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function et(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{shape:i}=s,r=e,a=Z(o.shape),l=eg(i,a),c=Z(l);S(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=r.texData.get(o.dataId);return u.isPacked&&!vu(o.shape,l)&&!(u.texture!==null&&vu(u.shape,l))?XX(o,l,r):(r.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype})}const OX={kernelName:nc,backendName:"webgl",kernelFunc:et};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dI{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:i,outSize:r}=t;this.outputShape=[o,r];const a=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(e!=null){const d=1/e;c=`sumValue += dot(values * ${oi(d)?d.toPrecision(2):d}, ones);`}let u="";i%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PX{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:i,outSize:r}=t;this.outputShape=[o,r];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,d=s%4;let h=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";e==="all"?(a="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):e==="any"&&(a="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZX(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=Vc(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function Ko(n,t,e,s){const o=ZX(n.shape);let i=n;for(let r=0;r<o.length;r++){const{inSize:a,windowSize:l,outSize:c}=o[r];let u,d;e==="mean"?u=r===0?new dI({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},a):new dI({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c}):u=new PX({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},e),d=i,i=s.runWebGLProgram(u,[i],t),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KX{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let r=0;r<s.length;r++)s[r]=t[e[r]];this.outputShape=s,this.rank=s.length;const o=Xt(this.rank),i=BX(e);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function BX(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let o=0;o<n.length;o++)s[n[o]]=e[o];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HX{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let u=0;u<s.length;u++)s[u]=t[e[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=Xt(this.rank),i=Jw("rc",this.rank),r=new Array(this.rank);for(let u=0;u<e.length;u++)r[e[u]]=i[u];const a=`vec2(${r.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${r.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nu(n,t,e){const s=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HX(n.shape,t):new KX(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UX(n,t,e,s){const o=t,i=n.shape.length,r=yt(o,n.shape);let a=r;const l=Jt(a,i),c=l!=null;let u=n;c&&(u=Nu(n,l,s),a=ne(a.length,i)),ve("sum",a,i);const[d,h]=be(u.shape,a);let p=d;e&&(p=le(d,r));const f=Z(h),g=Z(n.shape)/f,b=et({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),x=uh(n.dtype),w=Ko(b,x,"sum",s),y=et({inputs:{x:w},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(w),c&&s.disposeIntermediateTensorInfo(u),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ru(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s;return UX(o,i,r,e)}const YX={kernelName:lc,backendName:"webgl",kernelFunc:Ru};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _e(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{perm:i}=s,r=e,a=o.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=o.shape[i[u]];let c;if(r.shouldExecuteOnCPU([o])){const d=r.texData.get(o.dataId).values,h=Bf(d,o.shape,o.dtype,i,l);c=r.makeTensorInfo(l,o.dtype);const p=r.texData.get(c.dataId);p.values=h}else c=Nu(o,i,r);return c}const QX={kernelName:li,backendName:"webgl",kernelFunc:_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hI=1e3;function $u({a:n,b:t,transposeA:e,transposeB:s,backend:o,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:a=0,activation:l=null}){const c=n.shape.length,u=t.shape.length,d=e?n.shape[c-2]:n.shape[c-1],h=s?t.shape[u-1]:t.shape[u-2],p=e?n.shape[c-1]:n.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=n.shape.slice(0,-2),g=t.shape.slice(0,-2),b=Z(m),x=Z(g),y=gt(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);S(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const I=e?[b,d,p]:[b,p,d],C=s?[x,f,h]:[x,h,f],v=et({inputs:{x:n},backend:o,attrs:{shape:I}}),k=et({inputs:{x:t},backend:o,attrs:{shape:C}}),T=[v,k],N=Math.max(b,x),$=e?v.shape[1]:v.shape[2],F=i!=null,W=r!=null,V=l==="leakyrelu",_=l!=null?Aa(l,!0):null,X=F||W||V||_!=null;let K;if((p===1||f===1)&&$>hI&&X===!1){let B=v,U=k;e&&(B=_e({inputs:{x:v},backend:o,attrs:{perm:[0,2,1]}}),T.push(B)),s&&(U=_e({inputs:{x:k},backend:o,attrs:{perm:[0,2,1]}}),T.push(U));const Y=f!==1,j=f===1;let J=B;Y&&(J=et({inputs:{x:B},backend:o,attrs:{shape:[N,$,1]}}),T.push(J));const nt=f===1?2:1;let q=U;j&&(q=et({inputs:{x:U},backend:o,attrs:{shape:[N,1,$]}}),T.push(q));const it=Uf({inputs:{a:J,b:q},backend:o});K=Ru({inputs:{x:it},backend:o,attrs:{axis:nt,keepDims:!0}}),T.push(it)}else{const B=Qe(n.dtype,t.dtype),U=new aI(I,C,[N,p,f],e,s,F,_,W,V),Y=[v,k];if(i!=null&&Y.push(i),W&&Y.push(r),V){const j=o.makeTensorInfo([],"float32",Es(a,"float32"));Y.push(j),T.push(j)}K=o.runWebGLProgram(U,Y,B)}const P=et({inputs:{x:K},backend:o,attrs:{shape:y}});T.push(K);for(const B of T)o.disposeIntermediateTensorInfo(B);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JX(n){const{inputs:t,backend:e,attrs:s}=n,{a:o,b:i,bias:r,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return $u({a:o,b:i,transposeA:l,transposeB:c,backend:e,bias:r,preluActivationWeights:a,leakyreluAlpha:d,activation:u})}const jX={kernelName:mc,backendName:"webgl",kernelFunc:JX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pI="return abs(x);";function qX(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=e.texData.get(s.dataId),r=Yw(i.values);return e.makeTensorInfo(s.shape,s.dtype,r)}let o;return A().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Js(s.shape,pI):o=new rs(s.shape,pI),e.runWebGLProgram(o,[s],s.dtype)}const tO={kernelName:ml,backendName:"webgl",kernelFunc:qX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eO=Gn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,nO=Tt({opSnippet:eO}),sO={kernelName:or,backendName:"webgl",kernelFunc:nO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oO=Gn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,iO=Tt({opSnippet:oO}),rO={kernelName:ir,backendName:"webgl",kernelFunc:iO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fI="return a + b;",aO=Se({opSnippet:fI,packedOpSnippet:fI,supportsComplex:!0,cpuKernelImpl:yA}),lO={kernelName:ai,backendName:"webgl",kernelFunc:aO};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cO{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((i,r)=>`T${r}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const o=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uO{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((i,r)=>`T${r}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const o=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gu(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return en({inputs:{x:s[0]},backend:e});if(s.length>A().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=Gu({inputs:s.slice(0,l),backend:e}),u=Gu({inputs:s.slice(l),backend:e});return Gu({inputs:[c,u],backend:e})}const o=s.map(l=>l.dtype).reduce((l,c)=>Qe(l,c)),i=s.map(l=>l.shape),a=A().getBool("WEBGL_PACK")?new uO(s[0].shape,i):new cO(s[0].shape,i);return e.runWebGLProgram(a,s,o)}const dO={kernelName:hd,backendName:"webgl",kernelFunc:Gu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s,a=o.shape.length,l=yt(i,o.shape);let c=l;const u=Jt(c,a);let d=o;u!=null&&(d=_e({inputs:{x:o},backend:e,attrs:{perm:u}}),c=ne(c.length,a)),ve("all",c,a);const[h,p]=be(d.shape,c),f=Z(p),m=et({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}}),g=Ko(m,m.dtype,"all",e);let b;if(r){const x=le(h,l);b=et({inputs:{x:g},backend:e,attrs:{shape:x}})}else b=et({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(d),b}const pO={kernelName:pd,backendName:"webgl",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s,a=o.shape.length,l=yt(i,o.shape);let c=l;const u=Jt(c,a);let d=o;u!=null&&(d=_e({inputs:{x:o},backend:e,attrs:{perm:u}}),c=ne(c.length,a)),ve("any",c,a);const[h,p]=be(d.shape,c),f=Z(p),m=et({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}}),g=Ko(m,m.dtype,"any",e);let b;if(r){const x=le(h,l);b=et({inputs:{x:g},backend:e,attrs:{shape:x}})}else b=et({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(d),b}const mO={kernelName:fd,backendName:"webgl",kernelFunc:fO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gO{constructor(t,e,s){this.variableNames=["A"];const{windowSize:o,batchSize:i,outSize:r}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,r];const a=e==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bO{constructor(t,e,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=t[t.length-1],r=Math.ceil(i/e);this.outputShape=t.slice(0,-1),r>1&&this.outputShape.push(r),o||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=Xt(l),u=Ve("coords",l);let d,h;if(r===1){h=l+1;const k=Xt(h);d=`
        ${k} sourceLocR = ${k}(${u.join()}, 0);
        ++${u[l-1]};
        ${k} sourceLocG = ${k}(${u.join()}, 0);
        ++${u[l-2]};
        ${k} sourceLocA = ${k}(${u.join()}, 0);
        --${u[l-1]};
        ${k} sourceLocB = ${k}(${u.join()}, 0);
        --${u[l-2]};`}else h=l,d=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(k=>"int "+k),g=Ve("sourceLocR",h-1).concat("inIdx.r"),b=Ve("sourceLocG",h-1).concat("inIdx.g"),x=Ve("sourceLocB",h-1).concat("inIdx.b"),w=Ve("sourceLocA",h-1).concat("inIdx.a"),y=s==="max"?"greaterThan":"lessThan",I=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${w.join()})));`,C=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,v=o?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${v}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mI(n,t,e,s=null){let o=t.shape[0],i=t.shape[1];s!=null&&(o=s.shape[0],i=s.shape[1]);const r=Vc(i),a={windowSize:r,inSize:i,batchSize:o,outSize:Math.ceil(i/r)},l=new gO(a,e,s==null),c=[t];s!=null&&c.push(s);const u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const d=mI(n,t,e,u);return n.disposeIntermediateTensorInfo(u),d}function gI(n,t,e,s=null){const o=s!=null?s.shape:t.shape,i=o[o.length-1],r=Vc(i),a=new bO(o,r,e,s==null),l=s==null?[t]:[t,s],c=n.runWebGLProgram(a,l,"int32");if(c.shape.length===t.shape.length){const u=gI(n,t,e,c);return n.disposeIntermediateTensorInfo(c),u}return c}function bI(n,t,e,s){const o=[e];if(ve("arg"+s.charAt(0).toUpperCase()+s.slice(1),o,t.shape.length),!A().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const i=[],r=n.texData.get(t.dataId),a=r!==null&&r.isPacked;let l=t;a&&(l=n.unpackTensor(t),i.push(l));const[c,u]=be(l.shape,o),d=Z(u),h=et({inputs:{x:l},backend:n,attrs:{shape:[-1,d]}});i.push(h);const p=mI(n,h,s);i.push(p);const f=et({inputs:{x:p},backend:n,attrs:{shape:c}});return i.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return gI(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i}=s;let r=yt(i,o.shape);const a=Jt(r,o.shape.length);let l=o;const c=[];a!=null&&(l=_e({inputs:{x:o},backend:e,attrs:{perm:a}}),c.push(l),r=ne(r.length,l.shape.length)),ve("argMax",[r[0]],l.shape.length);const u=bI(e,l,r[0],"max");return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),u}const yO={kernelName:gl,backendName:"webgl",kernelFunc:xO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i}=s;let r=yt(i,o.shape);const a=Jt(r,o.shape.length);let l=o;const c=[];a!=null&&(l=_e({inputs:{x:o},backend:e,attrs:{perm:a}}),c.push(l),r=ne(r.length,l.shape.length)),ve("argMin",[r[0]],l.shape.length);const u=bI(e,l,r[0],"min");return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),u}const IO={kernelName:bl,backendName:"webgl",kernelFunc:wO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CO=Gn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,vO=Tt({opSnippet:CO}),kO={kernelName:rr,backendName:"webgl",kernelFunc:vO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SO=Gn+"return log(x + sqrt(x * x + 1.0));",TO=Tt({opSnippet:SO}),NO={kernelName:ar,backendName:"webgl",kernelFunc:TO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RO=Gn+`
  return atan(x);
`,$O=Tt({opSnippet:RO}),GO={kernelName:lr,backendName:"webgl",kernelFunc:$O};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EO=Hf+`
  return atan(a, b);
`,LO=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Va+`
  return result;
`,DO=Se({opSnippet:EO,packedOpSnippet:LO}),MO={kernelName:ur,backendName:"webgl",kernelFunc:DO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO=Gn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,FO=Tt({opSnippet:zO}),WO={kernelName:cr,backendName:"webgl",kernelFunc:FO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xa{constructor(t,e,s,o=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const r=t.filterWidth,a=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const m=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),s){const k=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${k} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?i?g:b:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(y="avgValue / count");const I=Math.floor(r/4)*4,C=r%4,v=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${v}
          }

          int xC = xCCorner + ${I};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${v}
          }
        }
        setOutput(${y});
      }
    `}}class Yf{constructor(t,e,s,o=!1,i=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const r=t.filterWidth,a=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,d=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,b=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const w=e==="avg";let y="0.0";if(w||(y="-1.0 / 1e-20"),s){const N=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${N} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(C="avgValue / count");const v=Math.floor(r/4)*4,k=r%4,T=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${b}, ${x});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${v}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${v};
            if (${k===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${k===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${k===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${T}
            }
          }
          setOutput(${C});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t;Fa(o,"avgPool");const{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=s,c=1;S(Ge(r,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=Cn(o.shape,i,r,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&$t(u.inShape,u.outShape))return en({inputs:{x:o},backend:e});const d=new Xa(u,"avg",!1);return e.runWebGLProgram(d,[o],"float32")}const _O={kernelName:xl,backendName:"webgl",kernelFunc:VO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{filterSize:i,strides:r,pad:a,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],d=ms(o.shape,i,r,u,a,l,c),h=new Yf(d,"avg",!1);return e.runWebGLProgram(h,[o],"float32")}const XO={kernelName:yl,backendName:"webgl",kernelFunc:AO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OO{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,o=t.strideHeight,i=t.strideWidth,r=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,d=c-1-t.padInfo.left,h=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class PO{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,o=t.filterWidth,i=t.strideDepth,r=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,d=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=d-1-t.padInfo.front,m=h-1-t.padInfo.top,g=p-1-t.padInfo.left,b=1/(e*s*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:i}=t,r=i,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],h=ms(r.shape,a,l,d,c,u),p=new PO(h);return e.runWebGLProgram(p,[o],r.dtype)}const KO={kernelName:gd,backendName:"webgl",kernelFunc:ZO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:i}=t,r=i;Fa([o,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=Cn(r.shape,a,l,1,c),d=new OO(u);return e.runWebGLProgram(d,[o],r.dtype)}const HO={kernelName:md,backendName:"webgl",kernelFunc:BO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UO(n){const{inputs:t,backend:e,attrs:s}=n,{a:o,b:i}=t,{transposeA:r,transposeB:a}=s;return $u({a:o,b:i,transposeA:r,transposeB:a,backend:e})}const YO={kernelName:wl,backendName:"webgl",kernelFunc:UO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QO{constructor(t,e,s,o,i,r){this.outputShape=[],this.variableNames=["x","mean","variance"],gt(t,e),gt(t,s);let a="0.0";o!=null&&(gt(t,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";i!=null&&(gt(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${r}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JO{constructor(t,e,s,o,i,r){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],gt(t,e),gt(t,s);let a="vec4(0.0)";o!=null&&(gt(t,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(gt(t,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${r}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jO={kernelName:Ll,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:o,variance:i,offset:r,scale:a}=n;S(o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S(r==null||o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);const c=[s,o,i];let u=null;r!=null&&(u=r.shape,c.push(r));let d=null;a!=null&&(d=a.shape,c.push(a));const h=A().getBool("WEBGL_PACK_NORMALIZATION")?new JO(s.shape,o.shape,i.shape,u,d,l):new QO(s.shape,o.shape,i.shape,u,d,l);return t.runWebGLProgram(h,c,c[0].dtype)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qO{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Xt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=tP(this.rank);let o;const i=t.map((r,a)=>`sourceLoc.${Qf[a]} = start[${a}] + coords.${Qf[a]};`);o=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${s}));
      }
    `}}const Qf=["x","y","z","w","u","v"];function tP(n){if(n===1)return"sourceLoc";if(n<=6)return Qf.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eP{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Xt(this.rank),s=Ve("coords",this.rank),o=Ve("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,r=`getChannel(getSource(${o.join()}), ${i})`,a=`
      result.x = ${r};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${r};
        --${o[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${r};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${r};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,d)=>`start[${d}]`).join()});`:t.map((u,d)=>`${o[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nP(n,t,e,s){const o=s.texData.get(n.dataId),i=s.makeTensorInfo(e,n.dtype),r=s.texData.get(i.dataId);Object.assign(r,o),r.refCount=1,r.shape=e,r.dtype=n.dtype;let a=vh(t,ct(n.shape));o.slice&&(a+=o.slice.flatOffset),r.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||n.dataId};const l=s.dataRefCount.get(r.slice.origDataId)||1;return s.dataRefCount.set(r.slice.origDataId,l+1),i}function Pi(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{begin:i,size:r}=s,[a,l]=Sc(o,i,r);if(wh(o,a,l),Z(l)===0)return e.makeTensorInfo(l,o.dtype,[]);if(e.shouldExecuteOnCPU([o])||o.dtype==="string"){const d=e.texData.get(o.dataId),h=QA(d.values,a,l,o.shape,o.dtype);return e.makeTensorInfo(l,o.dtype,h)}const{isPacked:c}=e.texData.get(o.dataId),u=Ch(o.shape,a,l);if(c||!u){const d=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eP(l):new qO(l),h=[a];return e.runWebGLProgram(d,[o],o.dtype,h)}return e.uploadToGPU(o.dataId),nP(o,a,l,e)}const sP={kernelName:ac,backendName:"webgl",kernelFunc:Pi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oP={kernelName:Il,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockShape:i,crops:r}=s;S(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((x,w)=>x*w),l=ha(o.shape,i,a),c=pa(l.length,i.length),u=fa(o.shape,i,a),d=Cp(r,i.length),h=vp(u,r,i.length),p=[],f=et({inputs:{x:o},backend:e,attrs:{shape:l}}),m=_e({inputs:{x:f},backend:e,attrs:{perm:c}}),g=et({inputs:{x:m},backend:e,attrs:{shape:u}}),b=Pi({inputs:{x:g},backend:e,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>e.disposeIntermediateTensorInfo(x)),b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,weights:i}=t,{size:r}=s,a=e.readSync(o.dataId),l=e.readSync(i.dataId),c=Uw(a,l,i.dtype,i.shape,r);return e.makeTensorInfo([r],i.dtype,c)}const rP={kernelName:bd,backendName:"webgl",kernelFunc:iP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n){const{inputs:t,backend:e}=n,{s0:s,s1:o}=t,i=e.readSync(s.dataId),r=e.readSync(o.dataId),a=gt(Array.from(i),Array.from(r));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const lP={kernelName:cg,backendName:"webgl",kernelFunc:aP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xI=Se({opSnippet:"return float(a != b);",cpuKernelImpl:XA,dtype:"bool"}),cP={kernelName:Yl,backendName:"webgl",kernelFunc:xI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oa(n){const{inputs:t,backend:e}=n,{input:s}=t,o=e.texData.get(s.dataId);return en({inputs:{x:o.complexTensorInfos.real},backend:e})}const uP={kernelName:Pd,backendName:"webgl",kernelFunc:Oa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dP="return float(int(x));";function hP(n,t){const e=new rs(n.shape,dP),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jf(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{dtype:i}=s;if(i==="complex64"){if(o.dtype==="complex64")return en({inputs:{x:o},backend:e});const r=xe(o.shape),a=Jf({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),l=js({inputs:{real:a,imag:r},backend:e});return r.dispose(),e.disposeIntermediateTensorInfo(a),l}if(o.dtype==="complex64"){const r=Oa({inputs:{input:o},backend:e}),a=Jf({inputs:{x:r},backend:e,attrs:{dtype:i}});return e.disposeIntermediateTensorInfo(r),a}if(!ng(o.dtype,i)){const r=en({inputs:{x:o},backend:e});return{dataId:r.dataId,shape:r.shape,dtype:i}}if(e.shouldExecuteOnCPU([o])){const r=e.texData.get(o.dataId).values,[a,l,c]=IA(r,o.shape,o.dtype,i);return e.makeTensorInfo(a,l,c)}if(i==="int32")return hP(o,e);if(i==="bool"){const r=e.makeTensorInfo([],"bool",Ie("bool",1)),l=xI({inputs:{a:o,b:r},backend:e});return e.disposeIntermediateTensorInfo(r),l}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${i}`)}const pP={kernelName:dr,backendName:"webgl",kernelFunc:Jf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI="return ceil(x);",fP=Tt({opSnippet:yI,packedOpSnippet:yI,cpuKernelImpl:CA}),mP={kernelName:hr,backendName:"webgl",kernelFunc:fP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gP{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bP{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{clipValueMin:i,clipValueMax:r}=s;let a;A().getBool("WEBGL_PACK_CLIP")?a=new bP(o.shape):a=new gP(o.shape);const l=[[i],[r]];return e.runWebGLProgram(a,[o],o.dtype,l)}const yP={kernelName:pr,backendName:"webgl",kernelFunc:xP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wP{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function IP(n){const{inputs:t,backend:e}=n,{x:s}=t,o=e.texData.get(s.dataId),i=new wP(s.shape),r=[wI(s,o.complexTensorInfos.real),wI(s,o.complexTensorInfos.imag)];return e.runWebGLProgram(i,r,r[0].dtype)}const CP={kernelName:Cl,backendName:"webgl",kernelFunc:IP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vP{constructor(t){this.outputShape=[],this.outputShape=jn(t,1),this.variableNames=t.map((r,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let r=1;r<e.length;r++)e[r]=e[r-1]+t[r][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<e.length;r++){const a=e[r-1];s.push(`else if (yC < ${e[r]}) setOutput(getT${r}(yR, yC-${a}));`)}const o=e.length,i=e[e.length-1];s.push(`else setOutput(getT${o}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kP{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=jn(t,e);const s=this.outputShape,o=s.length,i=Xt(o),r=Ve("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((m,g)=>`T${g}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let m=1;m<l.length;m++)l[m]=l[m-1]+t[m][e];const c=a[e],u=a.slice(-2),d=a.join();let h=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${d}), vec2(${u.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];h+=`
        if (${c} < ${l[m]}  && ${c} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Eu(a,c,g)}),
            vec2(${Eu(u,c,g)}));
        }`}const p=l.length,f=l[l.length-1];h+=`
        return getChannel(
          getT${p}(${Eu(a,c,f)}),
          vec2(${Eu(u,c,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${r}), 0., 0., 0.);

        ${r[o-1]} = ${r[o-1]} + 1;
        if (${r[o-1]} < ${s[o-1]}) {
          result.g = getValue(${r});
        }

        ${r[o-2]} = ${r[o-2]} + 1;
        if (${r[o-2]} < ${s[o-2]}) {
          result.a = getValue(${r});
        }

        ${r[o-1]} = ${r[o-1]} - 1;
        if (${r[o-2]} < ${s[o-2]} &&
            ${r[o-1]} < ${s[o-1]}) {
          result.b = getValue(${r});
        }
        setOutput(result);
      }
    `}}function Eu(n,t,e){const s=n.indexOf(t);return n.map((i,r)=>r===s?`${i} - ${e}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lu(n){const{inputs:t,backend:e}=n,{input:s}=t,o=e.texData.get(s.dataId);return en({inputs:{x:o.complexTensorInfos.imag},backend:e})}const SP={kernelName:zd,backendName:"webgl",kernelFunc:Lu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pa(n,t,e){const s=n[0].dtype;if(s==="complex64"){const p=n.map(x=>Oa({inputs:{input:x},backend:e})),f=n.map(x=>Lu({inputs:{input:x},backend:e})),m=Pa(p,t,e),g=Pa(f,t,e),b=js({inputs:{real:m,imag:g},backend:e});return p.forEach(x=>e.disposeIntermediateTensorInfo(x)),f.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),b}let o=e.shouldExecuteOnCPU(n);if(s==="string"&&(o=!0),o){const p=n.map(y=>{const C=[-1,Z(y.shape.slice(t))];return et({inputs:{x:y},backend:e,attrs:{shape:C}})}),f=p.map(y=>({vals:e.readSync(y.dataId),shape:y.shape})),m=jn(p.map(y=>y.shape),1),g=p[0].shape[0]===1,b=vA(f,m,s,g),x=jn(n.map(y=>y.shape),t),w=e.makeTensorInfo(x,s,b);return p.forEach(y=>e.disposeIntermediateTensorInfo(y)),w}const i=n.filter(p=>Z(p.shape)>0),r=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const p=r?new rs(n[0].shape,Qs):new Js(n[0].shape,Qs);return e.runWebGLProgram(p,n,s)}const a=A().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){const p=[];for(let m=0;m<i.length;m+=a){const g=i.slice(m,m+a);p.push(Pa(g,t,e))}const f=Pa(p,t,e);for(const m of p)e.disposeIntermediateTensorInfo(m);return f}if(r){const p=new kP(i.map(f=>f.shape),t);return e.runWebGLProgram(p,i,s)}const{tensors2D:l,outShape:c}=TP(i,t,e),u=new vP(l.map(p=>p.shape)),d=e.runWebGLProgram(u,l,s);l.forEach(p=>e.disposeIntermediateTensorInfo(p));const h=et({inputs:{x:d},attrs:{shape:c},backend:e});return e.disposeIntermediateTensorInfo(d),h}function TP(n,t,e){const s=jn(n.map(i=>i.shape),t);return{tensors2D:n.map(i=>et({inputs:{x:i},attrs:{shape:[-1,Z(i.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function II(n){const{inputs:t,backend:e,attrs:s}=n,{axis:o}=s,i=yt(o,t[0].shape)[0],r=t.map(c=>c.shape);yp(r,i);const a=jn(t.map(c=>c.shape),i);if(Z(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(c=>Z(c.shape)>0);return l.length===1?en({inputs:{x:l[0]},backend:e}):Pa(l,i,e)}const NP={kernelName:vl,backendName:"webgl",kernelFunc:II};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CI{constructor(t,e=!1,s=null,o=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,d=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4,g=t.dataFormat==="channelsLast",b=g?1:2,x=g?2:3,w=g?3:1;let y="",I="";s&&(o?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${I}
        setOutput(result);
      }
    `}}class RP{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,o=t.padInfo.left,i=t.strideDepth,r=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,d=t.filterDepth,h=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${r}, ${a});
      const ivec3 pads = ivec3(${e}, ${s}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vI{constructor(t,e=!1,s=null,o=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=We(this.outputShape.length);const r=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,d=u;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)h+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;h+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)h+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(d+1)/2;g++){const b=g*2;if(h+=`
           xC = xCCorner + ${b*l};
           `,a===1){if(b<u&&(r%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,l===1&&b>0?h+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<u)){const x=r%2===0?ed(l):l;l%2===0&&r%2===1||l%2!==0&&r%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,l>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:h+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):x===1?h+=`
                     xC${b+1} = xTexelC${b};
                     `:h+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<u&&(r%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<u&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<u&&(h+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<u&&(h+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<u&&(h+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",f="";s&&(o?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:i?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $P{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=We(this.outputShape.length);const{dataFormat:s}=e,o=Fe(),i=s==="channelsLast",r=i?1:2,a=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let d=0;d<=1;d++)c+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${r}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Du(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function kI({x:n,filter:t,convInfo:e,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:r=0,activation:a=null}){const l=n.shape,c=s.texData.get(n.dataId),u=e.inChannels,d=l[0]*l[1]*l[2],h=e.outChannels,p=e.dataFormat==="channelsLast",f=!1,m=!1;let g;const b=[];if(i!=null){const y=Du(i.shape,p);y!=null&&(i=et({inputs:{x:i},backend:s,attrs:{shape:y}}),b.push(i))}if(o!=null){const y=Du(o.shape,p);y!=null&&(o=et({inputs:{x:o},backend:s,attrs:{shape:y}}),b.push(o))}if(!((d===1||h===1)&&u>hI)&&c.isPacked&&p&&c.texture!=null&&l[2]%2!==0&&$t(c.shape.slice(-3),l.slice(-3))){const y=l[0]*l[1]*(l[2]+1),I={dataId:n.dataId,shape:[1,y,e.inChannels],dtype:n.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,S(vu(c.shape,I.shape),()=>`packed reshape ${c.shape} to ${I.shape} isn't free`);const v=et({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});b.push(v);const k=$u({a:I,b:v,backend:s,transposeA:f,transposeB:m,bias:o,activation:a,preluActivationWeights:i,leakyreluAlpha:r}),T=s.texData.get(k.dataId);S(T.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,T.shape=e.outShape,g=en({inputs:{x:k},backend:s}),g.shape=e.outShape,b.push(k)}else{const y=e.outHeight*e.outWidth,I=et({inputs:{x:n},backend:s,attrs:{shape:p?[e.batchSize,y,e.inChannels]:[e.batchSize,e.inChannels,y]}}),C=et({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),v=$u({a:p?I:C,b:p?C:I,transposeA:!p,transposeB:m,backend:s,bias:o,activation:a,preluActivationWeights:i,leakyreluAlpha:r});g=et({inputs:{x:v},backend:s,attrs:{shape:e.outShape}}),b.push(I),b.push(C),b.push(v)}for(const y of b)s.disposeIntermediateTensorInfo(y);return g}function SI({x:n,filter:t,convInfo:e,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:r=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:d,outHeight:h,dataFormat:p}=e,f=p==="channelsLast",m=l*c*u,g=h*d,b=[e.batchSize,m,g],x=!0,w=!1,y=[];if(i!=null){const P=Du(i.shape,f);P!=null&&(i=et({inputs:{x:i},backend:s,attrs:{shape:P}}),y.push(i))}if(o!=null){const P=Du(o.shape,f);P!=null&&(o=et({inputs:{x:o},backend:s,attrs:{shape:P}}),y.push(o))}const I=et({inputs:{x:t},backend:s,attrs:{shape:[1,m,Z(t.shape)/m]}});y.push(I);const C=new $P(b,e),v=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],k=s.runWebGLProgram(C,[n],"float32",v),T=et({inputs:{x:k},backend:s,attrs:{shape:b}});y.push(k),y.push(T);const N=o!=null,$=i!=null,F=a==="leakyrelu",W=a?Aa(a,!0):null,V=new aI(f?T.shape:I.shape,f?I.shape:T.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],x,w,N,W,$,F),_=f?[T,I]:[I,T];if(o&&_.push(o),$&&_.push(i),F){const P=s.makeTensorInfo([],"float32",Es(r,"float32"));_.push(P),y.push(P)}const X=s.runWebGLProgram(V,_,"float32"),K=et({inputs:{x:X},backend:s,attrs:{shape:e.outShape}});y.push(X);for(const P of y)s.disposeIntermediateTensorInfo(P);return K}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GP(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i}=t,{strides:r,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s,d=gs(l),h=Ce(o.shape,i.shape,r,c,a,u,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=kI({x:o,filter:i,convInfo:h,backend:e});else if(h.strideWidth<=2&&d==="channelsLast"&&A().getBool("WEBGL_EXP_CONV")){const m=new vI(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=e.runWebGLProgram(m,[o,i],"float32",g)}else if(A().getBool("WEBGL_CONV_IM2COL"))p=SI({x:o,filter:i,convInfo:h,backend:e});else{const m=new CI(h);p=e.runWebGLProgram(m,[o,i],"float32")}const f=et({inputs:{x:p},backend:e,attrs:{shape:h.outShape}});return e.disposeIntermediateTensorInfo(p),f}const EP={kernelName:kl,backendName:"webgl",kernelFunc:GP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LP{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,o=t.padInfo.top,i=t.padInfo.left,r=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${r}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class DP{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,o=t.strideHeight,i=t.strideWidth,r=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=s-1-t.padInfo.left,c=r?1:2,u=r?2:3,d=r?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${r}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class MP{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.padInfo.front,r=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${i};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${r};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class zP{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,o=t.filterWidth,i=t.strideDepth,r=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,c=s-1-t.padInfo.top,u=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:i}=t,{strides:r,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,d=gs(l),h=Ce(o.shape,u,r,1,a,c,!1,d),p=new LP(h);return e.runWebGLProgram(p,[o,i],"float32")}const WP={kernelName:yd,backendName:"webgl",kernelFunc:FP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:i}=t,{inputShape:r,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=gs(c),h=Ce(r,i.shape,a,1,l,u,!1,d),p=new DP(h);return e.runWebGLProgram(p,[o,i],"float32")}const _P={kernelName:Sl,backendName:"webgl",kernelFunc:VP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i}=t,{strides:r,pad:a,dilations:l}=s,c=Fs(o.shape,i.shape,r,l,a),u=new RP(c);return e.runWebGLProgram(u,[o,i],"float32")}const XP={kernelName:Tl,backendName:"webgl",kernelFunc:AP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OP(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:i}=t,{strides:r,pad:a,filterShape:l}=s,c=Fs(o.shape,l,r,1,a),u=new MP(c);return e.runWebGLProgram(u,[o,i],"float32")}const PP={kernelName:wd,backendName:"webgl",kernelFunc:OP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:i}=t,{pad:r,strides:a,inputShape:l}=s,c=Fs(l,i.shape,a,1,r),u=new zP(c);return e.runWebGLProgram(u,[o,i],"float32")}const KP={kernelName:Id,backendName:"webgl",kernelFunc:ZP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP=Oi+`
  return cos(x);
`,HP=Tt({opSnippet:BP}),UP={kernelName:fr,backendName:"webgl",kernelFunc:HP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YP=Tt({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),QP={kernelName:mr,backendName:"webgl",kernelFunc:YP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JP{constructor(t,e,s,o,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,a,l,c]=t,[u]=e,[d,h]=s;this.outputShape=[u,d,h,c];const p=o==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${l-1}.0`],[g,b,x]=d>1?[`${(a-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,y,I]=h>1?[`${(l-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${r}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${y};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jP={kernelName:vd,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{image:o,boxes:i,boxInd:r}=t,{cropSize:a,method:l,extrapolationValue:c}=s,u=new JP(o.shape,i.shape,a,l,c);return e.runWebGLProgram(u,[o,i,r],"float32")}};var Za;(function(n){n.Prod="*",n.Sum="+"})(Za||(Za={}));class TI{constructor(t,e,s,o){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,r=this.op===Za.Prod?"1.0":"0.0",a=s?r:`getX(${NI(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";s?(c=o?`end != ${l-1}`:"end != 0",u=o?"end + 1":"end - 1"):(c=o?`end + pow2 < ${l}`:"end >= pow2",u=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Xt(i)} coords = getOutputCoords();
        int end = ${RI(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${RI(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${NI(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function NI(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function RI(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(n,t,e,s,o,i){const r=t.shape.length,a=Jt([s],r);let l=t;a!=null&&(l=_e({inputs:{x:t},backend:e,attrs:{perm:a}}));const c=ne(1,r)[0];if(c!==r-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const u=l.shape[c];let d=en({inputs:{x:l},backend:e});for(let h=0;h<=Math.ceil(Math.log2(u))-1;h++){const p=new TI(n,l.shape,!1,i),f=[[h]],m=d;d=e.runWebGLProgram(p,[d],d.dtype,f),e.disposeIntermediateTensorInfo(m)}if(o){const h=new TI(n,l.shape,o,i),p=d;d=e.runWebGLProgram(h,[d],d.dtype),e.disposeIntermediateTensorInfo(p)}if(a!=null){const h=Ws(a),p=_e({inputs:{x:d},backend:e,attrs:{perm:h}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(l),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qP(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,exclusive:r,reverse:a}=s;return $I(Za.Prod,o,e,i,r,a)}const tZ={kernelName:Cd,backendName:"webgl",kernelFunc:qP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,exclusive:r,reverse:a}=s;return $I(Za.Sum,o,e,i,r,a)}const nZ={kernelName:Nl,backendName:"webgl",kernelFunc:eZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,weights:i}=t,{size:r,binaryOutput:a}=s;if(o.shape.length===1){const l=e.readSync(o.dataId),c=e.readSync(i.dataId),u=Uw(l,c,i.dtype,i.shape,r);return e.makeTensorInfo([r],i.dtype,u)}else if(o.shape.length===2){const l=e.bufferSync(o),c=e.bufferSync(i),u=wA(l,c,r,a);return e.makeTensorInfo(u.shape,i.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const oZ={kernelName:kd,backendName:"webgl",kernelFunc:sZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iZ{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockSize:i,dataFormat:r}=s,a=o.shape[0],l=r==="NHWC"?o.shape[1]:o.shape[2],c=r==="NHWC"?o.shape[2]:o.shape[3],u=r==="NHWC"?o.shape[3]:o.shape[1],d=l*i,h=c*i,p=u/(i*i),f=r==="NHWC"?[a,d,h,p]:[a,p,d,h],m=new iZ(f,i,r);return e.runWebGLProgram(m,[o],o.dtype)}const aZ={kernelName:Sd,backendName:"webgl",kernelFunc:rZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GI{constructor(t,e=!1,s=null,o=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=We(this.outputShape.length);const r=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels;let c="",u="";s&&(o?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const d=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${r}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EI{constructor(t,e=!1,s=null,o=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=We(this.outputShape.length);const r=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,d=t.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<d;b++)p+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let b=0;b<d;b++)p+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(h+1)/2;b++){const x=b*2;if(p+=`
          xC = xCCorner + ${x*c};
          `,l===1){if(x<d&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,c===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<d)){const w=a%2===0?ed(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):w===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<d&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<d&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<d&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<d&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${r};
        int q = d2 - d1 * ${r};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i}=t,{strides:r,pad:a,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),S(Ge(r,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const d=Ce(o.shape,i.shape,r,u,a,c,!0);let h;A().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new EI(d):h=new GI(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return e.runWebGLProgram(h,[o,i],"float32",p)}const cZ={kernelName:Rl,backendName:"webgl",kernelFunc:lZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uZ{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,o=t.padInfo.top,i=t.padInfo.left,r=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${r} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class dZ{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,o=t.strideHeight,i=t.strideWidth,r=e-1-t.padInfo.top,a=s-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:i}=t,{strides:r,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s,d=Ce(o.shape,u,r,a,l,c,!0),h=new uZ(d);return e.runWebGLProgram(h,[o,i],"float32")}const pZ={kernelName:Td,backendName:"webgl",kernelFunc:hZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fZ(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:i}=t,{strides:r,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s,d=Ce(u,i.shape,r,a,l,c,!0),h=new dZ(d);return e.runWebGLProgram(h,[o,i],"float32")}const mZ={kernelName:Nd,backendName:"webgl",kernelFunc:fZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gZ{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bZ(n){const{inputs:t,backend:e}=n,{x:s}=t,o=[...s.shape,...s.shape],i=Z(s.shape),r=et({inputs:{x:s},backend:e,attrs:{shape:[i]}}),a=new gZ(i),l=e.runWebGLProgram(a,[r],r.dtype),c=et({inputs:{x:l},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(l),c}const xZ={kernelName:ug,backendName:"webgl",kernelFunc:bZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yZ{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:o,strideHeight:i,strideWidth:r,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:d,left:h}=o;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${r});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i}=t,{strides:r,pad:a,dilations:l}=s,c=ra(o.shape,i.shape,r,a,"NHWC",l);let u;const d=new yZ(c);u=e.runWebGLProgram(d,[o,i],"float32");const h=et({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),h}const IZ={kernelName:$l,backendName:"webgl",kernelFunc:wZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CZ(n){const{inputs:t,backend:e,attrs:s}=n,{equation:o}=s,i=t,{allDims:r,summedDims:a,idDims:l}=Lp(o,i.length);Mp(r.length,l,i);const{path:c,steps:u}=zp(a,l),d=u.length;let h=null,p=r.length;const f=[];for(let m=0;m<d;++m){for(const g of u[m]){const{permutationIndices:b,expandDims:x}=Dp(p,l[g]);let w;Fp(b)?w=i[g]:(w=_e({inputs:{x:i[g]},backend:e,attrs:{perm:b}}),f.push(w));const y=w.shape.slice();for(let I=0;I<x.length;++I)y.splice(x[I],0,1);$t(w.shape,y)||(w=et({inputs:{x:w},backend:e,attrs:{shape:y}}),f.push(w)),h===null?h=w:(h=Uf({inputs:{a:w,b:h},backend:e}),f.push(h))}m<d-1&&(c[m]>=0&&(h=Ru({inputs:{x:h},backend:e,attrs:{axis:c[m]-(r.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&e.disposeIntermediateTensorInfo(m);return h}const vZ={kernelName:dg,backendName:"webgl",kernelFunc:CZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kZ=Tt({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),SZ={kernelName:br,backendName:"webgl",kernelFunc:kZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TZ="return (b >= 1.0) ? a : a * (b + 1.0);",NZ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,RZ={kernelName:Gd,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e}=n,{dy:s,y:o}=t,i=A().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _a(NZ,s.shape,o.shape):new Xi(TZ,s.shape,o.shape);return e.runWebGLProgram(i,[s,o],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Z=Se({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:kA}),GZ={kernelName:Gl,backendName:"webgl",kernelFunc:$Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EZ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${kp};
  float a1 = ${Sp};
  float a2 = ${Tp};
  float a3 = ${Np};
  float a4 = ${Rp};
  float a5 = ${$p};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,LZ=Tt({opSnippet:EZ}),DZ={kernelName:xr,backendName:"webgl",kernelFunc:LZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MZ=Oi+`
  return exp(x);
`,LI=Tt({opSnippet:MZ,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:SA,dtype:"float32"}),zZ={kernelName:yr,backendName:"webgl",kernelFunc:LI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jf(n){const{inputs:t,attrs:e,backend:s}=n,{dim:o}=e,{input:i}=t,r=i.shape.length,a=i.shape.slice();let l=o;return o<0&&(S(-(r+1)<=o,()=>`Axis must be in the interval [${-(r+1)}, ${r}]`),l=r+o+1),a.splice(l,0,1),et({inputs:{x:i},backend:s,attrs:{shape:a}})}const FZ={kernelName:El,backendName:"webgl",kernelFunc:jf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI="return exp(x) - 1.0;",WZ=Tt({opSnippet:DI,packedOpSnippet:DI,cpuKernelImpl:TA}),VZ={kernelName:wr,backendName:"webgl",kernelFunc:WZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MI{constructor(t,e,s){this.variableNames=["real","imag"];const o=e[1];this.outputShape=e;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,r=s?`${o}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${r};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zI(n,t,e){const s=e.texData.get(n.dataId),o=Z(n.shape),i=n.shape[n.shape.length-1],r=o/i,a=et({inputs:{x:n},backend:e,attrs:{shape:[r,i]}}),l=a.shape,c=new MI("real",l,t),u=new MI("imag",l,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],h=e.runWebGLProgram(c,d,"float32"),p=e.runWebGLProgram(u,d,"float32"),f=js({inputs:{real:h,imag:p},backend:e});e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p);const m=et({inputs:{x:f},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(n){const{inputs:t,backend:e}=n,{input:s}=t;return zI(s,!1,e)}const AZ={kernelName:Ed,backendName:"webgl",kernelFunc:_Z};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XZ{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ka(n){const{backend:t,attrs:e}=n,{shape:s,value:o}=e;let{dtype:i}=e;if(i=i||sr(o),i==="string"){const r=ie(i,Z(s));return r.fill(o),t.makeTensorInfo(s,i,r)}else{const r=new XZ(s,o),a=[[o]];return t.runWebGLProgram(r,[],i,a)}}const OZ={kernelName:Ld,backendName:"webgl",kernelFunc:Ka};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PZ{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZZ={kernelName:Dd,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,o=new PZ(e.shape);return s.runWebGLProgram(o,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FI="return floor(x);",KZ=Tt({opSnippet:FI,packedOpSnippet:FI,cpuKernelImpl:NA}),BZ={kernelName:Ir,backendName:"webgl",kernelFunc:KZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HZ=Se({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),UZ={kernelName:Cr,backendName:"webgl",kernelFunc:HZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YZ{constructor(t){this.variableNames=["A"];const e=Fe(),[s,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QZ{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Fe(),[s,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JZ={kernelName:Jd,backendName:"webgl",kernelFunc:jZ};let Zi,qf=A().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function jZ(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:o}=t;const{numChannels:i}=s,r=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[l,c]=r?[o.videoWidth,o.videoHeight]:[o.width,o.height],u=[c,l],d=[c,l,i];if(a||r){const m=A().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Zi==null||m!==qf)&&(qf=m,Zi=document.createElement("canvas").getContext("2d",{willReadFrequently:qf})),Zi.canvas.width=l,Zi.canvas.height=c,Zi.drawImage(o,0,0,l,c),o=Zi.canvas}const h=e.makeTensorInfo(u,"int32");e.texData.get(h.dataId).usage=fn.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(h.dataId),o);const p=A().getBool("WEBGL_PACK")?new QZ(d):new YZ(d),f=e.runWebGLProgram(p,[h],"int32");return e.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i,bias:r,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=gs(u),g=Ce(o.shape,i.shape,l,d,c,h,!1,m);let b;const x=[],w=r!=null,y=a!=null,I=p==="leakyrelu",C=()=>{const k=[o,i],T=(N,$)=>{if($==="NCHW"&&N.shape.length===1&&N.shape[0]!==1){const F=et({inputs:{x:N},backend:e,attrs:{shape:[N.shape[0],1,1]}});return x.push(F),F}return N};if(w&&k.push(T(r,u)),y&&k.push(T(a,u)),I){const N=e.makeTensorInfo([],"float32",Es(f,"float32"));k.push(N),x.push(N)}return k};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=kI({x:o,filter:i,convInfo:g,backend:e,bias:r,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&A().getBool("WEBGL_EXP_CONV")){const k=p?Aa(p,!0):null,T=new vI(g,w,k,y,I),N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],$=C();b=e.runWebGLProgram(T,$,"float32",N)}else if(A().getBool("WEBGL_CONV_IM2COL"))b=SI({x:o,filter:i,convInfo:g,backend:e,bias:r,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const k=p?Aa(p,!1):null,T=new CI(g,w,k,y,I),N=C();b=e.runWebGLProgram(T,N,"float32")}const v=et({inputs:{x:b},backend:e,attrs:{shape:g.outShape}});return x.push(b),x.forEach(k=>e.disposeIntermediateTensorInfo(k)),v}const tK={kernelName:gc,backendName:"webgl",kernelFunc:qZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eK(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:i,bias:r,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[];let m=u;m==null&&(m=[1,1]),S(Ge(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=Ce(o.shape,i.shape,l,m,c,d,!0),b=A().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=h?Aa(h,b):null,w=[o,i],y=r!=null,I=a!=null,C=h==="leakyrelu";if(y&&w.push(r),I&&w.push(a),C){const N=e.makeTensorInfo([],"float32",Es(p,"float32"));w.push(N),f.push(N)}let v;b?v=new EI(g,y,x,I,C):v=new GI(g,y,x,I,C);const k=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],T=e.runWebGLProgram(v,w,"float32",k);return f.forEach(N=>e.disposeIntermediateTensorInfo(N)),T}const nK={kernelName:$g,backendName:"webgl",kernelFunc:eK};class sK{constructor(t,e,s,o){this.sliceDim=t,this.strides=e,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=s;const i=Xt(s.length);let r=`
    int index;`;for(let a=0;a<this.sliceDim;a++)r+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${r}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(n){const{inputs:t,backend:e}=n,{params:s,indices:o}=t,i=o.shape,r=i[i.length-1],a=Z(s.shape),[l,c,u,d]=xh(s,o),h=et({inputs:{x:o},backend:e,attrs:{shape:[c,r]}}),p=et({inputs:{x:s},backend:e,attrs:{shape:[Z(s.shape)/u,u]}});if(e.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const b=e.readSync(o.dataId),x=e.bufferSync(s),w=RA(b,x,s.dtype,c,r,u,d,s.shape,a);return e.makeTensorInfo(l,s.dtype,w.values)}const f=new sK(r,d,[c,u],s.shape),m=e.runWebGLProgram(f,[p,h],p.dtype),g=et({inputs:{x:m},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),g}const iK={kernelName:hg,backendName:"webgl",kernelFunc:oK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rK{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=Xt(this.rank),o=aK(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}}function aK(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let o=0;o<n.length;o++)o===2?s.push("index"):s.push(`${e[o]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,indices:i}=t,{axis:r,batchDims:a}=s,l=yt(r,o.shape)[0];if(A().get("DEBUG")){const x=e.readSync(i.dataId),w=o.shape[l];for(let y=0;y<x.length;++y){const I=x[y];S(I<=w-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${w-1}]`)}}const c=_p(o,i,l,a),u=Z(i.shape),d=[],h=et({inputs:{x:o},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=et({inputs:{x:i},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(h),d.push(p);const f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([o,i])||o.dtype==="string"){const x=e.bufferSync(p),w=e.bufferSync(h),y=$A(w,x,f);return d.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.makeTensorInfo(c.outputShape,y.dtype,y.values)}const m=new rK(h.shape,f),g=e.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const b=et({inputs:{x:g},backend:e,attrs:{shape:c.outputShape}});return d.forEach(x=>e.disposeIntermediateTensorInfo(x)),b}const lK={kernelName:Dl,backendName:"webgl",kernelFunc:WI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cK=Se({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:GA,dtype:"bool"}),uK={kernelName:Ml,backendName:"webgl",kernelFunc:cK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dK=Se({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:EA}),hK={kernelName:vr,backendName:"webgl",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n){const{inputs:t,backend:e}=n,{input:s}=t;return zI(s,!0,e)}const fK={kernelName:Md,backendName:"webgl",kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mK=Tt({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),gK={kernelName:Sr,backendName:"webgl",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bK=Tt({opSnippet:"return float(isinf(x));",dtype:"bool"}),xK={kernelName:Tr,backendName:"webgl",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK=Tt({opSnippet:"return float(isnan(x));",dtype:"bool"}),wK={kernelName:Nr,backendName:"webgl",kernelFunc:yK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK=Se({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:LA,dtype:"bool"}),CK={kernelName:Fl,backendName:"webgl",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK=Se({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:DA,dtype:"bool"}),kK={kernelName:Wl,backendName:"webgl",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(n){const{backend:t,attrs:e}=n,{start:s,stop:o,num:i}=e,r=MA(s,o,i);return t.makeTensorInfo([r.length],"float32",r)}const TK={kernelName:pg,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK=Oi+`
  return x < 0.0 ? 0./0. : log(x);
`,RK=Tt({opSnippet:NK,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:zA}),$K={kernelName:Rr,backendName:"webgl",kernelFunc:RK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GK=Oi+`
  return log(1.0 + x);
`,EK=Tt({opSnippet:GK}),LK={kernelName:$r,backendName:"webgl",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DK=Se({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),MK={kernelName:Vl,backendName:"webgl",kernelFunc:DK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zK=Tt({opSnippet:"return float(!(x >= 1.0));"}),FK={kernelName:_l,backendName:"webgl",kernelFunc:zK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WK=Se({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),VK={kernelName:Al,backendName:"webgl",kernelFunc:WK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _K{constructor(t,e,s,o,i){this.variableNames=["x"],this.outputShape=[];const r=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${s}) + float(${o}) * sum`;i===.5?l=`inversesqrt(${c})`:i===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${r}; j <= ${r}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AK{constructor(t,e,s,o,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${s}) + float(${o}) * sum`;i===.5?l=`inversesqrt(${c})`:i===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${r};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${r}; j <= ${r}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XK={kernelName:Xl,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{depthRadius:i,bias:r,alpha:a,beta:l}=s,c=A().getBool("WEBGL_PACK_NORMALIZATION")?new AK(o.shape,i,r,a,l):new _K(o.shape,i,r,a,l);return e.runWebGLProgram(c,[o],o.dtype)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OK{constructor(t,e,s,o,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=o,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${i})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PK={kernelName:Fd,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o,y:i,dy:r}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=s,d=new OK(o.shape,a,l,c,u);return e.runWebGLProgram(d,[o,i,r],o.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZK(n,t,e,s){const o=Z(t),r=Z(n.shape)/o,a=et({inputs:{x:n},attrs:{shape:[r,o]},backend:s}),l=Ko(a,n.dtype,"max",s),c=et({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VI(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{reductionIndices:i,keepDims:r}=s,a=o.shape.length,l=yt(i,o.shape);let c=l;const u=Jt(c,a),d=u!=null,h=e.shouldExecuteOnCPU([o]);let p=o;if(d){if(h){const w=e.texData.get(p.dataId).values,y=new Array(a);for(let v=0;v<y.length;v++)y[v]=o.shape[u[v]];const I=Bf(w,o.shape,o.dtype,u,y);p=e.makeTensorInfo(y,o.dtype);const C=e.texData.get(p.dataId);C.values=I}else p=Nu(o,u,e);c=ne(c.length,a)}ve("max",c,a);const[f,m]=be(p.shape,c);let g=f;r&&(g=le(f,l));let b;if(h){const w=e.texData.get(p.dataId).values,y=FA(w,Z(m),g,o.dtype);b=e.makeTensorInfo(g,o.dtype);const I=e.texData.get(b.dataId);I.values=y}else b=ZK(p,m,g,e);return d&&e.disposeIntermediateTensorInfo(p),b}const KK={kernelName:Ol,backendName:"webgl",kernelFunc:VI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BK=Hf+`
  return max(a, b);
`,HK=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Va+`
  return result;
`,UK=Se({opSnippet:BK,packedOpSnippet:HK,cpuKernelImpl:WA}),YK={kernelName:Gr,backendName:"webgl",kernelFunc:UK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t;Fa(o,"maxPool");const{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=s,c=1;S(Ge(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=Cn(o.shape,i,r,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&$t(u.inShape,u.outShape))return en({inputs:{x:o},backend:e});const d=new Xa(u,"max",!1);return e.runWebGLProgram(d,[o],o.dtype)}const JK={kernelName:Pl,backendName:"webgl",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{filterSize:i,strides:r,pad:a,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],d=ms(o.shape,i,r,u,a,c,l),h=new Yf(d,"max",!1);return e.runWebGLProgram(h,[o],o.dtype)}const qK={kernelName:Zl,backendName:"webgl",kernelFunc:jK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tB{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,o=t.dilationHeight,i=t.effectiveFilterHeight,r=t.effectiveFilterWidth,a=i-1-t.padInfo.top,l=r-1-t.padInfo.left,c=i*r-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${r} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class eB{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,r=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,d=l-1-t.padInfo.front,h=c-1-t.padInfo.top,p=u-1-t.padInfo.left,f=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${r}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:i}=t,r=i,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],h=ms(r.shape,a,l,d,c,u),p=new Yf(h,"max",!0),f=e.runWebGLProgram(p,[r],r.dtype),m=new eB(h),g=e.runWebGLProgram(m,[o,f],r.dtype);return e.disposeIntermediateTensorInfo(f),g}const sB={kernelName:Vd,backendName:"webgl",kernelFunc:nB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:i,output:r}=t,a=i;Fa([i,r],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,h=Cn(a.shape,l,c,1,u,d),p=!0,f=new Xa(h,"max",p),m=e.runWebGLProgram(f,[a],a.dtype),g=new tB(h),b=e.runWebGLProgram(g,[o,m],a.dtype);return e.disposeIntermediateTensorInfo(m),b}const iB={kernelName:Wd,backendName:"webgl",kernelFunc:oB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n,t,e,s){let o=new Xa(e,"max",!1);const i=s.runWebGLProgram(o,[n],"float32");o=new Xa(e,"max",!0,!0,t);const r=s.runWebGLProgram(o,[n],"float32");return[i,r]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aB={kernelName:fg,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:o,strides:i,pad:r,includeBatchInIndex:a}=t,l=e;S(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];S(Ge(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=Cn(s.shape,o,i,c,r),[d,h]=rB(s,a,u,l);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n,t,e,s){const o=Z(t),r=Z(n.shape)/o,a=et({inputs:{x:n},attrs:{shape:[r,o]},backend:s}),l=Ko(a,"float32","mean",s),c=et({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cB={kernelName:Kl,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:o,axis:i}=t,r=e,a=s.shape.length,l=yt(i,s.shape);let c=l;const u=Jt(c,a),d=u!=null,h=r.shouldExecuteOnCPU([s]),p=[];let f=s;if(d){if(h){const y=r.texData.get(f.dataId).values,I=new Array(a);for(let k=0;k<I.length;k++)I[k]=s.shape[u[k]];const C=Bf(y,s.shape,s.dtype,u,I);f=r.makeTensorInfo(I,s.dtype);const v=r.texData.get(f.dataId);v.values=C}else f=Nu(s,u,r);p.push(f),c=ne(c.length,a)}ve("sum",c,a);const[m,g]=be(f.shape,c);let b=m;o&&(b=le(m,l));const x=lB(f,g,b,r);for(const w of p)r.disposeIntermediateTensorInfo(w);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s,a=o.shape.length,l=yt(i,o.shape);let c=l;const u=Jt(c,a);let d=o;u!=null&&(d=_e({inputs:{x:o},backend:e,attrs:{perm:u}}),c=ne(c.length,o.shape.length)),ve("min",c,a);const[h,p]=be(d.shape,c),f=Z(p),m=et({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}}),g=Ko(m,m.dtype,"min",e);let b;if(r){const x=le(h,l);b=et({inputs:{x:g},backend:e,attrs:{shape:x}})}else b=et({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(d),b}const dB={kernelName:Bl,backendName:"webgl",kernelFunc:uB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hB=Hf+`
  return min(a, b);
`,pB=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Va+`
  return result;
`,fB=Se({opSnippet:hB,packedOpSnippet:pB,cpuKernelImpl:VA}),mB={kernelName:Er,backendName:"webgl",kernelFunc:fB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gB{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((u,d)=>u[0]+t[d]+u[1]);const o=t.length,i=Xt(o),r=e.map(u=>u[0]).join(","),a=e.map((u,d)=>u[0]+t[d]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),c=s==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${r};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${r});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bB{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,m)=>f[0]+t[m]+f[1]);const o=t.length,i=Xt(o),r=e.map(f=>f[0]).join(","),a=e.map((f,m)=>f[0]+t[m]).join(","),l=Ve("rc",o),c=Ve("source",o),u=`${l[o-1]} < ${this.outputShape[o-1]}`,d=o===1?"source":`vec2(${c.slice(-2).join()})`,h=s==="reflect"?0:1;let p="";if(o===1){const f=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${l[o-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
      `}else{const f=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${l[o-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
        rc = outputLoc;
        ${l[o-2]} += 1;
        if(${l[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${d});
          ${l[o-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${r});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xB={kernelName:Hl,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:o,mode:i}=e,r=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bB(s.shape,o,i):new gB(s.shape,o,i);return t.runWebGLProgram(r,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yB=`if (b == 0.0) return NAN;
  return mod(a, b);`,wB=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Va+`
  return result;
`,IB=Se({opSnippet:yB,packedOpSnippet:wB}),CB={kernelName:Lr,backendName:"webgl",kernelFunc:IB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vB{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _I=Se({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),kB={kernelName:gr,backendName:"webgl",kernelFunc:_I};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI="return a - b;",XI=Se({opSnippet:AI,packedOpSnippet:AI,supportsComplex:!0,cpuKernelImpl:oX}),SB={kernelName:Ur,backendName:"webgl",kernelFunc:XI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OI(n){const{inputs:t,backend:e,attrs:s}=n,{logits:o}=t,{dim:i}=s,r=yt([i],o.shape),a=VI({inputs:{x:o},backend:e,attrs:{reductionIndices:r,keepDims:!1}}),l=le(a.shape,r),c=et({inputs:{x:a},backend:e,attrs:{shape:l}}),u=XI({inputs:{a:o,b:c},backend:e}),d=LI({inputs:{x:u},backend:e}),h=Ru({inputs:{x:d},backend:e,attrs:{axis:r,keepDims:!1}}),p=et({inputs:{x:h},backend:e,attrs:{shape:l}}),f=_I({inputs:{a:d,b:p},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),f}const TB={kernelName:dc,backendName:"webgl",kernelFunc:OI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n){const{inputs:t,backend:e,attrs:s}=n,{logits:o}=t,{numSamples:i,seed:r,normalized:a}=s,l=a?o:OI({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),c=l.shape[0],u=l.shape[1],d=new vB(c,u,i),h=[[r]],p=e.runWebGLProgram(d,[l],"int32",h);return a||e.disposeIntermediateTensorInfo(l),p}const RB={kernelName:mg,backendName:"webgl",kernelFunc:NB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $B=Gn+`
  return -x;
`,GB=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function EB(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const i=e.texData.get(s.dataId),[r,a]=AA(i.values,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,r)}let o;return A().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Js(s.shape,GB):o=new rs(s.shape,$B),e.runWebGLProgram(o,[s],s.dtype)}const LB={kernelName:Ul,backendName:"webgl",kernelFunc:EB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DB=cp;function MB(n){sn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:i}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l}=s,c=e.readSync(o.dataId),u=e.readSync(i.dataId),{selectedIndices:d}=DB(c,u,r,a,l);return e.makeTensorInfo([d.length],"int32",new Int32Array(d))}const zB={kernelName:_d,backendName:"webgl",kernelFunc:MB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB=up;function WB(n){sn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:i}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s,u=e.readSync(o.dataId),d=e.readSync(i.dataId),{selectedIndices:h,validOutputs:p}=FB(u,d,r,a,l,c);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const VB={kernelName:Ad,backendName:"webgl",kernelFunc:WB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _B=dp;function AB(n){sn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:i}=t,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,u=e.readSync(o.dataId),d=e.readSync(i.dataId),h=r,p=a,f=l,m=c,{selectedIndices:g,selectedScores:b}=_B(u,d,h,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const XB={kernelName:Xd,backendName:"webgl",kernelFunc:AB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OB{constructor(t,e,s,o){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PB={kernelName:Jl,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:o}=t,{dtype:i,depth:r,onValue:a,offValue:l}=s,c=Z(o.shape),u=new OB(c,r,a,l),d=et({inputs:{x:o},backend:e,attrs:{shape:[c]}}),h=e.runWebGLProgram(u,[d],i);e.disposeIntermediateTensorInfo(d);const p=[...o.shape,r],f=et({inputs:{x:h},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(h),f}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mu(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const o=Oa({inputs:{input:s},backend:e}),i=Mu({inputs:{x:o},backend:e}),r=Lu({inputs:{input:s},backend:e}),a=Mu({inputs:{x:r},backend:e}),l=js({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),l}else return Ka({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const ZB={kernelName:fc,backendName:"webgl",kernelFunc:Mu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PI(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const o=Oa({inputs:{input:s},backend:e}),i=PI({inputs:{x:o},backend:e}),r=Lu({inputs:{input:s},backend:e}),a=Mu({inputs:{x:r},backend:e}),l=js({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(a),l}else return Ka({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const KB={kernelName:Ql,backendName:"webgl",kernelFunc:PI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n){const{inputs:t,backend:e,attrs:s}=n,{axis:o}=s;if(t.length===1)return jf({inputs:{input:t[0]},backend:e,attrs:{dim:o}});const i=t[0].shape,r=t[0].dtype;t.forEach(u=>{nd(i,u.shape,"All tensors passed to stack must have matching shapes"),S(r===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const d=jf({inputs:{input:u},backend:e,attrs:{dim:o}});return a.push(d),d}),c=II({inputs:l,backend:e,attrs:{axis:o}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const HB={kernelName:jl,backendName:"webgl",kernelFunc:BB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UB{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);const o=t.length,i=Xt(o),r=e.map(c=>c[0]).join(","),a=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${r};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${r});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YB{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((m,g)=>m[0]+t[g]+m[1]);const o=t.length,i=Xt(o),r=e.map(m=>m[0]).join(","),a=e.map((m,g)=>m[0]+t[g]).join(","),l=Ve("rc",o),c=Ve("source",o),u=`${l[o-1]} < ${this.outputShape[o-1]}`,d=o===1?"source":`vec2(${c.slice(-2).join()})`,h=[`${i} rc = outputLoc;`,`${l[o-1]} += 1;
       if(${u}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${l[o-2]} += 1;
       if(${l[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${l[o-1]} += 1;
         if(${u}) {`],p=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=o===1?2:4;m<g;m++)f+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${d});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${r});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZI=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{paddings:i,constantValue:r}=s;if(Z(o.shape)===0){const c=i.map((u,d)=>u[0]+o.shape[d]+u[1]);return Ka({backend:e,attrs:{shape:c,value:r,dtype:o.dtype}})}const a=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YB(o.shape,i,r):new UB(o.shape,i,r),l=[[r]];return e.runWebGLProgram(a,[o],o.dtype,l)},QB={kernelName:ql,backendName:"webgl",kernelFunc:ZI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JB=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,jB=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Va+`
  return result;
`,qB=Se({opSnippet:JB,packedOpSnippet:jB}),tH={kernelName:Mr,backendName:"webgl",kernelFunc:qB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:i,keepDims:r}=s,a=o.shape.length,l=[],c=yt(i,o.shape);let u=c;const d=Jt(u,a);let h=o;d!=null&&(h=_e({inputs:{x:o},backend:e,attrs:{perm:d}}),u=ne(u.length,a),l.push(h)),ve("prod",u,a);let p;if(e.shouldExecuteOnCPU([h])){const f=e.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:b}=OA(h.shape,h.dtype,f,u);p=e.makeTensorInfo(g,b,m)}else{const[f,m]=be(h.shape,u),g=Z(m),b=et({inputs:{x:h},backend:e,attrs:{shape:[-1,g]}}),x=uh(o.dtype),w=Ko(b,x,"prod",e);p=et({inputs:{x:w},backend:e,attrs:{shape:f}}),l.push(b),l.push(w)}if(r){l.push(p);const f=le(p.shape,c);p=et({inputs:{x:p},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const nH={kernelName:ec,backendName:"webgl",kernelFunc:eH};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:i,indices:r}=t,{outputRaggedRank:a}=s,l=o.map(b=>e.readSync(b.dataId)),c=o.map(b=>b.shape),u=e.readSync(i.dataId),d=e.readSync(r.dataId),[h,p,f]=PA(l,c,u,i.shape,i.dtype,d,r.shape,a),m=h.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,i.dtype,p);return m.concat([g])}const oH={kernelName:gg,backendName:"webgl",kernelFunc:sH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(n){const{inputs:t,backend:e}=n,{starts:s,limits:o,deltas:i}=t,r=e.readSync(s.dataId),a=e.readSync(o.dataId),l=e.readSync(i.dataId),[c,u]=ZA(r,s.shape,s.dtype,a,o.shape,l,i.shape),d=e.makeTensorInfo([c.length],"int32",c),h=e.makeTensorInfo([u.length],s.dtype,u);return[d,h]}const rH={kernelName:bg,backendName:"webgl",kernelFunc:iH};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(n){const{inputs:t,backend:e,attrs:s}=n,{shape:o,values:i,defaultValue:r,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=s,c=e.readSync(o.dataId),u=e.readSync(i.dataId),d=e.readSync(r.dataId),h=a.map(g=>e.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=KA(c,o.shape,u,i.shape,i.dtype,d,r.shape,h,p,l);return e.makeTensorInfo(f,i.dtype,m)}const lH={kernelName:xg,backendName:"webgl",kernelFunc:aH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KI=n=>{const{backend:t,attrs:e}=n,{start:s,stop:o,step:i,dtype:r}=e,a=BA(s,o,i,r);return t.makeTensorInfo([a.length],r,a)},cH={kernelName:Od,backendName:"webgl",kernelFunc:KI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH=Tt({opSnippet:"return 1.0 / x;"}),dH={kernelName:zr,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH=Gn+`
  return (x < 0.0) ? 0.0 : x;
`,pH=Tt({opSnippet:hH,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),fH={kernelName:Fr,backendName:"webgl",kernelFunc:pH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH=Gn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,gH=Tt({opSnippet:mH,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),bH={kernelName:Wr,backendName:"webgl",kernelFunc:gH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xH{constructor(t,e,s,o,i){this.variableNames=["A"],this.outputShape=[];const[r,a,l,c]=t;this.outputShape=[r,e,s,c];const u=[o&&e>1?a-1:a,o&&s>1?l-1:l],d=[o&&e>1?e-1:e,o&&s>1?s-1:s];let h;i?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yH{constructor(t,e,s,o,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,a,l,c]=t;this.outputShape=[r,e,s,c];const u=[o&&e>1?a-1:a,o&&s>1?l-1:l],d=[o&&e>1?e-1:e,o&&s>1?s-1:s];let h;i?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n){const{inputs:t,backend:e,attrs:s}=n,{images:o}=t,{alignCorners:i,halfPixelCenters:r,size:a}=s,[l,c]=a,u=A().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yH(o.shape,l,c,i,r):new xH(o.shape,l,c,i,r);return e.runWebGLProgram(u,[o],"float32")}const IH={kernelName:oc,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CH{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,o,i]=e,[,r,a]=t,l=[s&&r>1?o-1:o,s&&a>1?i-1:i],c=[s&&r>1?r-1:r,s&&a>1?a-1:a],u=l[0]/c[0],d=l[1]/c[1],h=1/u,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${r}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(n){const{inputs:t,backend:e,attrs:s}=n,{images:o,dy:i}=t,{alignCorners:r}=s,a=new CH(i.shape,o.shape,r);return e.runWebGLProgram(a,[i],i.dtype)}const kH={kernelName:Kd,backendName:"webgl",kernelFunc:vH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SH{constructor(t,e,s,o,i){this.variableNames=["A"],this.outputShape=[];const[r,a,l,c]=t;this.outputShape=[r,e,s,c];const u=[o&&e>1?a-1:a,o&&s>1?l-1:l],d=[o&&e>1?e-1:e,o&&s>1?s-1:s],h=o?"0.5":"0.0";let p;i?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TH{constructor(t,e,s,o,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,a,l,c]=t;this.outputShape=[r,e,s,c];const u=[o&&e>1?a-1:a,o&&s>1?l-1:l],d=[o&&e>1?e-1:e,o&&s>1?s-1:s],h=o?"0.5":"0.0";let p;i?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(n){const{inputs:t,backend:e,attrs:s}=n,{images:o}=t,{alignCorners:i,halfPixelCenters:r,size:a}=s,[l,c]=a,u=A().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TH(o.shape,l,c,i,r):new SH(o.shape,l,c,i,r);return e.runWebGLProgram(u,[o],o.dtype)}const RH={kernelName:sc,backendName:"webgl",kernelFunc:NH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $H{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,o,i]=e,[,r,a]=t,l=[s&&r>1?o-1:o,s&&a>1?i-1:i],c=[s&&r>1?r-1:r,s&&a>1?a-1:a],u=l[0]/c[0],d=l[1]/c[1],h=1/u,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${r}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(n){const{inputs:t,backend:e,attrs:s}=n,{images:o,dy:i}=t,{alignCorners:r}=s,a=new $H(i.shape,o.shape,r);return e.runWebGLProgram(a,[i],i.dtype)}const EH={kernelName:Zd,backendName:"webgl",kernelFunc:GH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LH{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const o=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,i=t.map((a,l)=>o(l)).join(","),r=Xt(s);this.userCode=`
      void main() {
        ${r} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DH{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const o=Ve("rc",s),i=`${o[s-1]} + 1 < ${this.outputShape[s-1]}`,r=`${o[s-2]} + 1 < ${this.outputShape[s-2]}`,a=Xt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(o.slice())};
          if(${i}){
            result.g = ${c(o.slice())};
          }
          if(${r}) {
            result.b = ${u(o.slice())};
            if(${i}) {
              result.a = ${d(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return h(f)}function c(f){return f[s-1]="("+f[s-1]+" + 1)",h(f)}function u(f){return f[s-2]="("+f[s-2]+" + 1)",h(f)}function d(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",h(f)}function h(f){const m=t.map((x,w)=>p(w,f)),g=m.join(","),b=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function p(f,m){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{dims:i}=s,r=o.shape.length,a=yt(i,o.shape);if(r===0)return en({inputs:{x:o},backend:e});const l=A().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new DH(o.shape,a):new LH(o.shape,a);return e.runWebGLProgram(l,[o],o.dtype)}const zH={kernelName:ic,backendName:"webgl",kernelFunc:MH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FH{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],o=t[2];this.outputShape=t;let i="";typeof e=="number"?i=`float outputValue = ${e.toFixed(2)};`:i=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH={kernelName:jd,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:o,fillValue:i,center:r}=t,a=e,l=new FH(s.shape,i),[c,u]=Ip(r,s.shape[1],s.shape[2]),d=[[c,u,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(l,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VH=Tt({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),_H={kernelName:Vr,backendName:"webgl",kernelFunc:VH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AH=Tt({opSnippet:"return inversesqrt(x);",cpuKernelImpl:HA}),XH={kernelName:_r,backendName:"webgl",kernelFunc:AH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BI{constructor(t,e,s,o,i,r,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const l=Xt(i.length),c=Xt(r.length);let u="";s===1?u="i":s===2&&(u="i, j");const d=`getIndices(${u})`;let h="";o===1?h="i":o===2&&(h="i, coords[1]");const p=`getUpdates(${h})`,f=e>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OH(n){const{inputs:t,backend:e,attrs:s}=n,{indices:o,updates:i}=t,{shape:r}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=oa(i,o,r),h=[d/c,c];if(d===0)return e.makeTensorInfo(r,o.dtype);const p=et({inputs:{x:o},backend:e,attrs:{shape:[l,a]}}),f=et({inputs:{x:i},backend:e,attrs:{shape:[l,c]}}),m=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new BI(l,a,p.shape.length,f.shape.length,u,h),b=e.runWebGLProgram(g,[f,p,m],f.dtype),x=et({inputs:{x:b},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(m),x}const PH={kernelName:yg,backendName:"webgl",kernelFunc:OH};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZH{constructor(t,e,s,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const i="while (left < right) {",r=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=A().getNumber("WEBGL_VERSION")===2?i:r,l=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KH(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:o,values:i}=t,{side:r}=s,a=new ZH(o.shape[0],o.shape[1],i.shape[1],r),l=[[o.shape[1]]];return e.runWebGLProgram(a,[o,i],"int32",l)}const BH={kernelName:wg,backendName:"webgl",kernelFunc:KH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HH{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let o,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",o="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${a[u]}`),u<t&&l.push(`${a[u]}`);o=l.join(),i=c.join()}const r=Xt(s);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(n){const{inputs:t,backend:e}=n,{condition:s,t:o,e:i}=t,r=new HH(s.shape.length,o.shape,o.shape.length);return e.runWebGLProgram(r,[s,o,i],Qe(o.dtype,i.dtype))}const YH={kernelName:rc,backendName:"webgl",kernelFunc:UH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QH=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${_c};
  float scale = ${Ac};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,JH=Tt({opSnippet:QH}),jH={kernelName:Ar,backendName:"webgl",kernelFunc:JH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH=Oi+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,t9=Tt({opSnippet:qH,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:YA}),e9={kernelName:Zr,backendName:"webgl",kernelFunc:t9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9=Tt({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),s9={kernelName:Pr,backendName:"webgl",kernelFunc:n9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9=Oi+`
  return sin(x);
`,i9=Tt({opSnippet:o9}),r9={kernelName:Xr,backendName:"webgl",kernelFunc:i9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a9=Tt({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),l9={kernelName:Or,backendName:"webgl",kernelFunc:a9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9=Tt({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),u9={kernelName:Kr,backendName:"webgl",kernelFunc:c9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d9={kernelName:cc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockShape:i,paddings:r}=s;S(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((b,x)=>b*x),l=[[0,0]];l.push(...r);for(let b=1+i.length;b<o.shape.length;++b)l.push([0,0]);const c=[],u=ZI({inputs:{x:o},backend:e,attrs:{paddings:l,constantValue:0}}),d=ha(u.shape,i,a,!1),h=pa(d.length,i.length,!1),p=fa(u.shape,i,a,!1),f=et({inputs:{x:u},backend:e,attrs:{shape:d}}),m=_e({inputs:{x:f},backend:e,attrs:{perm:h}}),g=et({inputs:{x:m},backend:e,attrs:{shape:p}});return c.push(u),c.push(f),c.push(m),c.forEach(b=>e.disposeIntermediateTensorInfo(b)),g}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(n){const{inputs:t,backend:e}=n,{indices:s,values:o,denseShape:i,defaultValue:r}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${r.shape}`);const a=e.readSync(s.dataId),l=e.readSync(o.dataId),c=e.readSync(i.dataId),u=e.readSync(r.dataId)[0],[d,h,p,f,m]=JA(a,s.shape,s.dtype,l,o.dtype,c,u);return[e.makeTensorInfo(h,s.dtype,d),e.makeTensorInfo([h[0]],o.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const p9={kernelName:Ig,backendName:"webgl",kernelFunc:h9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f9(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:o,newShape:i}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const r=Array.from(e.readSync(o.dataId)),a=e.readSync(s.dataId),l=Array.from(e.readSync(i.dataId)),[c,u,d]=jA(a,s.shape,s.dtype,r,l);return[e.makeTensorInfo(u,s.dtype,c),e.makeTensorInfo([d.length],i.dtype,new Int32Array(d))]}const m9={kernelName:Cg,backendName:"webgl",kernelFunc:f9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g9(n){const{inputs:t,backend:e}=n,{data:s,indices:o,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const r=e.readSync(s.dataId),a=e.readSync(o.dataId),l=e.readSync(i.dataId),[c,u]=Qw(r,s.shape,s.dtype,a,l,!0);return e.makeTensorInfo(u,s.dtype,c)}const b9={kernelName:vg,backendName:"webgl",kernelFunc:g9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(n){const{inputs:t,backend:e}=n,{data:s,indices:o,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const r=e.readSync(s.dataId),a=e.readSync(o.dataId),l=e.readSync(i.dataId),[c,u]=Qw(r,s.shape,s.dtype,a,l);return e.makeTensorInfo(u,s.dtype,c)}const y9={kernelName:kg,backendName:"webgl",kernelFunc:x9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w9(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:o,sparseValues:i,defaultValue:r}=t,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:h}=oa(i,o,a),p=!1;if(i.dtype==="string"){const b=e.bufferSync(o),x=e.bufferSync(i),w=Ds(e.readSync(r.dataId)[0]),y=UA(b,x,a,h,u,c,l,d,w,p);return e.makeTensorInfo(a,y.dtype,y.values)}const f=new BI(c,l,o.shape.length,i.shape.length,d,[h,1],p),m=e.runWebGLProgram(f,[i,o,r],i.dtype),g=et({inputs:{x:m},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(m),g}const I9={kernelName:Sg,backendName:"webgl",kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{numOrSizeSplits:i,axis:r}=s,a=yt(r,o.shape)[0],l=Wp(o,i,a),c=o.shape.length,u=new Array(c).fill(0),d=o.shape.slice();return l.map(h=>{const p=[...d];p[a]=h;const f=Pi({inputs:{x:o},backend:e,attrs:{begin:u,size:p}});return u[a]+=h,f})}const v9={kernelName:uc,backendName:"webgl",kernelFunc:C9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI="return sqrt(x);",k9=Tt({opSnippet:HI,packedOpSnippet:HI,cpuKernelImpl:qA}),S9={kernelName:Br,backendName:"webgl",kernelFunc:k9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T9=Tt({opSnippet:"return x * x;"}),N9={kernelName:Bd,backendName:"webgl",kernelFunc:T9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UI="return (a - b) * (a - b);",R9=Se({opSnippet:UI,packedOpSnippet:UI}),$9={kernelName:Hr,backendName:"webgl",kernelFunc:R9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9({inputs:n,attrs:t,backend:e}){const{x:s}=n,o=Gn+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new rs(s.shape,o);return e.runWebGLProgram(i,[s],s.dtype)}const E9={kernelName:jr,backendName:"webgl",kernelFunc:G9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L9{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const o=s.length,i=Xt(s.length),r=Xt(s.length);let a="";if(o===1)a="coords * strides + begin";else{let l=0;a=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${t});
      ${i} strides = ${i}(${e});

      void main() {
        ${r} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D9(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{begin:i,end:r,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:w,strides:y}=kh(o.shape,i,r,a,l,c,u,d,h);let I;if(m)I=et({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){S(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const v=Ih(x,w,y),k=Pi({inputs:{x:o},backend:e,attrs:{begin:x,size:v}});I=et({inputs:{x:k},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(k)}else if(e.shouldExecuteOnCPU([o])){const k=e.readSync(o.dataId),T=wt(o.shape,o.dtype,k),N=tX(p,T,y,x);I=e.makeTensorInfo(f,o.dtype,N.values)}else{const k=new L9(x,y,p);I=e.runWebGLProgram(k,[o],o.dtype)}const C=et({inputs:{x:I},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(I),C}const M9={kernelName:Hd,backendName:"webgl",kernelFunc:D9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(n){const{inputs:t,backend:e,attrs:s}=n,{separator:o,nGramWidths:i,leftPad:r,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,h=e.readSync(u.dataId),p=e.readSync(d.dataId),[f,m]=eX(h,p,o,i,r,a,l,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(d.shape,"int32",m)]}const F9={kernelName:Tg,backendName:"webgl",kernelFunc:z9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W9(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:o}=s,{input:i,delimiter:r}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(r.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${r.shape}`);const a=e.readSync(i.dataId),l=e.readSync(r.dataId)[0],[c,u,d]=nX(a,l,o),h=u.length;return[e.makeTensorInfo([h,2],"int32",c),e.makeTensorInfo([h],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(d))]}const V9={kernelName:Ng,backendName:"webgl",kernelFunc:W9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _9(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:o}=s,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const r=e.readSync(i.dataId),a=sX(r,o);return e.makeTensorInfo(i.shape,"int32",a)}const A9={kernelName:Rg,backendName:"webgl",kernelFunc:_9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X9=Tt({opSnippet:"return tan(x);"}),O9={kernelName:Yr,backendName:"webgl",kernelFunc:X9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P9=Tt({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),Z9={kernelName:Qr,backendName:"webgl",kernelFunc:P9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K9{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let r=0;r<s.length;r++)s[r]=t[r]*e[r];this.outputShape=s,this.rank=s.length;const o=Xt(this.rank),i=B9(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function B9(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let o=0;o<n.length;o++)s.push(`imod(${e[o]}, ${n[o]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{reps:i}=s;if(o.dtype==="string"||o.shape.length>5){const l=e.readSync(o.dataId),c=o.dtype==="string"?l.map(h=>Ds(h)):l,u=wt(o.shape,o.dtype,c),d=iX(u,i);return e.makeTensorInfo(d.shape,d.dtype,d.values)}const r=new K9(o.shape,i);return e.runWebGLProgram(r,[o],o.dtype)}const H9={kernelName:Jr,backendName:"webgl",kernelFunc:YI};class U9{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Y9{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bo(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function QI(n){let t=1;for(;t<n;)t*=2;return t}function Q9(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{k:i,sorted:r}=s,a=A().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=A().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=o.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([o])||u<a||i>l){const N=e.readSync(o.dataId),[$,F]=rX(N,c,o.dtype,i,r);return[e.makeTensorInfo($.shape,$.dtype,$.values),e.makeTensorInfo(F.shape,F.dtype,F.values)]}if(i===0)return c[c.length-1]=0,[e.makeTensorInfo(c,o.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[o,Ka({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const d=e.texData.get(o.dataId),h=d!==null&&d.isPacked,p=h?e.unpackTensor(o):o,m=Z(c)/u,g=et({inputs:{x:p},attrs:{shape:[m,u]},backend:e});h&&Bo(e,p);const b=QI(i),x=QI(u);let w=null;const y=()=>w===null?[g,g]:[g,w],I=(N,$,F)=>{const W=y(),V=new U9(F),X=[[u],[w===null?1:0],[Number.NEGATIVE_INFINITY],[N],[$]],K=w;w=e.runWebGLProgram(V,W,"int32",X),Bo(e,K)};for(let N=1;N<b;N*=2){const $=N*2;for(let F=N;F>=1;F/=2)I($,F,[m,x])}for(let N=x;N>b;N/=2){const $=y(),F=new Y9([m,N/2]),V=[[u],[w===null?1:0],[b]],_=w;w=e.runWebGLProgram(F,$,"int32",V),Bo(e,_);const X=b/2,K=X*2;for(let P=X;P>=1;P/=2)I(K,P,w.shape)}let C=w;w=Pi({inputs:{x:w},backend:e,attrs:{begin:0,size:[m,i]}}),Bo(e,C);let v=WI({inputs:{x:g,indices:w},backend:e,attrs:{axis:1,batchDims:1}});Bo(e,g);const k=c.slice(0,-1);k.push(i),C=w,w=et({inputs:{x:w},attrs:{shape:k},backend:e}),Bo(e,C);const T=v;return v=et({inputs:{x:v},attrs:{shape:k},backend:e}),Bo(e,T),[v,w]}const J9={kernelName:Ud,backendName:"webgl",kernelFunc:Q9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j9{constructor(t,e,s,o,i,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const a=s==="nearest"?1:2;let l;switch(o){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q9(n){const{inputs:t,backend:e,attrs:s}=n,{image:o,transforms:i}=t,{interpolation:r,fillMode:a,fillValue:l,outputShape:c}=s,[u,d,h,p]=o.shape,[f,m]=c??[d,h],g=[u,f,m,p],b=new j9(d,h,r,a,l,g);return e.runWebGLProgram(b,[o,i],"float32")}const tU={kernelName:Yd,backendName:"webgl",kernelFunc:q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(n){const{inputs:t,attrs:e,backend:s}=n,{axis:o}=e,{x:i}=t;Fa(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const r=s.readSync(i.dataId),{outputValues:a,outputShape:l,indices:c}=aX(r,o,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const nU={kernelName:Qd,backendName:"webgl",kernelFunc:eU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n){const{inputs:t,backend:e,attrs:s}=n,{value:o}=t;let{axis:i}=s;i<0&&(i+=o.shape.length);const r=o,a=r.shape.length,l=o.shape[i],c=new Array(a-1);let u=0;for(let m=0;m<a;m++)m!==i&&(c[u++]=r.shape[m]);const d=[],h=new Array(a).fill(0),p=r.shape.slice();p[i]=1;const f=new Array(l);for(let m=0;m<f.length;m++){h[i]=m;const g=Pi({inputs:{x:r},backend:e,attrs:{begin:h,size:p}}),b=et({inputs:{x:g},backend:e,attrs:{shape:c}});f[m]=b,d.push(g)}return d.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const oU={kernelName:hc,backendName:"webgl",kernelFunc:sU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iU{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,o=t.batchSize,i=t.inSize,r=t.numSegments,a=r*Math.ceil(i/s);this.outputShape=[o,a];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";i%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${r})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${r})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,segmentIds:i}=t,{numSegments:r}=s,a=o.shape.length,l=[];let c=0;const u=Jt([c],a);let d=o;u!=null&&(d=_e({inputs:{x:o},backend:e,attrs:{perm:u}}),l.push(d),c=ne(1,a)[0]);const h=$b(d.shape,c,r),p=Z([d.shape[c]]),f=et({inputs:{x:d},backend:e,attrs:{shape:[-1,p]}});l.push(f);const m=uh(o.dtype),g=(y,I,C,v,k)=>{const T=y.shape[0],N=y.shape[1],$=Rb(N,k),F={windowSize:$,inSize:N,batchSize:T,numSegments:k},W=new iU(F,I),V=e.compileAndRun(W,[y,C],v);if(l.push(V),V.shape[1]===k)return V;const _=KI({backend:e,attrs:{start:0,stop:k,step:1,dtype:"float32"}}),X=YI({inputs:{x:_},backend:e,attrs:{reps:[N/$]}});return l.push(_),l.push(X),g(V,I,X,v,k)},b=g(f,"unsortedSegmentSum",i,m,r),x=et({inputs:{x:b},backend:e,attrs:{shape:h}});let w=x;if(u!=null){l.push(x);const y=Ws(u);w=_e({inputs:{x:w},backend:e,attrs:{perm:y}})}return l.forEach(y=>e.disposeIntermediateTensorInfo(y)),w}const aU={kernelName:pc,backendName:"webgl",kernelFunc:rU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU=[jX,tO,sO,rO,lO,dO,pO,mO,yO,IO,kO,NO,GO,MO,WO,_O,XO,KO,HO,YO,jO,oP,rP,lP,pP,mP,yP,zX,CP,NP,EP,WP,_P,XP,PP,KP,UP,QP,jP,tZ,nZ,oZ,aZ,cZ,pZ,mZ,xZ,IZ,vZ,SZ,RZ,GZ,DZ,zZ,FZ,VZ,AZ,OZ,ZZ,BZ,UZ,JZ,tK,nK,iK,lK,uK,hK,MX,fK,SP,gK,xK,wK,WX,CK,kK,TK,$K,LK,MK,FK,VK,XK,PK,KK,YK,JK,qK,sB,iB,aB,cB,dB,mB,xB,CB,RB,AX,LB,zB,VB,XB,cP,PB,KB,HB,QB,tH,_X,nH,oH,rH,lH,cH,uP,kB,dH,fH,bH,OX,IH,kH,RH,EH,zH,WH,_H,XH,PH,BH,YH,jH,e9,s9,r9,l9,sP,TB,u9,d9,p9,m9,b9,y9,I9,v9,S9,N9,$9,E9,M9,F9,V9,A9,SB,YX,O9,Z9,H9,J9,tU,QX,nU,oU,aU,ZB];for(const n of lU)on(n);/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */const cU=4,JI=0,jI=1,uU=2;function Ki(n){let t=n.length;for(;--t>=0;)n[t]=0}const dU=0,qI=1,hU=2,pU=3,fU=258,tm=29,Ba=256,Ha=Ba+1+tm,Bi=30,em=19,t2=2*Ha+1,Ho=15,nm=16,mU=7,sm=256,e2=16,n2=17,s2=18,om=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),zu=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),gU=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),o2=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),bU=512,ks=new Array((Ha+2)*2);Ki(ks);const Ua=new Array(Bi*2);Ki(Ua);const Ya=new Array(bU);Ki(Ya);const Qa=new Array(fU-pU+1);Ki(Qa);const im=new Array(tm);Ki(im);const Fu=new Array(Bi);Ki(Fu);function rm(n,t,e,s,o){this.static_tree=n,this.extra_bits=t,this.extra_base=e,this.elems=s,this.max_length=o,this.has_stree=n&&n.length}let i2,r2,a2;function am(n,t){this.dyn_tree=n,this.max_code=0,this.stat_desc=t}const l2=n=>n<256?Ya[n]:Ya[256+(n>>>7)],Ja=(n,t)=>{n.pending_buf[n.pending++]=t&255,n.pending_buf[n.pending++]=t>>>8&255},nn=(n,t,e)=>{n.bi_valid>nm-e?(n.bi_buf|=t<<n.bi_valid&65535,Ja(n,n.bi_buf),n.bi_buf=t>>nm-n.bi_valid,n.bi_valid+=e-nm):(n.bi_buf|=t<<n.bi_valid&65535,n.bi_valid+=e)},as=(n,t,e)=>{nn(n,e[t*2],e[t*2+1])},c2=(n,t)=>{let e=0;do e|=n&1,n>>>=1,e<<=1;while(--t>0);return e>>>1},xU=n=>{n.bi_valid===16?(Ja(n,n.bi_buf),n.bi_buf=0,n.bi_valid=0):n.bi_valid>=8&&(n.pending_buf[n.pending++]=n.bi_buf&255,n.bi_buf>>=8,n.bi_valid-=8)},yU=(n,t)=>{const e=t.dyn_tree,s=t.max_code,o=t.stat_desc.static_tree,i=t.stat_desc.has_stree,r=t.stat_desc.extra_bits,a=t.stat_desc.extra_base,l=t.stat_desc.max_length;let c,u,d,h,p,f,m=0;for(h=0;h<=Ho;h++)n.bl_count[h]=0;for(e[n.heap[n.heap_max]*2+1]=0,c=n.heap_max+1;c<t2;c++)u=n.heap[c],h=e[e[u*2+1]*2+1]+1,h>l&&(h=l,m++),e[u*2+1]=h,!(u>s)&&(n.bl_count[h]++,p=0,u>=a&&(p=r[u-a]),f=e[u*2],n.opt_len+=f*(h+p),i&&(n.static_len+=f*(o[u*2+1]+p)));if(m!==0){do{for(h=l-1;n.bl_count[h]===0;)h--;n.bl_count[h]--,n.bl_count[h+1]+=2,n.bl_count[l]--,m-=2}while(m>0);for(h=l;h!==0;h--)for(u=n.bl_count[h];u!==0;)d=n.heap[--c],!(d>s)&&(e[d*2+1]!==h&&(n.opt_len+=(h-e[d*2+1])*e[d*2],e[d*2+1]=h),u--)}},u2=(n,t,e)=>{const s=new Array(Ho+1);let o=0,i,r;for(i=1;i<=Ho;i++)o=o+e[i-1]<<1,s[i]=o;for(r=0;r<=t;r++){let a=n[r*2+1];a!==0&&(n[r*2]=c2(s[a]++,a))}},wU=()=>{let n,t,e,s,o;const i=new Array(Ho+1);for(e=0,s=0;s<tm-1;s++)for(im[s]=e,n=0;n<1<<om[s];n++)Qa[e++]=s;for(Qa[e-1]=s,o=0,s=0;s<16;s++)for(Fu[s]=o,n=0;n<1<<zu[s];n++)Ya[o++]=s;for(o>>=7;s<Bi;s++)for(Fu[s]=o<<7,n=0;n<1<<zu[s]-7;n++)Ya[256+o++]=s;for(t=0;t<=Ho;t++)i[t]=0;for(n=0;n<=143;)ks[n*2+1]=8,n++,i[8]++;for(;n<=255;)ks[n*2+1]=9,n++,i[9]++;for(;n<=279;)ks[n*2+1]=7,n++,i[7]++;for(;n<=287;)ks[n*2+1]=8,n++,i[8]++;for(u2(ks,Ha+1,i),n=0;n<Bi;n++)Ua[n*2+1]=5,Ua[n*2]=c2(n,5);i2=new rm(ks,om,Ba+1,Ha,Ho),r2=new rm(Ua,zu,0,Bi,Ho),a2=new rm(new Array(0),gU,0,em,mU)},d2=n=>{let t;for(t=0;t<Ha;t++)n.dyn_ltree[t*2]=0;for(t=0;t<Bi;t++)n.dyn_dtree[t*2]=0;for(t=0;t<em;t++)n.bl_tree[t*2]=0;n.dyn_ltree[sm*2]=1,n.opt_len=n.static_len=0,n.sym_next=n.matches=0},h2=n=>{n.bi_valid>8?Ja(n,n.bi_buf):n.bi_valid>0&&(n.pending_buf[n.pending++]=n.bi_buf),n.bi_buf=0,n.bi_valid=0},p2=(n,t,e,s)=>{const o=t*2,i=e*2;return n[o]<n[i]||n[o]===n[i]&&s[t]<=s[e]},lm=(n,t,e)=>{const s=n.heap[e];let o=e<<1;for(;o<=n.heap_len&&(o<n.heap_len&&p2(t,n.heap[o+1],n.heap[o],n.depth)&&o++,!p2(t,s,n.heap[o],n.depth));)n.heap[e]=n.heap[o],e=o,o<<=1;n.heap[e]=s},f2=(n,t,e)=>{let s,o,i=0,r,a;if(n.sym_next!==0)do s=n.pending_buf[n.sym_buf+i++]&255,s+=(n.pending_buf[n.sym_buf+i++]&255)<<8,o=n.pending_buf[n.sym_buf+i++],s===0?as(n,o,t):(r=Qa[o],as(n,r+Ba+1,t),a=om[r],a!==0&&(o-=im[r],nn(n,o,a)),s--,r=l2(s),as(n,r,e),a=zu[r],a!==0&&(s-=Fu[r],nn(n,s,a)));while(i<n.sym_next);as(n,sm,t)},cm=(n,t)=>{const e=t.dyn_tree,s=t.stat_desc.static_tree,o=t.stat_desc.has_stree,i=t.stat_desc.elems;let r,a,l=-1,c;for(n.heap_len=0,n.heap_max=t2,r=0;r<i;r++)e[r*2]!==0?(n.heap[++n.heap_len]=l=r,n.depth[r]=0):e[r*2+1]=0;for(;n.heap_len<2;)c=n.heap[++n.heap_len]=l<2?++l:0,e[c*2]=1,n.depth[c]=0,n.opt_len--,o&&(n.static_len-=s[c*2+1]);for(t.max_code=l,r=n.heap_len>>1;r>=1;r--)lm(n,e,r);c=i;do r=n.heap[1],n.heap[1]=n.heap[n.heap_len--],lm(n,e,1),a=n.heap[1],n.heap[--n.heap_max]=r,n.heap[--n.heap_max]=a,e[c*2]=e[r*2]+e[a*2],n.depth[c]=(n.depth[r]>=n.depth[a]?n.depth[r]:n.depth[a])+1,e[r*2+1]=e[a*2+1]=c,n.heap[1]=c++,lm(n,e,1);while(n.heap_len>=2);n.heap[--n.heap_max]=n.heap[1],yU(n,t),u2(e,l,n.bl_count)},m2=(n,t,e)=>{let s,o=-1,i,r=t[0*2+1],a=0,l=7,c=4;for(r===0&&(l=138,c=3),t[(e+1)*2+1]=65535,s=0;s<=e;s++)i=r,r=t[(s+1)*2+1],!(++a<l&&i===r)&&(a<c?n.bl_tree[i*2]+=a:i!==0?(i!==o&&n.bl_tree[i*2]++,n.bl_tree[e2*2]++):a<=10?n.bl_tree[n2*2]++:n.bl_tree[s2*2]++,a=0,o=i,r===0?(l=138,c=3):i===r?(l=6,c=3):(l=7,c=4))},g2=(n,t,e)=>{let s,o=-1,i,r=t[0*2+1],a=0,l=7,c=4;for(r===0&&(l=138,c=3),s=0;s<=e;s++)if(i=r,r=t[(s+1)*2+1],!(++a<l&&i===r)){if(a<c)do as(n,i,n.bl_tree);while(--a!==0);else i!==0?(i!==o&&(as(n,i,n.bl_tree),a--),as(n,e2,n.bl_tree),nn(n,a-3,2)):a<=10?(as(n,n2,n.bl_tree),nn(n,a-3,3)):(as(n,s2,n.bl_tree),nn(n,a-11,7));a=0,o=i,r===0?(l=138,c=3):i===r?(l=6,c=3):(l=7,c=4)}},IU=n=>{let t;for(m2(n,n.dyn_ltree,n.l_desc.max_code),m2(n,n.dyn_dtree,n.d_desc.max_code),cm(n,n.bl_desc),t=em-1;t>=3&&n.bl_tree[o2[t]*2+1]===0;t--);return n.opt_len+=3*(t+1)+5+5+4,t},CU=(n,t,e,s)=>{let o;for(nn(n,t-257,5),nn(n,e-1,5),nn(n,s-4,4),o=0;o<s;o++)nn(n,n.bl_tree[o2[o]*2+1],3);g2(n,n.dyn_ltree,t-1),g2(n,n.dyn_dtree,e-1)},vU=n=>{let t=4093624447,e;for(e=0;e<=31;e++,t>>>=1)if(t&1&&n.dyn_ltree[e*2]!==0)return JI;if(n.dyn_ltree[9*2]!==0||n.dyn_ltree[10*2]!==0||n.dyn_ltree[13*2]!==0)return jI;for(e=32;e<Ba;e++)if(n.dyn_ltree[e*2]!==0)return jI;return JI};let b2=!1;const kU=n=>{b2||(wU(),b2=!0),n.l_desc=new am(n.dyn_ltree,i2),n.d_desc=new am(n.dyn_dtree,r2),n.bl_desc=new am(n.bl_tree,a2),n.bi_buf=0,n.bi_valid=0,d2(n)},x2=(n,t,e,s)=>{nn(n,(dU<<1)+(s?1:0),3),h2(n),Ja(n,e),Ja(n,~e),e&&n.pending_buf.set(n.window.subarray(t,t+e),n.pending),n.pending+=e},SU=n=>{nn(n,qI<<1,3),as(n,sm,ks),xU(n)},TU=(n,t,e,s)=>{let o,i,r=0;n.level>0?(n.strm.data_type===uU&&(n.strm.data_type=vU(n)),cm(n,n.l_desc),cm(n,n.d_desc),r=IU(n),o=n.opt_len+3+7>>>3,i=n.static_len+3+7>>>3,i<=o&&(o=i)):o=i=e+5,e+4<=o&&t!==-1?x2(n,t,e,s):n.strategy===cU||i===o?(nn(n,(qI<<1)+(s?1:0),3),f2(n,ks,Ua)):(nn(n,(hU<<1)+(s?1:0),3),CU(n,n.l_desc.max_code+1,n.d_desc.max_code+1,r+1),f2(n,n.dyn_ltree,n.dyn_dtree)),d2(n),s&&h2(n)},NU=(n,t,e)=>(n.pending_buf[n.sym_buf+n.sym_next++]=t,n.pending_buf[n.sym_buf+n.sym_next++]=t>>8,n.pending_buf[n.sym_buf+n.sym_next++]=e,t===0?n.dyn_ltree[e*2]++:(n.matches++,t--,n.dyn_ltree[(Qa[e]+Ba+1)*2]++,n.dyn_dtree[l2(t)*2]++),n.sym_next===n.sym_end);var RU=kU,$U=x2,GU=TU,EU=NU,LU=SU,DU={_tr_init:RU,_tr_stored_block:$U,_tr_flush_block:GU,_tr_tally:EU,_tr_align:LU},ja=(n,t,e,s)=>{let o=n&65535|0,i=n>>>16&65535|0,r=0;for(;e!==0;){r=e>2e3?2e3:e,e-=r;do o=o+t[s++]|0,i=i+o|0;while(--r);o%=65521,i%=65521}return o|i<<16|0};const MU=()=>{let n,t=[];for(var e=0;e<256;e++){n=e;for(var s=0;s<8;s++)n=n&1?3988292384^n>>>1:n>>>1;t[e]=n}return t},zU=new Uint32Array(MU());var Te=(n,t,e,s)=>{const o=zU,i=s+e;n^=-1;for(let r=s;r<i;r++)n=n>>>8^o[(n^t[r])&255];return n^-1},Hi={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},qa={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:FU,_tr_stored_block:um,_tr_flush_block:WU,_tr_tally:qs,_tr_align:VU}=DU,{Z_NO_FLUSH:to,Z_PARTIAL_FLUSH:_U,Z_FULL_FLUSH:AU,Z_FINISH:En,Z_BLOCK:y2,Z_OK:Ee,Z_STREAM_END:w2,Z_STREAM_ERROR:ls,Z_DATA_ERROR:XU,Z_BUF_ERROR:dm,Z_DEFAULT_COMPRESSION:OU,Z_FILTERED:PU,Z_HUFFMAN_ONLY:Wu,Z_RLE:ZU,Z_FIXED:KU,Z_DEFAULT_STRATEGY:BU,Z_UNKNOWN:HU,Z_DEFLATED:Vu}=qa,UU=9,YU=15,QU=8,JU=29,hm=256+1+JU,jU=30,qU=19,t5=2*hm+1,e5=15,Nt=3,eo=258,cs=eo+Nt+1,n5=32,Ui=42,pm=57,fm=69,mm=73,gm=91,bm=103,Uo=113,tl=666,Be=1,Yi=2,Yo=3,Qi=4,s5=3,Qo=(n,t)=>(n.msg=Hi[t],t),I2=n=>n*2-(n>4?9:0),no=n=>{let t=n.length;for(;--t>=0;)n[t]=0},o5=n=>{let t,e,s,o=n.w_size;t=n.hash_size,s=t;do e=n.head[--s],n.head[s]=e>=o?e-o:0;while(--t);t=o,s=t;do e=n.prev[--s],n.prev[s]=e>=o?e-o:0;while(--t)};let so=(n,t,e)=>(t<<n.hash_shift^e)&n.hash_mask;const mn=n=>{const t=n.state;let e=t.pending;e>n.avail_out&&(e=n.avail_out),e!==0&&(n.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+e),n.next_out),n.next_out+=e,t.pending_out+=e,n.total_out+=e,n.avail_out-=e,t.pending-=e,t.pending===0&&(t.pending_out=0))},gn=(n,t)=>{WU(n,n.block_start>=0?n.block_start:-1,n.strstart-n.block_start,t),n.block_start=n.strstart,mn(n.strm)},Lt=(n,t)=>{n.pending_buf[n.pending++]=t},el=(n,t)=>{n.pending_buf[n.pending++]=t>>>8&255,n.pending_buf[n.pending++]=t&255},xm=(n,t,e,s)=>{let o=n.avail_in;return o>s&&(o=s),o===0?0:(n.avail_in-=o,t.set(n.input.subarray(n.next_in,n.next_in+o),e),n.state.wrap===1?n.adler=ja(n.adler,t,o,e):n.state.wrap===2&&(n.adler=Te(n.adler,t,o,e)),n.next_in+=o,n.total_in+=o,o)},C2=(n,t)=>{let e=n.max_chain_length,s=n.strstart,o,i,r=n.prev_length,a=n.nice_match;const l=n.strstart>n.w_size-cs?n.strstart-(n.w_size-cs):0,c=n.window,u=n.w_mask,d=n.prev,h=n.strstart+eo;let p=c[s+r-1],f=c[s+r];n.prev_length>=n.good_match&&(e>>=2),a>n.lookahead&&(a=n.lookahead);do if(o=t,!(c[o+r]!==f||c[o+r-1]!==p||c[o]!==c[s]||c[++o]!==c[s+1])){s+=2,o++;do;while(c[++s]===c[++o]&&c[++s]===c[++o]&&c[++s]===c[++o]&&c[++s]===c[++o]&&c[++s]===c[++o]&&c[++s]===c[++o]&&c[++s]===c[++o]&&c[++s]===c[++o]&&s<h);if(i=eo-(h-s),s=h-eo,i>r){if(n.match_start=t,r=i,i>=a)break;p=c[s+r-1],f=c[s+r]}}while((t=d[t&u])>l&&--e!==0);return r<=n.lookahead?r:n.lookahead},Ji=n=>{const t=n.w_size;let e,s,o;do{if(s=n.window_size-n.lookahead-n.strstart,n.strstart>=t+(t-cs)&&(n.window.set(n.window.subarray(t,t+t-s),0),n.match_start-=t,n.strstart-=t,n.block_start-=t,n.insert>n.strstart&&(n.insert=n.strstart),o5(n),s+=t),n.strm.avail_in===0)break;if(e=xm(n.strm,n.window,n.strstart+n.lookahead,s),n.lookahead+=e,n.lookahead+n.insert>=Nt)for(o=n.strstart-n.insert,n.ins_h=n.window[o],n.ins_h=so(n,n.ins_h,n.window[o+1]);n.insert&&(n.ins_h=so(n,n.ins_h,n.window[o+Nt-1]),n.prev[o&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=o,o++,n.insert--,!(n.lookahead+n.insert<Nt)););}while(n.lookahead<cs&&n.strm.avail_in!==0)},v2=(n,t)=>{let e=n.pending_buf_size-5>n.w_size?n.w_size:n.pending_buf_size-5,s,o,i,r=0,a=n.strm.avail_in;do{if(s=65535,i=n.bi_valid+42>>3,n.strm.avail_out<i||(i=n.strm.avail_out-i,o=n.strstart-n.block_start,s>o+n.strm.avail_in&&(s=o+n.strm.avail_in),s>i&&(s=i),s<e&&(s===0&&t!==En||t===to||s!==o+n.strm.avail_in)))break;r=t===En&&s===o+n.strm.avail_in?1:0,um(n,0,0,r),n.pending_buf[n.pending-4]=s,n.pending_buf[n.pending-3]=s>>8,n.pending_buf[n.pending-2]=~s,n.pending_buf[n.pending-1]=~s>>8,mn(n.strm),o&&(o>s&&(o=s),n.strm.output.set(n.window.subarray(n.block_start,n.block_start+o),n.strm.next_out),n.strm.next_out+=o,n.strm.avail_out-=o,n.strm.total_out+=o,n.block_start+=o,s-=o),s&&(xm(n.strm,n.strm.output,n.strm.next_out,s),n.strm.next_out+=s,n.strm.avail_out-=s,n.strm.total_out+=s)}while(r===0);return a-=n.strm.avail_in,a&&(a>=n.w_size?(n.matches=2,n.window.set(n.strm.input.subarray(n.strm.next_in-n.w_size,n.strm.next_in),0),n.strstart=n.w_size,n.insert=n.strstart):(n.window_size-n.strstart<=a&&(n.strstart-=n.w_size,n.window.set(n.window.subarray(n.w_size,n.w_size+n.strstart),0),n.matches<2&&n.matches++,n.insert>n.strstart&&(n.insert=n.strstart)),n.window.set(n.strm.input.subarray(n.strm.next_in-a,n.strm.next_in),n.strstart),n.strstart+=a,n.insert+=a>n.w_size-n.insert?n.w_size-n.insert:a),n.block_start=n.strstart),n.high_water<n.strstart&&(n.high_water=n.strstart),r?Qi:t!==to&&t!==En&&n.strm.avail_in===0&&n.strstart===n.block_start?Yi:(i=n.window_size-n.strstart,n.strm.avail_in>i&&n.block_start>=n.w_size&&(n.block_start-=n.w_size,n.strstart-=n.w_size,n.window.set(n.window.subarray(n.w_size,n.w_size+n.strstart),0),n.matches<2&&n.matches++,i+=n.w_size,n.insert>n.strstart&&(n.insert=n.strstart)),i>n.strm.avail_in&&(i=n.strm.avail_in),i&&(xm(n.strm,n.window,n.strstart,i),n.strstart+=i,n.insert+=i>n.w_size-n.insert?n.w_size-n.insert:i),n.high_water<n.strstart&&(n.high_water=n.strstart),i=n.bi_valid+42>>3,i=n.pending_buf_size-i>65535?65535:n.pending_buf_size-i,e=i>n.w_size?n.w_size:i,o=n.strstart-n.block_start,(o>=e||(o||t===En)&&t!==to&&n.strm.avail_in===0&&o<=i)&&(s=o>i?i:o,r=t===En&&n.strm.avail_in===0&&s===o?1:0,um(n,n.block_start,s,r),n.block_start+=s,mn(n.strm)),r?Yo:Be)},ym=(n,t)=>{let e,s;for(;;){if(n.lookahead<cs){if(Ji(n),n.lookahead<cs&&t===to)return Be;if(n.lookahead===0)break}if(e=0,n.lookahead>=Nt&&(n.ins_h=so(n,n.ins_h,n.window[n.strstart+Nt-1]),e=n.prev[n.strstart&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=n.strstart),e!==0&&n.strstart-e<=n.w_size-cs&&(n.match_length=C2(n,e)),n.match_length>=Nt)if(s=qs(n,n.strstart-n.match_start,n.match_length-Nt),n.lookahead-=n.match_length,n.match_length<=n.max_lazy_match&&n.lookahead>=Nt){n.match_length--;do n.strstart++,n.ins_h=so(n,n.ins_h,n.window[n.strstart+Nt-1]),e=n.prev[n.strstart&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=n.strstart;while(--n.match_length!==0);n.strstart++}else n.strstart+=n.match_length,n.match_length=0,n.ins_h=n.window[n.strstart],n.ins_h=so(n,n.ins_h,n.window[n.strstart+1]);else s=qs(n,0,n.window[n.strstart]),n.lookahead--,n.strstart++;if(s&&(gn(n,!1),n.strm.avail_out===0))return Be}return n.insert=n.strstart<Nt-1?n.strstart:Nt-1,t===En?(gn(n,!0),n.strm.avail_out===0?Yo:Qi):n.sym_next&&(gn(n,!1),n.strm.avail_out===0)?Be:Yi},ji=(n,t)=>{let e,s,o;for(;;){if(n.lookahead<cs){if(Ji(n),n.lookahead<cs&&t===to)return Be;if(n.lookahead===0)break}if(e=0,n.lookahead>=Nt&&(n.ins_h=so(n,n.ins_h,n.window[n.strstart+Nt-1]),e=n.prev[n.strstart&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=n.strstart),n.prev_length=n.match_length,n.prev_match=n.match_start,n.match_length=Nt-1,e!==0&&n.prev_length<n.max_lazy_match&&n.strstart-e<=n.w_size-cs&&(n.match_length=C2(n,e),n.match_length<=5&&(n.strategy===PU||n.match_length===Nt&&n.strstart-n.match_start>4096)&&(n.match_length=Nt-1)),n.prev_length>=Nt&&n.match_length<=n.prev_length){o=n.strstart+n.lookahead-Nt,s=qs(n,n.strstart-1-n.prev_match,n.prev_length-Nt),n.lookahead-=n.prev_length-1,n.prev_length-=2;do++n.strstart<=o&&(n.ins_h=so(n,n.ins_h,n.window[n.strstart+Nt-1]),e=n.prev[n.strstart&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=n.strstart);while(--n.prev_length!==0);if(n.match_available=0,n.match_length=Nt-1,n.strstart++,s&&(gn(n,!1),n.strm.avail_out===0))return Be}else if(n.match_available){if(s=qs(n,0,n.window[n.strstart-1]),s&&gn(n,!1),n.strstart++,n.lookahead--,n.strm.avail_out===0)return Be}else n.match_available=1,n.strstart++,n.lookahead--}return n.match_available&&(s=qs(n,0,n.window[n.strstart-1]),n.match_available=0),n.insert=n.strstart<Nt-1?n.strstart:Nt-1,t===En?(gn(n,!0),n.strm.avail_out===0?Yo:Qi):n.sym_next&&(gn(n,!1),n.strm.avail_out===0)?Be:Yi},i5=(n,t)=>{let e,s,o,i;const r=n.window;for(;;){if(n.lookahead<=eo){if(Ji(n),n.lookahead<=eo&&t===to)return Be;if(n.lookahead===0)break}if(n.match_length=0,n.lookahead>=Nt&&n.strstart>0&&(o=n.strstart-1,s=r[o],s===r[++o]&&s===r[++o]&&s===r[++o])){i=n.strstart+eo;do;while(s===r[++o]&&s===r[++o]&&s===r[++o]&&s===r[++o]&&s===r[++o]&&s===r[++o]&&s===r[++o]&&s===r[++o]&&o<i);n.match_length=eo-(i-o),n.match_length>n.lookahead&&(n.match_length=n.lookahead)}if(n.match_length>=Nt?(e=qs(n,1,n.match_length-Nt),n.lookahead-=n.match_length,n.strstart+=n.match_length,n.match_length=0):(e=qs(n,0,n.window[n.strstart]),n.lookahead--,n.strstart++),e&&(gn(n,!1),n.strm.avail_out===0))return Be}return n.insert=0,t===En?(gn(n,!0),n.strm.avail_out===0?Yo:Qi):n.sym_next&&(gn(n,!1),n.strm.avail_out===0)?Be:Yi},r5=(n,t)=>{let e;for(;;){if(n.lookahead===0&&(Ji(n),n.lookahead===0)){if(t===to)return Be;break}if(n.match_length=0,e=qs(n,0,n.window[n.strstart]),n.lookahead--,n.strstart++,e&&(gn(n,!1),n.strm.avail_out===0))return Be}return n.insert=0,t===En?(gn(n,!0),n.strm.avail_out===0?Yo:Qi):n.sym_next&&(gn(n,!1),n.strm.avail_out===0)?Be:Yi};function us(n,t,e,s,o){this.good_length=n,this.max_lazy=t,this.nice_length=e,this.max_chain=s,this.func=o}const nl=[new us(0,0,0,0,v2),new us(4,4,8,4,ym),new us(4,5,16,8,ym),new us(4,6,32,32,ym),new us(4,4,16,16,ji),new us(8,16,32,32,ji),new us(8,16,128,128,ji),new us(8,32,128,256,ji),new us(32,128,258,1024,ji),new us(32,258,258,4096,ji)],a5=n=>{n.window_size=2*n.w_size,no(n.head),n.max_lazy_match=nl[n.level].max_lazy,n.good_match=nl[n.level].good_length,n.nice_match=nl[n.level].nice_length,n.max_chain_length=nl[n.level].max_chain,n.strstart=0,n.block_start=0,n.lookahead=0,n.insert=0,n.match_length=n.prev_length=Nt-1,n.match_available=0,n.ins_h=0};function l5(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Vu,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(t5*2),this.dyn_dtree=new Uint16Array((2*jU+1)*2),this.bl_tree=new Uint16Array((2*qU+1)*2),no(this.dyn_ltree),no(this.dyn_dtree),no(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(e5+1),this.heap=new Uint16Array(2*hm+1),no(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*hm+1),no(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const sl=n=>{if(!n)return 1;const t=n.state;return!t||t.strm!==n||t.status!==Ui&&t.status!==pm&&t.status!==fm&&t.status!==mm&&t.status!==gm&&t.status!==bm&&t.status!==Uo&&t.status!==tl?1:0},k2=n=>{if(sl(n))return Qo(n,ls);n.total_in=n.total_out=0,n.data_type=HU;const t=n.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap===2?pm:t.wrap?Ui:Uo,n.adler=t.wrap===2?0:1,t.last_flush=-2,FU(t),Ee},S2=n=>{const t=k2(n);return t===Ee&&a5(n.state),t},c5=(n,t)=>sl(n)||n.state.wrap!==2?ls:(n.state.gzhead=t,Ee),T2=(n,t,e,s,o,i)=>{if(!n)return ls;let r=1;if(t===OU&&(t=6),s<0?(r=0,s=-s):s>15&&(r=2,s-=16),o<1||o>UU||e!==Vu||s<8||s>15||t<0||t>9||i<0||i>KU||s===8&&r!==1)return Qo(n,ls);s===8&&(s=9);const a=new l5;return n.state=a,a.strm=n,a.status=Ui,a.wrap=r,a.gzhead=null,a.w_bits=s,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=o+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+Nt-1)/Nt),a.window=new Uint8Array(a.w_size*2),a.head=new Uint16Array(a.hash_size),a.prev=new Uint16Array(a.w_size),a.lit_bufsize=1<<o+6,a.pending_buf_size=a.lit_bufsize*4,a.pending_buf=new Uint8Array(a.pending_buf_size),a.sym_buf=a.lit_bufsize,a.sym_end=(a.lit_bufsize-1)*3,a.level=t,a.strategy=i,a.method=e,S2(n)},u5=(n,t)=>T2(n,t,Vu,YU,QU,BU),d5=(n,t)=>{if(sl(n)||t>y2||t<0)return n?Qo(n,ls):ls;const e=n.state;if(!n.output||n.avail_in!==0&&!n.input||e.status===tl&&t!==En)return Qo(n,n.avail_out===0?dm:ls);const s=e.last_flush;if(e.last_flush=t,e.pending!==0){if(mn(n),n.avail_out===0)return e.last_flush=-1,Ee}else if(n.avail_in===0&&I2(t)<=I2(s)&&t!==En)return Qo(n,dm);if(e.status===tl&&n.avail_in!==0)return Qo(n,dm);if(e.status===Ui&&e.wrap===0&&(e.status=Uo),e.status===Ui){let o=Vu+(e.w_bits-8<<4)<<8,i=-1;if(e.strategy>=Wu||e.level<2?i=0:e.level<6?i=1:e.level===6?i=2:i=3,o|=i<<6,e.strstart!==0&&(o|=n5),o+=31-o%31,el(e,o),e.strstart!==0&&(el(e,n.adler>>>16),el(e,n.adler&65535)),n.adler=1,e.status=Uo,mn(n),e.pending!==0)return e.last_flush=-1,Ee}if(e.status===pm){if(n.adler=0,Lt(e,31),Lt(e,139),Lt(e,8),e.gzhead)Lt(e,(e.gzhead.text?1:0)+(e.gzhead.hcrc?2:0)+(e.gzhead.extra?4:0)+(e.gzhead.name?8:0)+(e.gzhead.comment?16:0)),Lt(e,e.gzhead.time&255),Lt(e,e.gzhead.time>>8&255),Lt(e,e.gzhead.time>>16&255),Lt(e,e.gzhead.time>>24&255),Lt(e,e.level===9?2:e.strategy>=Wu||e.level<2?4:0),Lt(e,e.gzhead.os&255),e.gzhead.extra&&e.gzhead.extra.length&&(Lt(e,e.gzhead.extra.length&255),Lt(e,e.gzhead.extra.length>>8&255)),e.gzhead.hcrc&&(n.adler=Te(n.adler,e.pending_buf,e.pending,0)),e.gzindex=0,e.status=fm;else if(Lt(e,0),Lt(e,0),Lt(e,0),Lt(e,0),Lt(e,0),Lt(e,e.level===9?2:e.strategy>=Wu||e.level<2?4:0),Lt(e,s5),e.status=Uo,mn(n),e.pending!==0)return e.last_flush=-1,Ee}if(e.status===fm){if(e.gzhead.extra){let o=e.pending,i=(e.gzhead.extra.length&65535)-e.gzindex;for(;e.pending+i>e.pending_buf_size;){let a=e.pending_buf_size-e.pending;if(e.pending_buf.set(e.gzhead.extra.subarray(e.gzindex,e.gzindex+a),e.pending),e.pending=e.pending_buf_size,e.gzhead.hcrc&&e.pending>o&&(n.adler=Te(n.adler,e.pending_buf,e.pending-o,o)),e.gzindex+=a,mn(n),e.pending!==0)return e.last_flush=-1,Ee;o=0,i-=a}let r=new Uint8Array(e.gzhead.extra);e.pending_buf.set(r.subarray(e.gzindex,e.gzindex+i),e.pending),e.pending+=i,e.gzhead.hcrc&&e.pending>o&&(n.adler=Te(n.adler,e.pending_buf,e.pending-o,o)),e.gzindex=0}e.status=mm}if(e.status===mm){if(e.gzhead.name){let o=e.pending,i;do{if(e.pending===e.pending_buf_size){if(e.gzhead.hcrc&&e.pending>o&&(n.adler=Te(n.adler,e.pending_buf,e.pending-o,o)),mn(n),e.pending!==0)return e.last_flush=-1,Ee;o=0}e.gzindex<e.gzhead.name.length?i=e.gzhead.name.charCodeAt(e.gzindex++)&255:i=0,Lt(e,i)}while(i!==0);e.gzhead.hcrc&&e.pending>o&&(n.adler=Te(n.adler,e.pending_buf,e.pending-o,o)),e.gzindex=0}e.status=gm}if(e.status===gm){if(e.gzhead.comment){let o=e.pending,i;do{if(e.pending===e.pending_buf_size){if(e.gzhead.hcrc&&e.pending>o&&(n.adler=Te(n.adler,e.pending_buf,e.pending-o,o)),mn(n),e.pending!==0)return e.last_flush=-1,Ee;o=0}e.gzindex<e.gzhead.comment.length?i=e.gzhead.comment.charCodeAt(e.gzindex++)&255:i=0,Lt(e,i)}while(i!==0);e.gzhead.hcrc&&e.pending>o&&(n.adler=Te(n.adler,e.pending_buf,e.pending-o,o))}e.status=bm}if(e.status===bm){if(e.gzhead.hcrc){if(e.pending+2>e.pending_buf_size&&(mn(n),e.pending!==0))return e.last_flush=-1,Ee;Lt(e,n.adler&255),Lt(e,n.adler>>8&255),n.adler=0}if(e.status=Uo,mn(n),e.pending!==0)return e.last_flush=-1,Ee}if(n.avail_in!==0||e.lookahead!==0||t!==to&&e.status!==tl){let o=e.level===0?v2(e,t):e.strategy===Wu?r5(e,t):e.strategy===ZU?i5(e,t):nl[e.level].func(e,t);if((o===Yo||o===Qi)&&(e.status=tl),o===Be||o===Yo)return n.avail_out===0&&(e.last_flush=-1),Ee;if(o===Yi&&(t===_U?VU(e):t!==y2&&(um(e,0,0,!1),t===AU&&(no(e.head),e.lookahead===0&&(e.strstart=0,e.block_start=0,e.insert=0))),mn(n),n.avail_out===0))return e.last_flush=-1,Ee}return t!==En?Ee:e.wrap<=0?w2:(e.wrap===2?(Lt(e,n.adler&255),Lt(e,n.adler>>8&255),Lt(e,n.adler>>16&255),Lt(e,n.adler>>24&255),Lt(e,n.total_in&255),Lt(e,n.total_in>>8&255),Lt(e,n.total_in>>16&255),Lt(e,n.total_in>>24&255)):(el(e,n.adler>>>16),el(e,n.adler&65535)),mn(n),e.wrap>0&&(e.wrap=-e.wrap),e.pending!==0?Ee:w2)},h5=n=>{if(sl(n))return ls;const t=n.state.status;return n.state=null,t===Uo?Qo(n,XU):Ee},p5=(n,t)=>{let e=t.length;if(sl(n))return ls;const s=n.state,o=s.wrap;if(o===2||o===1&&s.status!==Ui||s.lookahead)return ls;if(o===1&&(n.adler=ja(n.adler,t,e,0)),s.wrap=0,e>=s.w_size){o===0&&(no(s.head),s.strstart=0,s.block_start=0,s.insert=0);let l=new Uint8Array(s.w_size);l.set(t.subarray(e-s.w_size,e),0),t=l,e=s.w_size}const i=n.avail_in,r=n.next_in,a=n.input;for(n.avail_in=e,n.next_in=0,n.input=t,Ji(s);s.lookahead>=Nt;){let l=s.strstart,c=s.lookahead-(Nt-1);do s.ins_h=so(s,s.ins_h,s.window[l+Nt-1]),s.prev[l&s.w_mask]=s.head[s.ins_h],s.head[s.ins_h]=l,l++;while(--c);s.strstart=l,s.lookahead=Nt-1,Ji(s)}return s.strstart+=s.lookahead,s.block_start=s.strstart,s.insert=s.lookahead,s.lookahead=0,s.match_length=s.prev_length=Nt-1,s.match_available=0,n.next_in=r,n.input=a,n.avail_in=i,s.wrap=o,Ee};var f5=u5,m5=T2,g5=S2,b5=k2,x5=c5,y5=d5,w5=h5,I5=p5,C5="pako deflate (from Nodeca project)",ol={deflateInit:f5,deflateInit2:m5,deflateReset:g5,deflateResetKeep:b5,deflateSetHeader:x5,deflate:y5,deflateEnd:w5,deflateSetDictionary:I5,deflateInfo:C5};const v5=(n,t)=>Object.prototype.hasOwnProperty.call(n,t);var k5=function(n){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const e=t.shift();if(e){if(typeof e!="object")throw new TypeError(e+"must be non-object");for(const s in e)v5(e,s)&&(n[s]=e[s])}}return n},S5=n=>{let t=0;for(let s=0,o=n.length;s<o;s++)t+=n[s].length;const e=new Uint8Array(t);for(let s=0,o=0,i=n.length;s<i;s++){let r=n[s];e.set(r,o),o+=r.length}return e},_u={assign:k5,flattenChunks:S5};let N2=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{N2=!1}const il=new Uint8Array(256);for(let n=0;n<256;n++)il[n]=n>=252?6:n>=248?5:n>=240?4:n>=224?3:n>=192?2:1;il[254]=il[254]=1;var T5=n=>{if(typeof TextEncoder=="function"&&TextEncoder.prototype.encode)return new TextEncoder().encode(n);let t,e,s,o,i,r=n.length,a=0;for(o=0;o<r;o++)e=n.charCodeAt(o),(e&64512)===55296&&o+1<r&&(s=n.charCodeAt(o+1),(s&64512)===56320&&(e=65536+(e-55296<<10)+(s-56320),o++)),a+=e<128?1:e<2048?2:e<65536?3:4;for(t=new Uint8Array(a),i=0,o=0;i<a;o++)e=n.charCodeAt(o),(e&64512)===55296&&o+1<r&&(s=n.charCodeAt(o+1),(s&64512)===56320&&(e=65536+(e-55296<<10)+(s-56320),o++)),e<128?t[i++]=e:e<2048?(t[i++]=192|e>>>6,t[i++]=128|e&63):e<65536?(t[i++]=224|e>>>12,t[i++]=128|e>>>6&63,t[i++]=128|e&63):(t[i++]=240|e>>>18,t[i++]=128|e>>>12&63,t[i++]=128|e>>>6&63,t[i++]=128|e&63);return t};const N5=(n,t)=>{if(t<65534&&n.subarray&&N2)return String.fromCharCode.apply(null,n.length===t?n:n.subarray(0,t));let e="";for(let s=0;s<t;s++)e+=String.fromCharCode(n[s]);return e};var R5=(n,t)=>{const e=t||n.length;if(typeof TextDecoder=="function"&&TextDecoder.prototype.decode)return new TextDecoder().decode(n.subarray(0,t));let s,o;const i=new Array(e*2);for(o=0,s=0;s<e;){let r=n[s++];if(r<128){i[o++]=r;continue}let a=il[r];if(a>4){i[o++]=65533,s+=a-1;continue}for(r&=a===2?31:a===3?15:7;a>1&&s<e;)r=r<<6|n[s++]&63,a--;if(a>1){i[o++]=65533;continue}r<65536?i[o++]=r:(r-=65536,i[o++]=55296|r>>10&1023,i[o++]=56320|r&1023)}return N5(i,o)},$5=(n,t)=>{t=t||n.length,t>n.length&&(t=n.length);let e=t-1;for(;e>=0&&(n[e]&192)===128;)e--;return e<0||e===0?t:e+il[n[e]]>t?e:t},rl={string2buf:T5,buf2string:R5,utf8border:$5};function G5(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var R2=G5;const $2=Object.prototype.toString,{Z_NO_FLUSH:E5,Z_SYNC_FLUSH:L5,Z_FULL_FLUSH:D5,Z_FINISH:M5,Z_OK:Au,Z_STREAM_END:z5,Z_DEFAULT_COMPRESSION:F5,Z_DEFAULT_STRATEGY:W5,Z_DEFLATED:V5}=qa;function wm(n){this.options=_u.assign({level:F5,method:V5,chunkSize:16384,windowBits:15,memLevel:8,strategy:W5},n||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new R2,this.strm.avail_out=0;let e=ol.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(e!==Au)throw new Error(Hi[e]);if(t.header&&ol.deflateSetHeader(this.strm,t.header),t.dictionary){let s;if(typeof t.dictionary=="string"?s=rl.string2buf(t.dictionary):$2.call(t.dictionary)==="[object ArrayBuffer]"?s=new Uint8Array(t.dictionary):s=t.dictionary,e=ol.deflateSetDictionary(this.strm,s),e!==Au)throw new Error(Hi[e]);this._dict_set=!0}}wm.prototype.push=function(n,t){const e=this.strm,s=this.options.chunkSize;let o,i;if(this.ended)return!1;for(t===~~t?i=t:i=t===!0?M5:E5,typeof n=="string"?e.input=rl.string2buf(n):$2.call(n)==="[object ArrayBuffer]"?e.input=new Uint8Array(n):e.input=n,e.next_in=0,e.avail_in=e.input.length;;){if(e.avail_out===0&&(e.output=new Uint8Array(s),e.next_out=0,e.avail_out=s),(i===L5||i===D5)&&e.avail_out<=6){this.onData(e.output.subarray(0,e.next_out)),e.avail_out=0;continue}if(o=ol.deflate(e,i),o===z5)return e.next_out>0&&this.onData(e.output.subarray(0,e.next_out)),o=ol.deflateEnd(this.strm),this.onEnd(o),this.ended=!0,o===Au;if(e.avail_out===0){this.onData(e.output);continue}if(i>0&&e.next_out>0){this.onData(e.output.subarray(0,e.next_out)),e.avail_out=0;continue}if(e.avail_in===0)break}return!0},wm.prototype.onData=function(n){this.chunks.push(n)},wm.prototype.onEnd=function(n){n===Au&&(this.result=_u.flattenChunks(this.chunks)),this.chunks=[],this.err=n,this.msg=this.strm.msg};const Xu=16209,_5=16191;var A5=function(t,e){let s,o,i,r,a,l,c,u,d,h,p,f,m,g,b,x,w,y,I,C,v,k,T,N;const $=t.state;s=t.next_in,T=t.input,o=s+(t.avail_in-5),i=t.next_out,N=t.output,r=i-(e-t.avail_out),a=i+(t.avail_out-257),l=$.dmax,c=$.wsize,u=$.whave,d=$.wnext,h=$.window,p=$.hold,f=$.bits,m=$.lencode,g=$.distcode,b=(1<<$.lenbits)-1,x=(1<<$.distbits)-1;t:do{f<15&&(p+=T[s++]<<f,f+=8,p+=T[s++]<<f,f+=8),w=m[p&b];e:for(;;){if(y=w>>>24,p>>>=y,f-=y,y=w>>>16&255,y===0)N[i++]=w&65535;else if(y&16){I=w&65535,y&=15,y&&(f<y&&(p+=T[s++]<<f,f+=8),I+=p&(1<<y)-1,p>>>=y,f-=y),f<15&&(p+=T[s++]<<f,f+=8,p+=T[s++]<<f,f+=8),w=g[p&x];n:for(;;){if(y=w>>>24,p>>>=y,f-=y,y=w>>>16&255,y&16){if(C=w&65535,y&=15,f<y&&(p+=T[s++]<<f,f+=8,f<y&&(p+=T[s++]<<f,f+=8)),C+=p&(1<<y)-1,C>l){t.msg="invalid distance too far back",$.mode=Xu;break t}if(p>>>=y,f-=y,y=i-r,C>y){if(y=C-y,y>u&&$.sane){t.msg="invalid distance too far back",$.mode=Xu;break t}if(v=0,k=h,d===0){if(v+=c-y,y<I){I-=y;do N[i++]=h[v++];while(--y);v=i-C,k=N}}else if(d<y){if(v+=c+d-y,y-=d,y<I){I-=y;do N[i++]=h[v++];while(--y);if(v=0,d<I){y=d,I-=y;do N[i++]=h[v++];while(--y);v=i-C,k=N}}}else if(v+=d-y,y<I){I-=y;do N[i++]=h[v++];while(--y);v=i-C,k=N}for(;I>2;)N[i++]=k[v++],N[i++]=k[v++],N[i++]=k[v++],I-=3;I&&(N[i++]=k[v++],I>1&&(N[i++]=k[v++]))}else{v=i-C;do N[i++]=N[v++],N[i++]=N[v++],N[i++]=N[v++],I-=3;while(I>2);I&&(N[i++]=N[v++],I>1&&(N[i++]=N[v++]))}}else if(y&64){t.msg="invalid distance code",$.mode=Xu;break t}else{w=g[(w&65535)+(p&(1<<y)-1)];continue n}break}}else if(y&64)if(y&32){$.mode=_5;break t}else{t.msg="invalid literal/length code",$.mode=Xu;break t}else{w=m[(w&65535)+(p&(1<<y)-1)];continue e}break}}while(s<o&&i<a);I=f>>3,s-=I,f-=I<<3,p&=(1<<f)-1,t.next_in=s,t.next_out=i,t.avail_in=s<o?5+(o-s):5-(s-o),t.avail_out=i<a?257+(a-i):257-(i-a),$.hold=p,$.bits=f};const qi=15,G2=852,E2=592,L2=0,Im=1,D2=2,X5=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),O5=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),P5=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),Z5=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var al=(n,t,e,s,o,i,r,a)=>{const l=a.bits;let c=0,u=0,d=0,h=0,p=0,f=0,m=0,g=0,b=0,x=0,w,y,I,C,v,k=null,T;const N=new Uint16Array(qi+1),$=new Uint16Array(qi+1);let F=null,W,V,_;for(c=0;c<=qi;c++)N[c]=0;for(u=0;u<s;u++)N[t[e+u]]++;for(p=l,h=qi;h>=1&&N[h]===0;h--);if(p>h&&(p=h),h===0)return o[i++]=1<<24|64<<16|0,o[i++]=1<<24|64<<16|0,a.bits=1,0;for(d=1;d<h&&N[d]===0;d++);for(p<d&&(p=d),g=1,c=1;c<=qi;c++)if(g<<=1,g-=N[c],g<0)return-1;if(g>0&&(n===L2||h!==1))return-1;for($[1]=0,c=1;c<qi;c++)$[c+1]=$[c]+N[c];for(u=0;u<s;u++)t[e+u]!==0&&(r[$[t[e+u]]++]=u);if(n===L2?(k=F=r,T=20):n===Im?(k=X5,F=O5,T=257):(k=P5,F=Z5,T=0),x=0,u=0,c=d,v=i,f=p,m=0,I=-1,b=1<<p,C=b-1,n===Im&&b>G2||n===D2&&b>E2)return 1;for(;;){W=c-m,r[u]+1<T?(V=0,_=r[u]):r[u]>=T?(V=F[r[u]-T],_=k[r[u]-T]):(V=32+64,_=0),w=1<<c-m,y=1<<f,d=y;do y-=w,o[v+(x>>m)+y]=W<<24|V<<16|_|0;while(y!==0);for(w=1<<c-1;x&w;)w>>=1;if(w!==0?(x&=w-1,x+=w):x=0,u++,--N[c]===0){if(c===h)break;c=t[e+r[u]]}if(c>p&&(x&C)!==I){for(m===0&&(m=p),v+=d,f=c-m,g=1<<f;f+m<h&&(g-=N[f+m],!(g<=0));)f++,g<<=1;if(b+=1<<f,n===Im&&b>G2||n===D2&&b>E2)return 1;I=x&C,o[I]=p<<24|f<<16|v-i|0}}return x!==0&&(o[v+x]=c-m<<24|64<<16|0),a.bits=p,0};const K5=0,M2=1,z2=2,{Z_FINISH:F2,Z_BLOCK:B5,Z_TREES:Ou,Z_OK:Jo,Z_STREAM_END:H5,Z_NEED_DICT:U5,Z_STREAM_ERROR:Ln,Z_DATA_ERROR:W2,Z_MEM_ERROR:V2,Z_BUF_ERROR:Y5,Z_DEFLATED:_2}=qa,Pu=16180,A2=16181,X2=16182,O2=16183,P2=16184,Z2=16185,K2=16186,B2=16187,H2=16188,U2=16189,Zu=16190,Ss=16191,Cm=16192,Y2=16193,vm=16194,Q2=16195,J2=16196,j2=16197,q2=16198,Ku=16199,Bu=16200,tC=16201,eC=16202,nC=16203,sC=16204,oC=16205,km=16206,iC=16207,rC=16208,qt=16209,aC=16210,lC=16211,Q5=852,J5=592,j5=15,cC=n=>(n>>>24&255)+(n>>>8&65280)+((n&65280)<<8)+((n&255)<<24);function q5(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const jo=n=>{if(!n)return 1;const t=n.state;return!t||t.strm!==n||t.mode<Pu||t.mode>lC?1:0},uC=n=>{if(jo(n))return Ln;const t=n.state;return n.total_in=n.total_out=t.total=0,n.msg="",t.wrap&&(n.adler=t.wrap&1),t.mode=Pu,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(Q5),t.distcode=t.distdyn=new Int32Array(J5),t.sane=1,t.back=-1,Jo},dC=n=>{if(jo(n))return Ln;const t=n.state;return t.wsize=0,t.whave=0,t.wnext=0,uC(n)},hC=(n,t)=>{let e;if(jo(n))return Ln;const s=n.state;return t<0?(e=0,t=-t):(e=(t>>4)+5,t<48&&(t&=15)),t&&(t<8||t>15)?Ln:(s.window!==null&&s.wbits!==t&&(s.window=null),s.wrap=e,s.wbits=t,dC(n))},pC=(n,t)=>{if(!n)return Ln;const e=new q5;n.state=e,e.strm=n,e.window=null,e.mode=Pu;const s=hC(n,t);return s!==Jo&&(n.state=null),s},t4=n=>pC(n,j5);let fC=!0,Sm,Tm;const e4=n=>{if(fC){Sm=new Int32Array(512),Tm=new Int32Array(32);let t=0;for(;t<144;)n.lens[t++]=8;for(;t<256;)n.lens[t++]=9;for(;t<280;)n.lens[t++]=7;for(;t<288;)n.lens[t++]=8;for(al(M2,n.lens,0,288,Sm,0,n.work,{bits:9}),t=0;t<32;)n.lens[t++]=5;al(z2,n.lens,0,32,Tm,0,n.work,{bits:5}),fC=!1}n.lencode=Sm,n.lenbits=9,n.distcode=Tm,n.distbits=5},mC=(n,t,e,s)=>{let o;const i=n.state;return i.window===null&&(i.wsize=1<<i.wbits,i.wnext=0,i.whave=0,i.window=new Uint8Array(i.wsize)),s>=i.wsize?(i.window.set(t.subarray(e-i.wsize,e),0),i.wnext=0,i.whave=i.wsize):(o=i.wsize-i.wnext,o>s&&(o=s),i.window.set(t.subarray(e-s,e-s+o),i.wnext),s-=o,s?(i.window.set(t.subarray(e-s,e),0),i.wnext=s,i.whave=i.wsize):(i.wnext+=o,i.wnext===i.wsize&&(i.wnext=0),i.whave<i.wsize&&(i.whave+=o))),0},n4=(n,t)=>{let e,s,o,i,r,a,l,c,u,d,h,p,f,m,g=0,b,x,w,y,I,C,v,k;const T=new Uint8Array(4);let N,$;const F=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(jo(n)||!n.output||!n.input&&n.avail_in!==0)return Ln;e=n.state,e.mode===Ss&&(e.mode=Cm),r=n.next_out,o=n.output,l=n.avail_out,i=n.next_in,s=n.input,a=n.avail_in,c=e.hold,u=e.bits,d=a,h=l,k=Jo;t:for(;;)switch(e.mode){case Pu:if(e.wrap===0){e.mode=Cm;break}for(;u<16;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if(e.wrap&2&&c===35615){e.wbits===0&&(e.wbits=15),e.check=0,T[0]=c&255,T[1]=c>>>8&255,e.check=Te(e.check,T,2,0),c=0,u=0,e.mode=A2;break}if(e.head&&(e.head.done=!1),!(e.wrap&1)||(((c&255)<<8)+(c>>8))%31){n.msg="incorrect header check",e.mode=qt;break}if((c&15)!==_2){n.msg="unknown compression method",e.mode=qt;break}if(c>>>=4,u-=4,v=(c&15)+8,e.wbits===0&&(e.wbits=v),v>15||v>e.wbits){n.msg="invalid window size",e.mode=qt;break}e.dmax=1<<e.wbits,e.flags=0,n.adler=e.check=1,e.mode=c&512?U2:Ss,c=0,u=0;break;case A2:for(;u<16;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if(e.flags=c,(e.flags&255)!==_2){n.msg="unknown compression method",e.mode=qt;break}if(e.flags&57344){n.msg="unknown header flags set",e.mode=qt;break}e.head&&(e.head.text=c>>8&1),e.flags&512&&e.wrap&4&&(T[0]=c&255,T[1]=c>>>8&255,e.check=Te(e.check,T,2,0)),c=0,u=0,e.mode=X2;case X2:for(;u<32;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}e.head&&(e.head.time=c),e.flags&512&&e.wrap&4&&(T[0]=c&255,T[1]=c>>>8&255,T[2]=c>>>16&255,T[3]=c>>>24&255,e.check=Te(e.check,T,4,0)),c=0,u=0,e.mode=O2;case O2:for(;u<16;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}e.head&&(e.head.xflags=c&255,e.head.os=c>>8),e.flags&512&&e.wrap&4&&(T[0]=c&255,T[1]=c>>>8&255,e.check=Te(e.check,T,2,0)),c=0,u=0,e.mode=P2;case P2:if(e.flags&1024){for(;u<16;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}e.length=c,e.head&&(e.head.extra_len=c),e.flags&512&&e.wrap&4&&(T[0]=c&255,T[1]=c>>>8&255,e.check=Te(e.check,T,2,0)),c=0,u=0}else e.head&&(e.head.extra=null);e.mode=Z2;case Z2:if(e.flags&1024&&(p=e.length,p>a&&(p=a),p&&(e.head&&(v=e.head.extra_len-e.length,e.head.extra||(e.head.extra=new Uint8Array(e.head.extra_len)),e.head.extra.set(s.subarray(i,i+p),v)),e.flags&512&&e.wrap&4&&(e.check=Te(e.check,s,p,i)),a-=p,i+=p,e.length-=p),e.length))break t;e.length=0,e.mode=K2;case K2:if(e.flags&2048){if(a===0)break t;p=0;do v=s[i+p++],e.head&&v&&e.length<65536&&(e.head.name+=String.fromCharCode(v));while(v&&p<a);if(e.flags&512&&e.wrap&4&&(e.check=Te(e.check,s,p,i)),a-=p,i+=p,v)break t}else e.head&&(e.head.name=null);e.length=0,e.mode=B2;case B2:if(e.flags&4096){if(a===0)break t;p=0;do v=s[i+p++],e.head&&v&&e.length<65536&&(e.head.comment+=String.fromCharCode(v));while(v&&p<a);if(e.flags&512&&e.wrap&4&&(e.check=Te(e.check,s,p,i)),a-=p,i+=p,v)break t}else e.head&&(e.head.comment=null);e.mode=H2;case H2:if(e.flags&512){for(;u<16;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if(e.wrap&4&&c!==(e.check&65535)){n.msg="header crc mismatch",e.mode=qt;break}c=0,u=0}e.head&&(e.head.hcrc=e.flags>>9&1,e.head.done=!0),n.adler=e.check=0,e.mode=Ss;break;case U2:for(;u<32;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}n.adler=e.check=cC(c),c=0,u=0,e.mode=Zu;case Zu:if(e.havedict===0)return n.next_out=r,n.avail_out=l,n.next_in=i,n.avail_in=a,e.hold=c,e.bits=u,U5;n.adler=e.check=1,e.mode=Ss;case Ss:if(t===B5||t===Ou)break t;case Cm:if(e.last){c>>>=u&7,u-=u&7,e.mode=km;break}for(;u<3;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}switch(e.last=c&1,c>>>=1,u-=1,c&3){case 0:e.mode=Y2;break;case 1:if(e4(e),e.mode=Ku,t===Ou){c>>>=2,u-=2;break t}break;case 2:e.mode=J2;break;case 3:n.msg="invalid block type",e.mode=qt}c>>>=2,u-=2;break;case Y2:for(c>>>=u&7,u-=u&7;u<32;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if((c&65535)!==(c>>>16^65535)){n.msg="invalid stored block lengths",e.mode=qt;break}if(e.length=c&65535,c=0,u=0,e.mode=vm,t===Ou)break t;case vm:e.mode=Q2;case Q2:if(p=e.length,p){if(p>a&&(p=a),p>l&&(p=l),p===0)break t;o.set(s.subarray(i,i+p),r),a-=p,i+=p,l-=p,r+=p,e.length-=p;break}e.mode=Ss;break;case J2:for(;u<14;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if(e.nlen=(c&31)+257,c>>>=5,u-=5,e.ndist=(c&31)+1,c>>>=5,u-=5,e.ncode=(c&15)+4,c>>>=4,u-=4,e.nlen>286||e.ndist>30){n.msg="too many length or distance symbols",e.mode=qt;break}e.have=0,e.mode=j2;case j2:for(;e.have<e.ncode;){for(;u<3;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}e.lens[F[e.have++]]=c&7,c>>>=3,u-=3}for(;e.have<19;)e.lens[F[e.have++]]=0;if(e.lencode=e.lendyn,e.lenbits=7,N={bits:e.lenbits},k=al(K5,e.lens,0,19,e.lencode,0,e.work,N),e.lenbits=N.bits,k){n.msg="invalid code lengths set",e.mode=qt;break}e.have=0,e.mode=q2;case q2:for(;e.have<e.nlen+e.ndist;){for(;g=e.lencode[c&(1<<e.lenbits)-1],b=g>>>24,x=g>>>16&255,w=g&65535,!(b<=u);){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if(w<16)c>>>=b,u-=b,e.lens[e.have++]=w;else{if(w===16){for($=b+2;u<$;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if(c>>>=b,u-=b,e.have===0){n.msg="invalid bit length repeat",e.mode=qt;break}v=e.lens[e.have-1],p=3+(c&3),c>>>=2,u-=2}else if(w===17){for($=b+3;u<$;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}c>>>=b,u-=b,v=0,p=3+(c&7),c>>>=3,u-=3}else{for($=b+7;u<$;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}c>>>=b,u-=b,v=0,p=11+(c&127),c>>>=7,u-=7}if(e.have+p>e.nlen+e.ndist){n.msg="invalid bit length repeat",e.mode=qt;break}for(;p--;)e.lens[e.have++]=v}}if(e.mode===qt)break;if(e.lens[256]===0){n.msg="invalid code -- missing end-of-block",e.mode=qt;break}if(e.lenbits=9,N={bits:e.lenbits},k=al(M2,e.lens,0,e.nlen,e.lencode,0,e.work,N),e.lenbits=N.bits,k){n.msg="invalid literal/lengths set",e.mode=qt;break}if(e.distbits=6,e.distcode=e.distdyn,N={bits:e.distbits},k=al(z2,e.lens,e.nlen,e.ndist,e.distcode,0,e.work,N),e.distbits=N.bits,k){n.msg="invalid distances set",e.mode=qt;break}if(e.mode=Ku,t===Ou)break t;case Ku:e.mode=Bu;case Bu:if(a>=6&&l>=258){n.next_out=r,n.avail_out=l,n.next_in=i,n.avail_in=a,e.hold=c,e.bits=u,A5(n,h),r=n.next_out,o=n.output,l=n.avail_out,i=n.next_in,s=n.input,a=n.avail_in,c=e.hold,u=e.bits,e.mode===Ss&&(e.back=-1);break}for(e.back=0;g=e.lencode[c&(1<<e.lenbits)-1],b=g>>>24,x=g>>>16&255,w=g&65535,!(b<=u);){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if(x&&!(x&240)){for(y=b,I=x,C=w;g=e.lencode[C+((c&(1<<y+I)-1)>>y)],b=g>>>24,x=g>>>16&255,w=g&65535,!(y+b<=u);){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}c>>>=y,u-=y,e.back+=y}if(c>>>=b,u-=b,e.back+=b,e.length=w,x===0){e.mode=oC;break}if(x&32){e.back=-1,e.mode=Ss;break}if(x&64){n.msg="invalid literal/length code",e.mode=qt;break}e.extra=x&15,e.mode=tC;case tC:if(e.extra){for($=e.extra;u<$;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}e.length+=c&(1<<e.extra)-1,c>>>=e.extra,u-=e.extra,e.back+=e.extra}e.was=e.length,e.mode=eC;case eC:for(;g=e.distcode[c&(1<<e.distbits)-1],b=g>>>24,x=g>>>16&255,w=g&65535,!(b<=u);){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if(!(x&240)){for(y=b,I=x,C=w;g=e.distcode[C+((c&(1<<y+I)-1)>>y)],b=g>>>24,x=g>>>16&255,w=g&65535,!(y+b<=u);){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}c>>>=y,u-=y,e.back+=y}if(c>>>=b,u-=b,e.back+=b,x&64){n.msg="invalid distance code",e.mode=qt;break}e.offset=w,e.extra=x&15,e.mode=nC;case nC:if(e.extra){for($=e.extra;u<$;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}e.offset+=c&(1<<e.extra)-1,c>>>=e.extra,u-=e.extra,e.back+=e.extra}if(e.offset>e.dmax){n.msg="invalid distance too far back",e.mode=qt;break}e.mode=sC;case sC:if(l===0)break t;if(p=h-l,e.offset>p){if(p=e.offset-p,p>e.whave&&e.sane){n.msg="invalid distance too far back",e.mode=qt;break}p>e.wnext?(p-=e.wnext,f=e.wsize-p):f=e.wnext-p,p>e.length&&(p=e.length),m=e.window}else m=o,f=r-e.offset,p=e.length;p>l&&(p=l),l-=p,e.length-=p;do o[r++]=m[f++];while(--p);e.length===0&&(e.mode=Bu);break;case oC:if(l===0)break t;o[r++]=e.length,l--,e.mode=Bu;break;case km:if(e.wrap){for(;u<32;){if(a===0)break t;a--,c|=s[i++]<<u,u+=8}if(h-=l,n.total_out+=h,e.total+=h,e.wrap&4&&h&&(n.adler=e.check=e.flags?Te(e.check,o,h,r-h):ja(e.check,o,h,r-h)),h=l,e.wrap&4&&(e.flags?c:cC(c))!==e.check){n.msg="incorrect data check",e.mode=qt;break}c=0,u=0}e.mode=iC;case iC:if(e.wrap&&e.flags){for(;u<32;){if(a===0)break t;a--,c+=s[i++]<<u,u+=8}if(e.wrap&4&&c!==(e.total&4294967295)){n.msg="incorrect length check",e.mode=qt;break}c=0,u=0}e.mode=rC;case rC:k=H5;break t;case qt:k=W2;break t;case aC:return V2;case lC:default:return Ln}return n.next_out=r,n.avail_out=l,n.next_in=i,n.avail_in=a,e.hold=c,e.bits=u,(e.wsize||h!==n.avail_out&&e.mode<qt&&(e.mode<km||t!==F2))&&mC(n,n.output,n.next_out,h-n.avail_out),d-=n.avail_in,h-=n.avail_out,n.total_in+=d,n.total_out+=h,e.total+=h,e.wrap&4&&h&&(n.adler=e.check=e.flags?Te(e.check,o,h,n.next_out-h):ja(e.check,o,h,n.next_out-h)),n.data_type=e.bits+(e.last?64:0)+(e.mode===Ss?128:0)+(e.mode===Ku||e.mode===vm?256:0),(d===0&&h===0||t===F2)&&k===Jo&&(k=Y5),k},s4=n=>{if(jo(n))return Ln;let t=n.state;return t.window&&(t.window=null),n.state=null,Jo},o4=(n,t)=>{if(jo(n))return Ln;const e=n.state;return e.wrap&2?(e.head=t,t.done=!1,Jo):Ln},i4=(n,t)=>{const e=t.length;let s,o,i;return jo(n)||(s=n.state,s.wrap!==0&&s.mode!==Zu)?Ln:s.mode===Zu&&(o=1,o=ja(o,t,e,0),o!==s.check)?W2:(i=mC(n,t,e,e),i?(s.mode=aC,V2):(s.havedict=1,Jo))};var r4=dC,a4=hC,l4=uC,c4=t4,u4=pC,d4=n4,h4=s4,p4=o4,f4=i4,m4="pako inflate (from Nodeca project)",Ts={inflateReset:r4,inflateReset2:a4,inflateResetKeep:l4,inflateInit:c4,inflateInit2:u4,inflate:d4,inflateEnd:h4,inflateGetHeader:p4,inflateSetDictionary:f4,inflateInfo:m4};function g4(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var b4=g4;const gC=Object.prototype.toString,{Z_NO_FLUSH:x4,Z_FINISH:y4,Z_OK:ll,Z_STREAM_END:Nm,Z_NEED_DICT:Rm,Z_STREAM_ERROR:w4,Z_DATA_ERROR:bC,Z_MEM_ERROR:I4}=qa;function cl(n){this.options=_u.assign({chunkSize:1024*64,windowBits:15,to:""},n||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(n&&n.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15||(t.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new R2,this.strm.avail_out=0;let e=Ts.inflateInit2(this.strm,t.windowBits);if(e!==ll)throw new Error(Hi[e]);if(this.header=new b4,Ts.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=rl.string2buf(t.dictionary):gC.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(e=Ts.inflateSetDictionary(this.strm,t.dictionary),e!==ll)))throw new Error(Hi[e])}cl.prototype.push=function(n,t){const e=this.strm,s=this.options.chunkSize,o=this.options.dictionary;let i,r,a;if(this.ended)return!1;for(t===~~t?r=t:r=t===!0?y4:x4,gC.call(n)==="[object ArrayBuffer]"?e.input=new Uint8Array(n):e.input=n,e.next_in=0,e.avail_in=e.input.length;;){for(e.avail_out===0&&(e.output=new Uint8Array(s),e.next_out=0,e.avail_out=s),i=Ts.inflate(e,r),i===Rm&&o&&(i=Ts.inflateSetDictionary(e,o),i===ll?i=Ts.inflate(e,r):i===bC&&(i=Rm));e.avail_in>0&&i===Nm&&e.state.wrap>0&&n[e.next_in]!==0;)Ts.inflateReset(e),i=Ts.inflate(e,r);switch(i){case w4:case bC:case Rm:case I4:return this.onEnd(i),this.ended=!0,!1}if(a=e.avail_out,e.next_out&&(e.avail_out===0||i===Nm))if(this.options.to==="string"){let l=rl.utf8border(e.output,e.next_out),c=e.next_out-l,u=rl.buf2string(e.output,l);e.next_out=c,e.avail_out=s-c,c&&e.output.set(e.output.subarray(l,l+c),0),this.onData(u)}else this.onData(e.output.length===e.next_out?e.output:e.output.subarray(0,e.next_out));if(!(i===ll&&a===0)){if(i===Nm)return i=Ts.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,!0;if(e.avail_in===0)break}}return!0},cl.prototype.onData=function(n){this.chunks.push(n)},cl.prototype.onEnd=function(n){n===ll&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=_u.flattenChunks(this.chunks)),this.chunks=[],this.err=n,this.msg=this.strm.msg};function $m(n,t){const e=new cl(t);if(e.push(n),e.err)throw e.msg||Hi[e.err];return e.result}function C4(n,t){return t=t||{},t.raw=!0,$m(n,t)}var v4=cl,k4=$m,S4=C4,T4=$m,N4=qa,R4={Inflate:v4,inflate:k4,inflateRaw:S4,ungzip:T4,constants:N4};const{Inflate:WJ,inflate:$4,inflateRaw:VJ,ungzip:_J}=R4;var G4=$4;const xC="",yC=typeof window<"u"&&window.Blob&&new Blob([atob(xC)],{type:"text/javascript;charset=utf-8"});function E4(){const n=yC&&(window.URL||window.webkitURL).createObjectURL(yC);try{return n?new Worker(n):new Worker("data:application/javascript;base64,"+xC)}finally{n&&(window.URL||window.webkitURL).revokeObjectURL(n)}}const L4=(n,t)=>[[n[0][0]*t[0][0]+n[0][2]*t[2][0],n[0][0]*t[0][1]+n[0][2]*t[2][1],n[0][0]*t[0][2]+n[0][2]*t[2][2],n[0][0]*t[0][3]+n[0][2]*t[2][3]],[n[1][1]*t[1][0]+n[1][2]*t[2][0],n[1][1]*t[1][1]+n[1][2]*t[2][1],n[1][1]*t[1][2]+n[1][2]*t[2][2],n[1][1]*t[1][3]+n[1][2]*t[2][3]],[t[2][0],t[2][1],t[2][2],t[2][3]]],D4=(n,t,e,s)=>{const o=n[0][0]*t+n[0][1]*e+n[0][3],i=n[1][0]*t+n[1][1]*e+n[1][3],r=n[2][0]*t+n[2][1]*e+n[2][3];return{x:o,y:i,z:r}},M4=(n,t,e,s)=>{const{x:o,y:i,z:r}=D4(n,t,e);return{x:o/r,y:i/r}},z4=6,F4=1,W4=10,V4=1,_4=.8,A4=1,ds=1e3;class X4{constructor(t,e,s,o,i,r=!1){this.markerDimensions=t,this.trackingDataList=e,this.projectionTransform=s,this.debugMode=r,this.trackingKeyframeList=[];for(let l=0;l<e.length;l++)this.trackingKeyframeList.push(e[l][A4]);let a=0;for(let l=0;l<this.trackingKeyframeList.length;l++)a=Math.max(a,this.trackingKeyframeList[l].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let l=0;l<this.trackingKeyframeList.length;l++){const{featurePoints:c,imagePixels:u,imageProperties:d}=this._prebuild(this.trackingKeyframeList[l],a);this.featurePointsListT[l]=c,this.imagePixelsListT[l]=u,this.imagePropertiesListT[l]=d}this.kernelCaches={}}dummyRun(t){let e=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let s=0;s<this.featurePointsListT.length;s++)this.track(t,e,s)}track(t,e,s){let o={};const i=L4(this.projectionTransform,e),r=this._buildAdjustedModelViewTransform(i);this.markerDimensions[s][0],this.markerDimensions[s][1],this.trackingKeyframeList[s].width,this.trackingKeyframeList[s].height;const a=this.featurePointsListT[s],l=this.imagePixelsListT[s],c=this.imagePropertiesListT[s],u=this._computeProjection(r,t,s),{matchingPointsT:d,simT:h}=this._computeMatching(a,l,c,u),p=d.arraySync(),f=h.arraySync(),m=this.trackingKeyframeList[s],g=[],b=[],x=[];for(let w=0;w<p.length;w++)if(f[w]>_4&&w<m.points.length){x.push(w);const y=M4(i,p[w][0],p[w][1]);b.push(y),g.push({x:m.points[w].x/m.scale,y:m.points[w].y/m.scale,z:0})}return this.debugMode&&(o={projectedImage:u.arraySync(),matchingPoints:d.arraySync(),goodTrack:x,trackedPoints:b}),r.dispose(),u.dispose(),d.dispose(),h.dispose(),{worldCoords:g,screenCoords:b,debugExtra:o}}_computeMatching(t,e,s,o){const i=z4,r=i*2+1,l=W4*F4,c=V4,u=l*2+1,d=o.shape[0],h=o.shape[1],p=t.shape[0];if(!this.kernelCaches.computeMatching){const f={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[p,u*u],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    int featureIndex = coords[0];
	    int searchOffsetIndex = coords[1];

	    int markerWidth = int(getMarkerProperties(0));
	    int markerHeight = int(getMarkerProperties(1));
	    float markerScale = getMarkerProperties(2);

	    int searchOffsetX = imod(searchOffsetIndex, ${u}) * ${c};
	    int searchOffsetY = searchOffsetIndex / ${u} * ${c};

	    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);
	    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);

	    int sx = sCenterX + searchOffsetX - ${l};
	    int sy = sCenterY + searchOffsetY - ${l};

	    if (sx < ${i} || sx >= (${h} - ${i}) || sy < ${i} || sy >= (${d} - ${i})) {
	      setOutput(-2.);
	    } 
	    else {
	      float sumPoint = 0.;
	      float sumPointSquare = 0.;
	      float sumTemplate = 0.;
	      float sumTemplateSquare = 0.;
	      float sumPointTemplate = 0.;

	      for (int templateOffsetY = 0; templateOffsetY < ${r}; templateOffsetY++) {
		for (int templateOffsetX = 0; templateOffsetX < ${r}; templateOffsetX++) {
		  int fx2 = sCenterX + templateOffsetX - ${i};
		  int fy2 = sCenterY + templateOffsetY - ${i};

		  int sx2 = sx + templateOffsetX - ${i};
		  int sy2 = sy + templateOffsetY - ${i};

		  int markerPixelIndex = fy2 * markerWidth + fx2;
		  float markerPixel = getMarkerPixels(markerPixelIndex);
		  float targetPixel = getTargetPixels(sy2, sx2);

		  sumTemplate += markerPixel;
		  sumTemplateSquare += markerPixel * markerPixel;
		  sumPoint += targetPixel;
		  sumPointSquare += targetPixel * targetPixel;
		  sumPointTemplate += targetPixel * markerPixel;
		}
	      }

	      // Normalized cross-correlation
	      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)
	      float count = float(${r} * ${r});
	      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);
	      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);

	      if (pointVariance < 0.0000001) {
		setOutput(-3.);
	      } else if (templateVariance < 0.0000001) {
		//setOutput(sumTemplate);
		setOutput(-4.);
	      } else {
		sumPointTemplate -= sumPoint / count * sumTemplate;
		float sim = sumPointTemplate / pointVariance / templateVariance;  
		setOutput(sim);
	      }
	    }
	  }
	`},m={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[p,2],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    float markerScale = getMarkerProperties(2);

	    int featureIndex = coords[0];

	    int maxIndex = int(getMaxIndex(featureIndex));
	    int searchLocationIndex = maxIndex / ${u*u};
	    int searchOffsetIndex = imod(maxIndex, ${u*u});

	    if (coords[1] == 0) {
	      int searchOffsetX = imod(searchOffsetIndex, ${u}) * ${c};
	      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - ${l}) / markerScale);
	    }
	    else if (coords[1] == 1) {
	      int searchOffsetY = searchOffsetIndex / ${u} * ${c};
	      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - ${l}) / markerScale);
	    }
	  }
	`},g={variableNames:["sims","maxIndex"],outputShape:[p],userCode:`
	  void main() {
	    int featureIndex = getOutputCoords();
	    int maxIndex = int(getMaxIndex(featureIndex));
	    setOutput(getSims(featureIndex, maxIndex));
	  }
	`};this.kernelCaches.computeMatching=[f,m,g]}return z(()=>{const f=this.kernelCaches.computeMatching,m=this._compileAndRun(f[0],[t,e,s,o]),g=m.argMax(1),b=this._compileAndRun(f[1],[t,s,g]),x=this._compileAndRun(f[2],[m,g]);return{matchingPointsT:b,simT:x}})}_computeProjection(t,e,s){const o=this.trackingKeyframeList[s].width,i=this.trackingKeyframeList[s].height,r=this.trackingKeyframeList[s].scale,a=o+"-"+i+"-"+r;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[a]){const l={variableNames:["M","pixel"],outputShape:[i,o],userCode:`
	  void main() {
	      ivec2 coords = getOutputCoords();

	      float m00 = getM(0, 0) * ${ds}.;
	      float m01 = getM(0, 1) * ${ds}.;
	      float m03 = getM(0, 3) * ${ds}.;
	      float m10 = getM(1, 0) * ${ds}.;
	      float m11 = getM(1, 1) * ${ds}.;
	      float m13 = getM(1, 3) * ${ds}.;
	      float m20 = getM(2, 0) * ${ds}.;
	      float m21 = getM(2, 1) * ${ds}.;
	      float m23 = getM(2, 3) * ${ds}.;

	      float y = float(coords[0]) / float(${r});
	      float x = float(coords[1]) / float(${r});
	      float uz = (x * m20) + (y * m21) + m23;
	      float oneOverUz = 1. / uz;

	      float ux = (x * m00) + (y * m01) + m03;
	      float uy = (x * m10) + (y * m11) + m13;

	      ux = floor(ux * oneOverUz + 0.5);
	      uy = floor(uy * oneOverUz + 0.5);
	      setOutput(getPixel(int(uy), int(ux)));
	    }
	`};this.kernelCaches.computeProjection[a]=l}return z(()=>{const l=this.kernelCaches.computeProjection[a];return this._compileAndRun(l,[t,e])})}_buildAdjustedModelViewTransform(t){return z(()=>{let e=[];for(let o=0;o<t.length;o++){e.push([]);for(let i=0;i<t[o].length;i++)e[o].push(t[o][i]/ds)}return an(e,[3,4])})}_prebuild(t,e){return z(()=>{const s=t.scale,o=[];for(let l=0;l<e;l++)l<t.points.length?o.push([t.points[l].x/s,t.points[l].y/s]):o.push([-1,-1]);const i=an(t.data,[t.width*t.height]),r=an([t.width,t.height,t.scale],[3]);return{featurePoints:an(o,[o.length,2],"float32"),imagePixels:i,imageProperties:r}})}_compileAndRun(t,e){const s=zs().compileAndRun(t,e);return Vt().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}const Hu=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],qo=[];for(let n=0;n<Hu.length;n++){const t=Hu[n].sigma;for(let e=0;e<Hu[n].points.length;e++){const s=Hu[n].points[e];qo.push([t,s[0],s[1]])}}const Gm={};function O4(n){const t=n.shape[1],e=n.shape[0],s="w"+t+"h"+e;if(!Gm.hasOwnProperty(s)){const o={variableNames:["p"],outputShape:[e,t],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0], coords[1]-2);
          sum += getP(coords[0], coords[1]-1) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0], coords[1]+1) * 4.;
          sum += getP(coords[0], coords[1]+2);
          setOutput(sum);
        }
      `},i={variableNames:["p"],outputShape:[e,t],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0]-2, coords[1]);
          sum += getP(coords[0]-1, coords[1]) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0]+1, coords[1]) * 4.;
          sum += getP(coords[0]+2, coords[1]);
          sum /= 256.;
          setOutput(sum);
        }
      `};Gm[s]=[o,i]}return Gm[s]}const P4={kernelName:"BinomialFilter",backendName:"webgl",kernelFunc:n=>{const t=n.inputs.image,e=n.backend,[s,o]=O4(t),i=e.runWebGLProgram(s,[t],t.dtype),r=e.runWebGLProgram(o,[i],t.dtype);return e.disposeIntermediateTensorInfo(i),r}},Uu=7,wC=3,Z4=wC*wC,Em=4,K4=(Em+1)*(Em+1)/Em,Lm={};function B4(n){const t=n.shape[1],e=n.shape[0],s="w"+t+"h"+e;if(!Lm.hasOwnProperty(s)){const o={variableNames:["image0","image1","image2"],outputShape:[e,t],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();
    
          int y = coords[0];
          int x = coords[1];
    
          float value = getImage1(y, x);
    
          // Step 1: find local maxima/minima
          if (value * value < ${Z4}.) {
            setOutput(0.);
            return;
          }
          if (y < ${Uu} || y > ${e-1-Uu}) {
            setOutput(0.);
            return;
          }
          if (x < ${Uu} || x > ${t-1-Uu}) {
            setOutput(0.);
            return;
          }
    
          bool isMax = true;
          bool isMin = true;
          for (int dy = -1; dy <= 1; dy++) {
            for (int dx = -1; dx <= 1; dx++) {
              float value0 = getImage0(y+dy, x+dx);
              float value1 = getImage1(y+dy, x+dx);
              float value2 = getImage2(y+dy, x+dx);
    
        if (value < value0 || value < value1 || value < value2) {
          isMax = false;
        }
        if (value > value0 || value > value1 || value > value2) {
          isMin = false;
        }
            }
          }
    
          if (!isMax && !isMin) {
            setOutput(0.);
            return;
          }
    
          // compute edge score and reject based on threshold
          float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);
          float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);
          float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));
    
          float det = (dxx * dyy) - (dxy * dxy);
    
          if (abs(det) < 0.0001) { // determinant undefined. no solution
            setOutput(0.);
            return;
          }
    
          float edgeScore = (dxx + dyy) * (dxx + dyy) / det;
    
          if (abs(edgeScore) >= ${K4} ) {
            setOutput(0.);
            return;
          }
          setOutput(getImage1(y,x));
        }
      `};Lm[s]=o}return Lm[s]}const H4={kernelName:"BuildExtremas",backendName:"webgl",kernelFunc:n=>{let{image0:t,image1:e,image2:s}=n.inputs;const o=n.backend,i=B4(e);return t=Vt().runKernel("DownsampleBilinear",{image:t}),s=Vt().runKernel("UpsampleBilinear",{image:s,targetImage:e}),o.runWebGLProgram(i,[t,e,s],e.dtype)}},ul=36,Dm={};function U4(n){const t=n.shape[0];if(!Dm.hasOwnProperty(t)){const e={variableNames:["histogram"],outputShape:[n.shape[0]],userCode:`
            void main() {
                int featureIndex = getOutputCoords();

                int maxIndex = 0;
                for (int i = 1; i < ${ul}; i++) {
                    if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {
                        maxIndex = i;
                    }
                }

                int prev = imod(maxIndex - 1 + ${ul}, ${ul});
                int next = imod(maxIndex + 1, ${ul});

                /**
                 * Fit a quatratic to 3 points. The system of equations is:
                 *
                 * y0 = A*x0^2 + B*x0 + C
                 * y1 = A*x1^2 + B*x1 + C
                 * y2 = A*x2^2 + B*x2 + C
                 *
                 * This system of equations is solved for A,B,C.
                 */
                float p10 = float(maxIndex - 1);
                float p11 = getHistogram(featureIndex, prev); 
                float p20 = float(maxIndex);
                float p21 = getHistogram(featureIndex, maxIndex); 
                float p30 = float(maxIndex + 1);
                float p31 = getHistogram(featureIndex, next); 

                float d1 = (p30-p20)*(p30-p10);
                float d2 = (p10-p20)*(p30-p10);
                float d3 = p10-p20;

                // If any of the denominators are zero then, just use maxIndex.
                    float fbin = float(maxIndex);
                if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {
                float a = p10*p10;
                float b = p20*p20;

                // Solve for the coefficients A,B,C
                float A = ((p31-p21)/d1)-((p11-p21)/d2);
                float B = ((p11-p21)+(A*(b-a)))/d3;
                float C = p11-(A*a)-(B*p10);
                fbin = -B / (2. * A);
                }

                float an = 2.0 *${Math.PI} * (fbin + 0.5) / ${ul}. - ${Math.PI};
                setOutput(an);
            }
            `};Dm[t]=e}return Dm[t]}const Y4={kernelName:"ComputeExtremaAngles",backendName:"webgl",kernelFunc:n=>{const{histograms:t}=n.inputs,e=n.backend,s=U4(t);return e.runWebGLProgram(s,[t],t.dtype)}},IC=7,Mm={};function Q4(n,t){const e=`${n}|${t.shape[0]}`;if(!Mm.hasOwnProperty(e)){const s=[];for(let r=1;r<n;r++)s.push("image"+r);let o="float getPixel(int octave, int y, int x) {";for(let r=1;r<n;r++)o+=`
  if (octave == ${r}) {
	return getImage${r}(y, x);
  }
`;o+="}";const i={variableNames:[...s,"extrema","angles","freakPoints"],outputShape:[t.shape[0],qo.length],userCode:`
  ${o}
  void main() {
	ivec2 coords = getOutputCoords();
	int featureIndex = coords[0];
	int freakIndex = coords[1];

	float freakSigma = getFreakPoints(freakIndex, 0);
	float freakX = getFreakPoints(freakIndex, 1);
	float freakY = getFreakPoints(freakIndex, 2);

	int octave = int(getExtrema(featureIndex, 1));
	float inputY = getExtrema(featureIndex, 2);
	float inputX = getExtrema(featureIndex, 3);
	float inputAngle = getAngles(featureIndex);
	float cos = ${IC}. * cos(inputAngle);
	float sin = ${IC}. * sin(inputAngle);

	float yp = inputY + freakX * sin + freakY * cos;
	float xp = inputX + freakX * cos + freakY * -sin;

	int x0 = int(floor(xp));
	int x1 = x0 + 1;
	int y0 = int(floor(yp));
	int y1 = y0 + 1;

	float f1 = getPixel(octave, y0, x0);
	float f2 = getPixel(octave, y0, x1);
	float f3 = getPixel(octave, y1, x0);
	float f4 = getPixel(octave, y1, x1);

	float x1f = float(x1);
	float y1f = float(y1);
	float x0f = float(x0);
	float y0f = float(y0);

	// ratio for interpolation between four neighbouring points
	float value = (x1f - xp) * (y1f - yp) * f1
		+ (xp - x0f) * (y1f - yp) * f2
		+ (x1f - xp) * (yp - y0f) * f3
		+ (xp - x0f) * (yp - y0f) * f4;

	setOutput(value);
  }
`};Mm[e]=i}return Mm[e]}const J4={kernelName:"ComputeExtremaFreak",backendName:"webgl",kernelFunc:n=>{const{gaussianImagesT:t,prunedExtremas:e,prunedExtremasAngles:s,freakPointsT:o,pyramidImagesLength:i}=n.inputs,r=n.backend,a=Q4(i,e);return r.runWebGLProgram(a,[...t,e,s,o],"float32")}},CC=(qo.length-1)*qo.length/2,j4=Math.ceil(CC/8),zm={};function q4(n){const t=`${n.shape[0]}`;if(!zm.hasOwnProperty(t)){const e={variableNames:["freak","p"],outputShape:[n.shape[0],j4],userCode:`
  void main() {
    ivec2 coords = getOutputCoords();
    int featureIndex = coords[0];
    int descIndex = coords[1] * 8;

    int sum = 0;
    for (int i = 0; i < 8; i++) {
      if (descIndex + i >= ${CC}) {
        continue;
      }

      int p1 = int(getP(descIndex + i, 0));
      int p2 = int(getP(descIndex + i, 1));

      float v1 = getFreak(featureIndex, p1);
      float v2 = getFreak(featureIndex, p2);

      if (v1 < v2 + 0.01) {
        sum += int(pow(2.0, float(7 - i)));
      }
    }
    setOutput(float(sum));
  }
`};zm[t]=e}return zm[t]}const tY={kernelName:"ComputeFreakDescriptors",backendName:"webgl",kernelFunc:n=>{const{extremaFreaks:t,positionT:e}=n.inputs,{backend:s}=n,o=q4(t);return s.runWebGLProgram(o,[t,e],"int32")}},Fm={};function eY(n,t){const e=`${n}|${t}`;if(!Fm.hasOwnProperty(e)){const s=[];let o="float getPixel(int octave, int y, int x) {";for(let i=1;i<n;i++)s.push("image"+i),o+=`
				if (octave == ${i}) {
					return getImage${i}(y, x);
				}
			`;o+="}",Fm[e]={variableNames:[...s,"extrema"],outputShape:[t,3,3],userCode:`
			${o}
		
			void main() {
				ivec3 coords = getOutputCoords();
				int featureIndex = coords[0];
				float score = getExtrema(featureIndex, 0);
				if (score == 0.0) {
					return;
				}
		
				int dy = coords[1]-1;
				int dx = coords[2]-1;
				int octave = int(getExtrema(featureIndex, 1));
				int y = int(getExtrema(featureIndex, 2));
				int x = int(getExtrema(featureIndex, 3));
				setOutput(getPixel(octave, y+dy, x+dx));
			}
			`}}return Fm[e]}const nY={kernelName:"ComputeLocalization",backendName:"webgl",kernelFunc:n=>{const{prunedExtremasList:t,dogPyramidImagesT:e}=n.inputs,s=n.backend,o=eY(e.length,t.length),i=an(t,[t.length,t[0].length],"int32");return s.runWebGLProgram(o,[...e.slice(1),i],e[0].dtype)}},sY=.159154943091895,tr=36,Wm={};function oY(n,t,e){const s=`${e}|${n.shape[0]}|${t.shape[0]}`;if(!Wm.hasOwnProperty(s)){const o=[];for(let l=1;l<e;l++)o.push("image"+l);let i="float getPixel(int octave, int y, int x) {";for(let l=1;l<e;l++)i+=`
            if (octave == ${l}) {
                return getImage${l}(y, x);
            }
            `;i+="}";const r={variableNames:[...o,"extrema","radial"],outputShape:[n.shape[0],t.shape[0],2],userCode:`
                ${i}

                void main() {
                    ivec3 coords = getOutputCoords();
                    int featureIndex = coords[0];
                    int radialIndex = coords[1];
                    int propertyIndex = coords[2];

                    int radialY = int(getRadial(radialIndex, 0));
                    int radialX = int(getRadial(radialIndex, 1));
                    float radialW = getRadial(radialIndex, 2);

                    int octave = int(getExtrema(featureIndex, 1));
                    int y = int(getExtrema(featureIndex, 2));
                    int x = int(getExtrema(featureIndex, 3));

                    int xp = x + radialX;
                    int yp = y + radialY;

                    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);
                    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);

                    if (propertyIndex == 0) {
                    // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0
                    
                    float angle = atan(dy, dx) + ${Math.PI};
                    float fbin = angle * ${tr}. * ${sY};
                    setOutput(fbin);
                    return;
                    }

                    if (propertyIndex == 1) {
                        float mag = sqrt(dx * dx + dy * dy);
                        float magnitude = radialW * mag;
                        setOutput(magnitude);
                        return;
                    }
                }

                `},a={variableNames:["fbinMag"],outputShape:[n.shape[0],tr],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int featureIndex = coords[0];
                int binIndex = coords[1];

                float sum = 0.;
                for (int i = 0; i < ${t.shape[0]}; i++) {
                    float fbin = getFbinMag(featureIndex, i, 0);
                    int bin = int(floor(fbin - 0.5));
                    int b1 = imod(bin + ${tr}, ${tr});
                    int b2 = imod(bin + 1 + ${tr}, ${tr});

                    if (b1 == binIndex || b2 == binIndex) {
                        float magnitude = getFbinMag(featureIndex, i, 1);
                        float w2 = fbin - float(bin) - 0.5;
                        float w1 = w2 * -1. + 1.;

                        if (b1 == binIndex) {
                            sum += w1 * magnitude;
                        }
                        if (b2 == binIndex) {
                            sum += w2 * magnitude;
                        }
                    }
                }
                setOutput(sum);
            }
            `};Wm[s]=[r,a]}return Wm[s]}const iY={kernelName:"ComputeOrientationHistograms",backendName:"webgl",kernelFunc:n=>{const{gaussianImagesT:t,prunedExtremasT:e,radialPropertiesT:s,pyramidImagesLength:o}=n.inputs,i=n.backend,[r,a]=oY(e,s,o),l=i.runWebGLProgram(r,[...t,e,s],s.dtype),c=i.runWebGLProgram(a,[l],s.dtype);return i.disposeIntermediateTensorInfo(l),c}},Vm={};function rY(n){const t=n.shape[1],e=n.shape[0],s="w"+t+"h"+e;if(!Vm.hasOwnProperty(s)){const o={variableNames:["p"],outputShape:[Math.floor(e/2),Math.floor(t/2)],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int y = coords[0] * 2;
                int x = coords[1] * 2;
        
                float sum = getP(y, x) * 0.25;
                sum += getP(y+1,x) * 0.25; 
                sum += getP(y, x+1) * 0.25; 
                sum += getP(y+1,x+1) * 0.25;
                setOutput(sum);
            }
            `};Vm[s]=o}return Vm[s]}const aY={kernelName:"DownsampleBilinear",backendName:"webgl",kernelFunc:n=>{const t=n.inputs.image,e=n.backend,s=rY(t);return e.runWebGLProgram(s,[t],t.dtype)}},lY={kernelName:"ExtremaReduction",backendName:"webgl",kernelFunc:n=>{const{extremasResultT:t}=n.inputs,e=n.backend,s=t.shape[0],o=t.shape[1],i={variableNames:["extrema"],outputShape:[Math.floor(s/2),Math.floor(o/2)],userCode:`
		  void main() {
			ivec2 coords = getOutputCoords();
			int y = coords[0] * 2;
			int x = coords[1] * 2;
  
			float location = 0.0;
			float values = getExtrema(y, x);
  
			if (getExtrema(y+1, x) != 0.0) {
			  location = 1.0;
		  values = getExtrema(y+1, x);
			}
			else if (getExtrema(y, x+1) != 0.0) {
			  location = 2.0;
		  values = getExtrema(y, x+1);
			}
			else if (getExtrema(y+1, x+1) != 0.0) {
			  location = 3.0;
		  values = getExtrema(y+1, x+1);
			}
  
			if (values < 0.0) {
			  setOutput(location * -1000.0 + values);
			} else {
			  setOutput(location * 1000.0 + values);
			}
		  }
		`};return e.runWebGLProgram(i,[t],t.dtype)}},Yu=36,cY=5,_m={};function uY(n){const t=`h${n.shape[0]}`;if(!_m.hasOwnProperty(t)){const e={variableNames:["histogram"],outputShape:[n.shape[0],Yu],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();

                int featureIndex = coords[0];
                int binIndex = coords[1];

                int prevBin = imod(binIndex - 1 + ${Yu}, ${Yu});
                int nextBin = imod(binIndex + 1, ${Yu});
                float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);

                setOutput(result);
            }
            `};_m[t]=e}return _m[t]}const dY={kernelName:"SmoothHistograms",backendName:"webgl",kernelFunc:n=>{let{histograms:t}=n.inputs;const e=n.backend,s=uY(t);for(let o=0;o<cY;o++){const i=t;t=e.runWebGLProgram(s,[t],t.dtype),o>0&&e.disposeIntermediateTensorInfo(i)}return t}},Am={};function hY(n,t){const e=t.shape[1],s=t.shape[0],o="w"+e+"h"+s;if(!Am.hasOwnProperty(o)){const i={variableNames:["p"],outputShape:[s,e],userCode:`
              void main() {
                ivec2 coords = getOutputCoords();
                int j = coords[0];
                int i = coords[1];
        
                float sj = 0.5 * float(j) - 0.25; 
                float si = 0.5 * float(i) - 0.25;
        
                float sj0 = floor(sj);
                float sj1 = ceil(sj);
                float si0 = floor(si);
                float si1 = ceil(si);
        
                int sj0I = int(sj0);
                int sj1I = int(sj1);
                int si0I = int(si0);
                int si1I = int(si1);
        
                float sum = 0.0;
                sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);
                sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);
                sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);
                sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);
                setOutput(sum);
              }
            `};Am[o]=i}return Am[o]}const pY={kernelName:"UpsampleBilinear",backendName:"webgl",kernelFunc:n=>{const{image:t,targetImage:e}=n.inputs,s=n.backend,o=hY(t,e);return s.runWebGLProgram(o,[t],t.dtype)}};on(P4),on(H4),on(Y4),on(J4),on(tY),on(nY),on(iY),on(aY),on(lY),on(dY),on(pY);const vC=8,fY=5,dl=10,mY=5,Xm=3,gY=1.5;(qo.length-1)*qo.length/2;class kC{constructor(t,e,s=!1){this.debugMode=s,this.width=t,this.height=e;let o=0;for(;t>=vC&&e>=vC&&(t/=2,e/=2,o++,o!==fY););this.numOctaves=o,this.tensorCaches={},this.kernelCaches={}}detectImageData(t){const e=new Uint8ClampedArray(4*t.length);for(let o=0;o<t.length;o++)e[4*o]=t[o],e[4*o+1]=t[o],e[4*o+2]=t[o],e[4*o+3]=255;const s=new ImageData(e,this.width,this.height);return this.detect(s)}detect(t){let e=null;const s=[];for(let b=0;b<this.numOctaves;b++){let x,w;b===0?x=this._applyFilter(t):x=this._downsampleBilinear(s[b-1][s[b-1].length-1]),w=this._applyFilter(x),s.push([x,w])}const o=[];for(let b=0;b<this.numOctaves;b++){let x=this._differenceImageBinomial(s[b][0],s[b][1]);o.push(x)}const i=[];for(let b=1;b<this.numOctaves-1;b++){const x=this._buildExtremas(o[b-1],o[b],o[b+1]);i.push(x)}const r=this._applyPrune(i),a=this._computeLocalization(r,o),l=this._computeOrientationHistograms(a,s),c=this._smoothHistograms(l),u=this._computeExtremaAngles(c),d=this._computeExtremaFreak(s,a,u),h=this._computeFreakDescriptors(d),p=a.arraySync(),f=u.arraySync(),m=h.arraySync();this.debugMode&&(e={pyramidImages:s.map(b=>b.map(x=>x.arraySync())),dogPyramidImages:o.map(b=>b?b.arraySync():null),extremasResults:i.map(b=>b.arraySync()),extremaAngles:u.arraySync(),prunedExtremas:r,localizedExtremas:a.arraySync()}),s.forEach(b=>b.forEach(x=>x.dispose())),o.forEach(b=>b&&b.dispose()),i.forEach(b=>b.dispose()),a.dispose(),l.dispose(),c.dispose(),u.dispose(),d.dispose(),h.dispose();const g=[];for(let b=0;b<p.length;b++){if(p[b][0]==0)continue;const x=[];for(let T=0;T<m[b].length;T+=4){const N=m[b][T],$=m[b][T+1],F=m[b][T+2],W=m[b][T+3];let V=N*16777216+$*65536+F*256+W;x.push(V)}const w=p[b][1],y=p[b][2],C=p[b][3]*Math.pow(2,w)+Math.pow(2,w-1)-.5,v=y*Math.pow(2,w)+Math.pow(2,w-1)-.5,k=Math.pow(2,w);g.push({maxima:p[b][0]>0,x:C,y:v,scale:k,angle:f[b],descriptors:x})}return{featurePoints:g,debugExtra:e}}_computeFreakDescriptors(t){if(!this.tensorCaches.computeFreakDescriptors){const s=[],o=[];for(let a=0;a<t.shape[1];a++)for(let l=a+1;l<t.shape[1];l++)s.push(a),o.push(l);const i=an(s,[s.length]).cast("int32"),r=an(o,[o.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:ln(ys([i,r],1))}}const{positionT:e}=this.tensorCaches.computeFreakDescriptors;return z(()=>Vt().runKernel("ComputeFreakDescriptors",{extremaFreaks:t,positionT:e}))}_computeExtremaFreak(t,e,s){this.tensorCaches._computeExtremaFreak||z(()=>{const r=an(qo);this.tensorCaches._computeExtremaFreak={freakPointsT:ln(r)}});const{freakPointsT:o}=this.tensorCaches._computeExtremaFreak,i=[];for(let r=1;r<t.length;r++)i.push(t[r][1]);return z(()=>Vt().runKernel("ComputeExtremaFreak",{gaussianImagesT:i,prunedExtremas:e,prunedExtremasAngles:s,freakPointsT:o,pyramidImagesLength:t.length}))}_computeExtremaAngles(t){return z(()=>Vt().runKernel("ComputeExtremaAngles",{histograms:t}))}_computeOrientationHistograms(t,e){const s=[];for(let i=1;i<e.length;i++)s.push(e[i][1]);this.tensorCaches.orientationHistograms||z(()=>{const i=-1/(2*Xm*Xm),r=Xm*gY,a=Math.ceil(r),l=[];for(let c=-a;c<=a;c++)for(let u=-a;u<=a;u++){const d=u*u+c*c;if(d<=r*r){const h=d*i;let p=(720+h*(720+h*(360+h*(120+h*(30+h*(6+h))))))*.0013888888;l.push([c,u,p])}}this.tensorCaches.orientationHistograms={radialPropertiesT:ln(an(l,[l.length,3]))}});const{radialPropertiesT:o}=this.tensorCaches.orientationHistograms;return z(()=>Vt().runKernel("ComputeOrientationHistograms",{gaussianImagesT:s,prunedExtremasT:t,radialPropertiesT:o,pyramidImagesLength:e.length}))}_smoothHistograms(t){return z(()=>Vt().runKernel("SmoothHistograms",{histograms:t}))}_computeLocalization(t,e){return z(()=>{const o=Vt().runKernel("ComputeLocalization",{prunedExtremasList:t,dogPyramidImagesT:e}).arraySync(),i=[];for(let a=0;a<o.length;a++){i.push([]);for(let l=0;l<o[a].length;l++)i[a].push([])}const r=[];for(let a=0;a<t.length;a++)r[a]=[t[a][0],t[a][1],t[a][2],t[a][3]];for(let a=0;a<r.length;a++){if(r[a][0]===0)continue;const l=o[a],c=.5*(l[1][2]-l[1][0]),u=.5*(l[2][1]-l[0][1]),d=l[1][2]+l[1][0]-2*l[1][1],h=l[2][1]+l[0][1]-2*l[1][1],p=.25*(l[0][0]+l[2][2]-l[0][2]-l[2][0]),f=d*h-p*p,m=(h*-c+-p*-u)/f,g=(-p*-c+d*-u)/f,b=r[a][2]+g,x=r[a][3]+m;Math.abs(f)<1e-4||(r[a][2]=b,r[a][3]=x)}return an(r,[r.length,r[0].length],"float32")})}_applyPrune(t){const e=dl*dl,s=mY,o=[],i=[];for(let a=0;a<e;a++){i.push([]),o.push([]);for(let l=0;l<s;l++)i[a].push([0,0,0,0]),o[a].push(0)}z(()=>{for(let a=0;a<t.length;a++){const l=Vt().runKernel("ExtremaReduction",{extremasResultT:t[a]}),c=a+1,u=l.arraySync(),d=l.shape[0],h=l.shape[1],p=h*2/dl,f=d*2/dl;for(let m=0;m<d;m++)for(let g=0;g<h;g++){const b=u[m][g];if(b==0)continue;const x=b%1e3,w=Math.floor(Math.abs(b)/1e3),y=g*2+(w===2||w===3?1:0),I=m*2+(w===1||w===3?1:0),C=Math.floor(y/p),k=Math.floor(I/f)*dl+C,T=Math.abs(x);let N=s;for(;N>=1&&T>o[k][N-1];)N-=1;if(N<s){for(let $=s-1;$>=N+1;$--)o[k][$]=o[k][$-1],i[k][$][0]=i[k][$-1][0],i[k][$][1]=i[k][$-1][1],i[k][$][2]=i[k][$-1][2],i[k][$][3]=i[k][$-1][3];o[k][N]=T,i[k][N][0]=x,i[k][N][1]=c,i[k][N][2]=I,i[k][N][3]=y}}}});const r=[];for(let a=0;a<e;a++)for(let l=0;l<s;l++)r.push(i[a][l]);return r}_buildExtremas(t,e,s){return z(()=>Vt().runKernel("BuildExtremas",{image0:t,image1:e,image2:s}))}_differenceImageBinomial(t,e){return z(()=>t.sub(e))}_applyFilter(t){return z(()=>Vt().runKernel("BinomialFilter",{image:t}))}_downsampleBilinear(t){return z(()=>Vt().runKernel("DownsampleBilinear",{image:t}))}_compileAndRun(t,e){const s=zs().compileAndRun(t,e);return Vt().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}_runWebGLProgram(t,e,s){const o=zs().runWebGLProgram(t,e,s);return Vt().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}}class bY{constructor(t,e,s=!1){this.debugMode=s,this.width=t,this.height=e;let o=Math.min(t,e)/2,i=Math.pow(2,Math.round(Math.log(o)/Math.log(2)));this.cropSize=i,this.detector=new kC(i,i,s),this.kernelCaches={},this.lastRandomIndex=4}detect(t){const e=Math.floor(this.height/2-this.cropSize/2),s=Math.floor(this.width/2-this.cropSize/2),o=this._detect(t,s,e);return this.debugMode&&(o.debugExtra.crop={startX:s,startY:e,cropSize:this.cropSize}),o}detectMoving(t){const e=this.lastRandomIndex%3,s=Math.floor(this.lastRandomIndex/3);let o=Math.floor(this.height/2-this.cropSize+s*this.cropSize/2),i=Math.floor(this.width/2-this.cropSize+e*this.cropSize/2);return i<0&&(i=0),o<0&&(o=0),i>=this.width-this.cropSize&&(i=this.width-this.cropSize-1),o>=this.height-this.cropSize&&(o=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(t,i,o)}_detect(t,e,s){const o=t.slice([s,e],[this.cropSize,this.cropSize]),{featurePoints:i,debugExtra:r}=this.detector.detect(o);return i.forEach(a=>{a.x+=e,a.y+=s}),this.debugMode&&(r.projectedImage=o.arraySync()),o.dispose(),{featurePoints:i,debugExtra:r}}}const SC=({image:n,ratio:t})=>{const e=Math.round(n.width*t),s=Math.round(n.height*t),o=new Uint8Array(e*s);for(let i=0;i<e;i++){let r=Math.round(1*i/t),a=Math.round(1*(i+1)/t)-1;a>=n.width&&(a=n.width-1);for(let l=0;l<s;l++){let c=Math.round(1*l/t),u=Math.round(1*(l+1)/t)-1;u>=n.height&&(u=n.height-1);let d=0,h=0;for(let p=r;p<=a;p++)for(let f=c;f<=u;f++)d+=1*n.data[f*n.width+p],h+=1;o[l*e+i]=Math.floor(d/h)}}return{data:o,width:e,height:s}},xY=100,yY=n=>{const t=xY/Math.min(n.width,n.height),e=[];let s=t;for(;;)if(e.push(s),s*=Math.pow(2,1/3),s>=.95){s=1;break}e.push(s),e.reverse();const o=[];for(let i=0;i<e.length;i++)n.width*e[i],n.height*e[i],o.push(Object.assign(SC({image:n,ratio:e[i]}),{scale:e[i]}));return o},wY=n=>{const t=Math.min(n.width,n.height),e=[],s=[];e.push(256/t),e.push(128/t);for(let o=0;o<e.length;o++)s.push(Object.assign(SC({image:n,ratio:e[o]}),{scale:e[o]}));return s},IY=n=>{const{v1:t,v2:e}=n;let s=0;for(let o=0;o<t.length;o++){let i=(t[o]^e[o])>>>0;s+=CY(i)}return s},CY=n=>{var t=n-(n>>1&1431655765);return t=(t>>2&858993459)+(t&858993459),t=(t>>4)+t&252645135,t=(t>>8)+t&16711935,t=(t>>16)+t&65535,t},vY=1234,kY=()=>({seed:vY,arrayShuffle(t){const{arr:e,sampleSize:s}=t;for(let o=0;o<s;o++){this.seed=(214013*this.seed+2531011)%-2147483648;let i=this.seed>>16&32767;i=i%e.length;let r=e[o];e[o]=e[i],e[i]=r}},nextInt(t){this.seed=(214013*this.seed+2531011)%-2147483648;let e=this.seed>>16&32767;return e=e%t,e}}),SY=16,TY=128,Om=8,NY=n=>{const{points:t,pointIndexes:e,randomizer:s}=n,o=[];for(let l=0;l<e.length;l++)o.push(l);let i=Number.MAX_SAFE_INTEGER,r=-1;const a=[];for(let l=0;l<TY;l++){s.arrayShuffle({arr:o,sampleSize:Om});let c=0;const u=[];for(let d=0;d<e.length;d++){let h=Number.MAX_SAFE_INTEGER;for(let p=0;p<Om;p++){const f=e[o[p]],m=IY({v1:t[e[d]].descriptors,v2:t[f].descriptors});m<h&&(u[d]=o[p],h=m)}c+=h}a.push(u),c<i&&(i=c,r=l)}return a[r]},TC=({points:n})=>{const t=[];for(let o=0;o<n.length;o++)t.push(o);const e=kY();return{rootNode:NC({points:n,pointIndexes:t,centerPointIndex:null,randomizer:e})}},NC=n=>{const{points:t,pointIndexes:e,centerPointIndex:s,randomizer:o}=n;let i=!1;(e.length<=Om||e.length<=SY)&&(i=!0);const r={};if(!i){const l=NY({points:t,pointIndexes:e,randomizer:o});for(let c=0;c<l.length;c++)r[e[l[c]]]===void 0&&(r[e[l[c]]]=[]),r[e[l[c]]].push(e[c])}Object.keys(r).length===1&&(i=!0);const a={centerPointIndex:s};if(i){a.leaf=!0,a.pointIndexes=[];for(let l=0;l<e.length;l++)a.pointIndexes.push(e[l]);return a}return a.leaf=!1,a.children=[],Object.keys(r).forEach(l=>{a.children.push(NC({points:t,pointIndexes:r[l],centerPointIndex:l,randomizer:o}))}),a};var ti=4294967295;function RY(n,t,e){var s=e/4294967296,o=e;n.setUint32(t,s),n.setUint32(t+4,o)}function RC(n,t,e){var s=Math.floor(e/4294967296),o=e;n.setUint32(t,s),n.setUint32(t+4,o)}function $C(n,t){var e=n.getInt32(t),s=n.getUint32(t+4);return e*4294967296+s}function $Y(n,t){var e=n.getUint32(t),s=n.getUint32(t+4);return e*4294967296+s}var Pm,Zm,Km,Qu=(typeof process>"u"||((Pm=process==null?void 0:process.env)===null||Pm===void 0?void 0:Pm.TEXT_ENCODING)!=="never")&&typeof TextEncoder<"u"&&typeof TextDecoder<"u";function GC(n){for(var t=n.length,e=0,s=0;s<t;){var o=n.charCodeAt(s++);if(o&4294967168)if(!(o&4294965248))e+=2;else{if(o>=55296&&o<=56319&&s<t){var i=n.charCodeAt(s);(i&64512)===56320&&(++s,o=((o&1023)<<10)+(i&1023)+65536)}o&4294901760?e+=4:e+=3}else{e++;continue}}return e}function GY(n,t,e){for(var s=n.length,o=e,i=0;i<s;){var r=n.charCodeAt(i++);if(r&4294967168)if(!(r&4294965248))t[o++]=r>>6&31|192;else{if(r>=55296&&r<=56319&&i<s){var a=n.charCodeAt(i);(a&64512)===56320&&(++i,r=((r&1023)<<10)+(a&1023)+65536)}r&4294901760?(t[o++]=r>>18&7|240,t[o++]=r>>12&63|128,t[o++]=r>>6&63|128):(t[o++]=r>>12&15|224,t[o++]=r>>6&63|128)}else{t[o++]=r;continue}t[o++]=r&63|128}}var hl=Qu?new TextEncoder:void 0,EY=Qu?typeof process<"u"&&((Zm=process==null?void 0:process.env)===null||Zm===void 0?void 0:Zm.TEXT_ENCODING)!=="force"?200:0:ti;function LY(n,t,e){t.set(hl.encode(n),e)}function DY(n,t,e){hl.encodeInto(n,t.subarray(e))}var MY=hl!=null&&hl.encodeInto?DY:LY,zY=4096;function EC(n,t,e){for(var s=t,o=s+e,i=[],r="";s<o;){var a=n[s++];if(!(a&128))i.push(a);else if((a&224)===192){var l=n[s++]&63;i.push((a&31)<<6|l)}else if((a&240)===224){var l=n[s++]&63,c=n[s++]&63;i.push((a&31)<<12|l<<6|c)}else if((a&248)===240){var l=n[s++]&63,c=n[s++]&63,u=n[s++]&63,d=(a&7)<<18|l<<12|c<<6|u;d>65535&&(d-=65536,i.push(d>>>10&1023|55296),d=56320|d&1023),i.push(d)}else i.push(a);i.length>=zY&&(r+=String.fromCharCode.apply(String,i),i.length=0)}return i.length>0&&(r+=String.fromCharCode.apply(String,i)),r}var FY=Qu?new TextDecoder:null,WY=Qu?typeof process<"u"&&((Km=process==null?void 0:process.env)===null||Km===void 0?void 0:Km.TEXT_DECODER)!=="force"?200:0:ti;function VY(n,t,e){var s=n.subarray(t,t+e);return FY.decode(s)}var Ju=function(){function n(t,e){this.type=t,this.data=e}return n}(),_Y=globalThis&&globalThis.__extends||function(){var n=function(t,e){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(s,o){s.__proto__=o}||function(s,o){for(var i in o)Object.prototype.hasOwnProperty.call(o,i)&&(s[i]=o[i])},n(t,e)};return function(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");n(t,e);function s(){this.constructor=t}t.prototype=e===null?Object.create(e):(s.prototype=e.prototype,new s)}}(),hs=function(n){_Y(t,n);function t(e){var s=n.call(this,e)||this,o=Object.create(t.prototype);return Object.setPrototypeOf(s,o),Object.defineProperty(s,"name",{configurable:!0,enumerable:!1,value:t.name}),s}return t}(Error),AY=-1,XY=4294967296-1,OY=17179869184-1;function PY(n){var t=n.sec,e=n.nsec;if(t>=0&&e>=0&&t<=OY)if(e===0&&t<=XY){var s=new Uint8Array(4),o=new DataView(s.buffer);return o.setUint32(0,t),s}else{var i=t/4294967296,r=t&4294967295,s=new Uint8Array(8),o=new DataView(s.buffer);return o.setUint32(0,e<<2|i&3),o.setUint32(4,r),s}else{var s=new Uint8Array(12),o=new DataView(s.buffer);return o.setUint32(0,e),RC(o,4,t),s}}function ZY(n){var t=n.getTime(),e=Math.floor(t/1e3),s=(t-e*1e3)*1e6,o=Math.floor(s/1e9);return{sec:e+o,nsec:s-o*1e9}}function KY(n){if(n instanceof Date){var t=ZY(n);return PY(t)}else return null}function BY(n){var t=new DataView(n.buffer,n.byteOffset,n.byteLength);switch(n.byteLength){case 4:{var e=t.getUint32(0),s=0;return{sec:e,nsec:s}}case 8:{var o=t.getUint32(0),i=t.getUint32(4),e=(o&3)*4294967296+i,s=o>>>2;return{sec:e,nsec:s}}case 12:{var e=$C(t,4),s=t.getUint32(0);return{sec:e,nsec:s}}default:throw new hs("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(n.length))}}function HY(n){var t=BY(n);return new Date(t.sec*1e3+t.nsec/1e6)}var UY={type:AY,encode:KY,decode:HY},LC=function(){function n(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(UY)}return n.prototype.register=function(t){var e=t.type,s=t.encode,o=t.decode;if(e>=0)this.encoders[e]=s,this.decoders[e]=o;else{var i=1+e;this.builtInEncoders[i]=s,this.builtInDecoders[i]=o}},n.prototype.tryToEncode=function(t,e){for(var s=0;s<this.builtInEncoders.length;s++){var o=this.builtInEncoders[s];if(o!=null){var i=o(t,e);if(i!=null){var r=-1-s;return new Ju(r,i)}}}for(var s=0;s<this.encoders.length;s++){var o=this.encoders[s];if(o!=null){var i=o(t,e);if(i!=null){var r=s;return new Ju(r,i)}}}return t instanceof Ju?t:null},n.prototype.decode=function(t,e,s){var o=e<0?this.builtInDecoders[-1-e]:this.decoders[e];return o?o(t,e,s):new Ju(e,t)},n.defaultCodec=new n,n}();function ju(n){return n instanceof Uint8Array?n:ArrayBuffer.isView(n)?new Uint8Array(n.buffer,n.byteOffset,n.byteLength):n instanceof ArrayBuffer?new Uint8Array(n):Uint8Array.from(n)}function YY(n){if(n instanceof ArrayBuffer)return new DataView(n);var t=ju(n);return new DataView(t.buffer,t.byteOffset,t.byteLength)}var QY=100,JY=2048,jY=function(){function n(t,e,s,o,i,r,a,l){t===void 0&&(t=LC.defaultCodec),e===void 0&&(e=void 0),s===void 0&&(s=QY),o===void 0&&(o=JY),i===void 0&&(i=!1),r===void 0&&(r=!1),a===void 0&&(a=!1),l===void 0&&(l=!1),this.extensionCodec=t,this.context=e,this.maxDepth=s,this.initialBufferSize=o,this.sortKeys=i,this.forceFloat32=r,this.ignoreUndefined=a,this.forceIntegerToFloat=l,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return n.prototype.reinitializeState=function(){this.pos=0},n.prototype.encodeSharedRef=function(t){return this.reinitializeState(),this.doEncode(t,1),this.bytes.subarray(0,this.pos)},n.prototype.encode=function(t){return this.reinitializeState(),this.doEncode(t,1),this.bytes.slice(0,this.pos)},n.prototype.doEncode=function(t,e){if(e>this.maxDepth)throw new Error("Too deep objects in depth ".concat(e));t==null?this.encodeNil():typeof t=="boolean"?this.encodeBoolean(t):typeof t=="number"?this.encodeNumber(t):typeof t=="string"?this.encodeString(t):this.encodeObject(t,e)},n.prototype.ensureBufferSizeToWrite=function(t){var e=this.pos+t;this.view.byteLength<e&&this.resizeBuffer(e*2)},n.prototype.resizeBuffer=function(t){var e=new ArrayBuffer(t),s=new Uint8Array(e),o=new DataView(e);s.set(this.bytes),this.view=o,this.bytes=s},n.prototype.encodeNil=function(){this.writeU8(192)},n.prototype.encodeBoolean=function(t){t===!1?this.writeU8(194):this.writeU8(195)},n.prototype.encodeNumber=function(t){Number.isSafeInteger(t)&&!this.forceIntegerToFloat?t>=0?t<128?this.writeU8(t):t<256?(this.writeU8(204),this.writeU8(t)):t<65536?(this.writeU8(205),this.writeU16(t)):t<4294967296?(this.writeU8(206),this.writeU32(t)):(this.writeU8(207),this.writeU64(t)):t>=-32?this.writeU8(224|t+32):t>=-128?(this.writeU8(208),this.writeI8(t)):t>=-32768?(this.writeU8(209),this.writeI16(t)):t>=-2147483648?(this.writeU8(210),this.writeI32(t)):(this.writeU8(211),this.writeI64(t)):this.forceFloat32?(this.writeU8(202),this.writeF32(t)):(this.writeU8(203),this.writeF64(t))},n.prototype.writeStringHeader=function(t){if(t<32)this.writeU8(160+t);else if(t<256)this.writeU8(217),this.writeU8(t);else if(t<65536)this.writeU8(218),this.writeU16(t);else if(t<4294967296)this.writeU8(219),this.writeU32(t);else throw new Error("Too long string: ".concat(t," bytes in UTF-8"))},n.prototype.encodeString=function(t){var e=5,s=t.length;if(s>EY){var o=GC(t);this.ensureBufferSizeToWrite(e+o),this.writeStringHeader(o),MY(t,this.bytes,this.pos),this.pos+=o}else{var o=GC(t);this.ensureBufferSizeToWrite(e+o),this.writeStringHeader(o),GY(t,this.bytes,this.pos),this.pos+=o}},n.prototype.encodeObject=function(t,e){var s=this.extensionCodec.tryToEncode(t,this.context);if(s!=null)this.encodeExtension(s);else if(Array.isArray(t))this.encodeArray(t,e);else if(ArrayBuffer.isView(t))this.encodeBinary(t);else if(typeof t=="object")this.encodeMap(t,e);else throw new Error("Unrecognized object: ".concat(Object.prototype.toString.apply(t)))},n.prototype.encodeBinary=function(t){var e=t.byteLength;if(e<256)this.writeU8(196),this.writeU8(e);else if(e<65536)this.writeU8(197),this.writeU16(e);else if(e<4294967296)this.writeU8(198),this.writeU32(e);else throw new Error("Too large binary: ".concat(e));var s=ju(t);this.writeU8a(s)},n.prototype.encodeArray=function(t,e){var s=t.length;if(s<16)this.writeU8(144+s);else if(s<65536)this.writeU8(220),this.writeU16(s);else if(s<4294967296)this.writeU8(221),this.writeU32(s);else throw new Error("Too large array: ".concat(s));for(var o=0,i=t;o<i.length;o++){var r=i[o];this.doEncode(r,e+1)}},n.prototype.countWithoutUndefined=function(t,e){for(var s=0,o=0,i=e;o<i.length;o++){var r=i[o];t[r]!==void 0&&s++}return s},n.prototype.encodeMap=function(t,e){var s=Object.keys(t);this.sortKeys&&s.sort();var o=this.ignoreUndefined?this.countWithoutUndefined(t,s):s.length;if(o<16)this.writeU8(128+o);else if(o<65536)this.writeU8(222),this.writeU16(o);else if(o<4294967296)this.writeU8(223),this.writeU32(o);else throw new Error("Too large map object: ".concat(o));for(var i=0,r=s;i<r.length;i++){var a=r[i],l=t[a];this.ignoreUndefined&&l===void 0||(this.encodeString(a),this.doEncode(l,e+1))}},n.prototype.encodeExtension=function(t){var e=t.data.length;if(e===1)this.writeU8(212);else if(e===2)this.writeU8(213);else if(e===4)this.writeU8(214);else if(e===8)this.writeU8(215);else if(e===16)this.writeU8(216);else if(e<256)this.writeU8(199),this.writeU8(e);else if(e<65536)this.writeU8(200),this.writeU16(e);else if(e<4294967296)this.writeU8(201),this.writeU32(e);else throw new Error("Too large extension object: ".concat(e));this.writeI8(t.type),this.writeU8a(t.data)},n.prototype.writeU8=function(t){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,t),this.pos++},n.prototype.writeU8a=function(t){var e=t.length;this.ensureBufferSizeToWrite(e),this.bytes.set(t,this.pos),this.pos+=e},n.prototype.writeI8=function(t){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,t),this.pos++},n.prototype.writeU16=function(t){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,t),this.pos+=2},n.prototype.writeI16=function(t){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,t),this.pos+=2},n.prototype.writeU32=function(t){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,t),this.pos+=4},n.prototype.writeI32=function(t){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,t),this.pos+=4},n.prototype.writeF32=function(t){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,t),this.pos+=4},n.prototype.writeF64=function(t){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,t),this.pos+=8},n.prototype.writeU64=function(t){this.ensureBufferSizeToWrite(8),RY(this.view,this.pos,t),this.pos+=8},n.prototype.writeI64=function(t){this.ensureBufferSizeToWrite(8),RC(this.view,this.pos,t),this.pos+=8},n}(),qY={};function tQ(n,t){t===void 0&&(t=qY);var e=new jY(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat);return e.encodeSharedRef(n)}function Bm(n){return"".concat(n<0?"-":"","0x").concat(Math.abs(n).toString(16).padStart(2,"0"))}var eQ=16,nQ=16,sQ=function(){function n(t,e){t===void 0&&(t=eQ),e===void 0&&(e=nQ),this.maxKeyLength=t,this.maxLengthPerKey=e,this.hit=0,this.miss=0,this.caches=[];for(var s=0;s<this.maxKeyLength;s++)this.caches.push([])}return n.prototype.canBeCached=function(t){return t>0&&t<=this.maxKeyLength},n.prototype.find=function(t,e,s){var o=this.caches[s-1];t:for(var i=0,r=o;i<r.length;i++){for(var a=r[i],l=a.bytes,c=0;c<s;c++)if(l[c]!==t[e+c])continue t;return a.str}return null},n.prototype.store=function(t,e){var s=this.caches[t.length-1],o={bytes:t,str:e};s.length>=this.maxLengthPerKey?s[Math.random()*s.length|0]=o:s.push(o)},n.prototype.decode=function(t,e,s){var o=this.find(t,e,s);if(o!=null)return this.hit++,o;this.miss++;var i=EC(t,e,s),r=Uint8Array.prototype.slice.call(t,e,e+s);return this.store(r,i),i},n}(),oQ=globalThis&&globalThis.__awaiter||function(n,t,e,s){function o(i){return i instanceof e?i:new e(function(r){r(i)})}return new(e||(e=Promise))(function(i,r){function a(u){try{c(s.next(u))}catch(d){r(d)}}function l(u){try{c(s.throw(u))}catch(d){r(d)}}function c(u){u.done?i(u.value):o(u.value).then(a,l)}c((s=s.apply(n,t||[])).next())})},Hm=globalThis&&globalThis.__generator||function(n,t){var e={label:0,sent:function(){if(i[0]&1)throw i[1];return i[1]},trys:[],ops:[]},s,o,i,r;return r={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(r[Symbol.iterator]=function(){return this}),r;function a(c){return function(u){return l([c,u])}}function l(c){if(s)throw new TypeError("Generator is already executing.");for(;e;)try{if(s=1,o&&(i=c[0]&2?o.return:c[0]?o.throw||((i=o.return)&&i.call(o),0):o.next)&&!(i=i.call(o,c[1])).done)return i;switch(o=0,i&&(c=[c[0]&2,i.value]),c[0]){case 0:case 1:i=c;break;case 4:return e.label++,{value:c[1],done:!1};case 5:e.label++,o=c[1],c=[0];continue;case 7:c=e.ops.pop(),e.trys.pop();continue;default:if(i=e.trys,!(i=i.length>0&&i[i.length-1])&&(c[0]===6||c[0]===2)){e=0;continue}if(c[0]===3&&(!i||c[1]>i[0]&&c[1]<i[3])){e.label=c[1];break}if(c[0]===6&&e.label<i[1]){e.label=i[1],i=c;break}if(i&&e.label<i[2]){e.label=i[2],e.ops.push(c);break}i[2]&&e.ops.pop(),e.trys.pop();continue}c=t.call(n,e)}catch(u){c=[6,u],o=0}finally{s=i=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}},DC=globalThis&&globalThis.__asyncValues||function(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t=n[Symbol.asyncIterator],e;return t?t.call(n):(n=typeof __values=="function"?__values(n):n[Symbol.iterator](),e={},s("next"),s("throw"),s("return"),e[Symbol.asyncIterator]=function(){return this},e);function s(i){e[i]=n[i]&&function(r){return new Promise(function(a,l){r=n[i](r),o(a,l,r.done,r.value)})}}function o(i,r,a,l){Promise.resolve(l).then(function(c){i({value:c,done:a})},r)}},er=globalThis&&globalThis.__await||function(n){return this instanceof er?(this.v=n,this):new er(n)},iQ=globalThis&&globalThis.__asyncGenerator||function(n,t,e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s=e.apply(n,t||[]),o,i=[];return o={},r("next"),r("throw"),r("return"),o[Symbol.asyncIterator]=function(){return this},o;function r(h){s[h]&&(o[h]=function(p){return new Promise(function(f,m){i.push([h,p,f,m])>1||a(h,p)})})}function a(h,p){try{l(s[h](p))}catch(f){d(i[0][3],f)}}function l(h){h.value instanceof er?Promise.resolve(h.value.v).then(c,u):d(i[0][2],h)}function c(h){a("next",h)}function u(h){a("throw",h)}function d(h,p){h(p),i.shift(),i.length&&a(i[0][0],i[0][1])}},rQ=function(n){var t=typeof n;return t==="string"||t==="number"},pl=-1,Um=new DataView(new ArrayBuffer(0)),aQ=new Uint8Array(Um.buffer),Ym=function(){try{Um.getInt8(0)}catch(n){return n.constructor}throw new Error("never reached")}(),MC=new Ym("Insufficient data"),lQ=new sQ,cQ=function(){function n(t,e,s,o,i,r,a,l){t===void 0&&(t=LC.defaultCodec),e===void 0&&(e=void 0),s===void 0&&(s=ti),o===void 0&&(o=ti),i===void 0&&(i=ti),r===void 0&&(r=ti),a===void 0&&(a=ti),l===void 0&&(l=lQ),this.extensionCodec=t,this.context=e,this.maxStrLength=s,this.maxBinLength=o,this.maxArrayLength=i,this.maxMapLength=r,this.maxExtLength=a,this.keyDecoder=l,this.totalPos=0,this.pos=0,this.view=Um,this.bytes=aQ,this.headByte=pl,this.stack=[]}return n.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=pl,this.stack.length=0},n.prototype.setBuffer=function(t){this.bytes=ju(t),this.view=YY(this.bytes),this.pos=0},n.prototype.appendBuffer=function(t){if(this.headByte===pl&&!this.hasRemaining(1))this.setBuffer(t);else{var e=this.bytes.subarray(this.pos),s=ju(t),o=new Uint8Array(e.length+s.length);o.set(e),o.set(s,e.length),this.setBuffer(o)}},n.prototype.hasRemaining=function(t){return this.view.byteLength-this.pos>=t},n.prototype.createExtraByteError=function(t){var e=this,s=e.view,o=e.pos;return new RangeError("Extra ".concat(s.byteLength-o," of ").concat(s.byteLength," byte(s) found at buffer[").concat(t,"]"))},n.prototype.decode=function(t){this.reinitializeState(),this.setBuffer(t);var e=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return e},n.prototype.decodeMulti=function(t){return Hm(this,function(e){switch(e.label){case 0:this.reinitializeState(),this.setBuffer(t),e.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return e.sent(),[3,1];case 3:return[2]}})},n.prototype.decodeAsync=function(t){var e,s,o,i;return oQ(this,void 0,void 0,function(){var r,a,l,c,u,d,h,p;return Hm(this,function(f){switch(f.label){case 0:r=!1,f.label=1;case 1:f.trys.push([1,6,7,12]),e=DC(t),f.label=2;case 2:return[4,e.next()];case 3:if(s=f.sent(),!!s.done)return[3,5];if(l=s.value,r)throw this.createExtraByteError(this.totalPos);this.appendBuffer(l);try{a=this.doDecodeSync(),r=!0}catch(m){if(!(m instanceof Ym))throw m}this.totalPos+=this.pos,f.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return c=f.sent(),o={error:c},[3,12];case 7:return f.trys.push([7,,10,11]),s&&!s.done&&(i=e.return)?[4,i.call(e)]:[3,9];case 8:f.sent(),f.label=9;case 9:return[3,11];case 10:if(o)throw o.error;return[7];case 11:return[7];case 12:if(r){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,a]}throw u=this,d=u.headByte,h=u.pos,p=u.totalPos,new RangeError("Insufficient data in parsing ".concat(Bm(d)," at ").concat(p," (").concat(h," in the current buffer)"))}})})},n.prototype.decodeArrayStream=function(t){return this.decodeMultiAsync(t,!0)},n.prototype.decodeStream=function(t){return this.decodeMultiAsync(t,!1)},n.prototype.decodeMultiAsync=function(t,e){return iQ(this,arguments,function(){var o,i,r,a,l,c,u,d,h;return Hm(this,function(p){switch(p.label){case 0:o=e,i=-1,p.label=1;case 1:p.trys.push([1,13,14,19]),r=DC(t),p.label=2;case 2:return[4,er(r.next())];case 3:if(a=p.sent(),!!a.done)return[3,12];if(l=a.value,e&&i===0)throw this.createExtraByteError(this.totalPos);this.appendBuffer(l),o&&(i=this.readArraySize(),o=!1,this.complete()),p.label=4;case 4:p.trys.push([4,9,,10]),p.label=5;case 5:return[4,er(this.doDecodeSync())];case 6:return[4,p.sent()];case 7:return p.sent(),--i===0?[3,8]:[3,5];case 8:return[3,10];case 9:if(c=p.sent(),!(c instanceof Ym))throw c;return[3,10];case 10:this.totalPos+=this.pos,p.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return u=p.sent(),d={error:u},[3,19];case 14:return p.trys.push([14,,17,18]),a&&!a.done&&(h=r.return)?[4,er(h.call(r))]:[3,16];case 15:p.sent(),p.label=16;case 16:return[3,18];case 17:if(d)throw d.error;return[7];case 18:return[7];case 19:return[2]}})})},n.prototype.doDecodeSync=function(){t:for(;;){var t=this.readHeadByte(),e=void 0;if(t>=224)e=t-256;else if(t<192)if(t<128)e=t;else if(t<144){var s=t-128;if(s!==0){this.pushMapState(s),this.complete();continue t}else e={}}else if(t<160){var s=t-144;if(s!==0){this.pushArrayState(s),this.complete();continue t}else e=[]}else{var o=t-160;e=this.decodeUtf8String(o,0)}else if(t===192)e=null;else if(t===194)e=!1;else if(t===195)e=!0;else if(t===202)e=this.readF32();else if(t===203)e=this.readF64();else if(t===204)e=this.readU8();else if(t===205)e=this.readU16();else if(t===206)e=this.readU32();else if(t===207)e=this.readU64();else if(t===208)e=this.readI8();else if(t===209)e=this.readI16();else if(t===210)e=this.readI32();else if(t===211)e=this.readI64();else if(t===217){var o=this.lookU8();e=this.decodeUtf8String(o,1)}else if(t===218){var o=this.lookU16();e=this.decodeUtf8String(o,2)}else if(t===219){var o=this.lookU32();e=this.decodeUtf8String(o,4)}else if(t===220){var s=this.readU16();if(s!==0){this.pushArrayState(s),this.complete();continue t}else e=[]}else if(t===221){var s=this.readU32();if(s!==0){this.pushArrayState(s),this.complete();continue t}else e=[]}else if(t===222){var s=this.readU16();if(s!==0){this.pushMapState(s),this.complete();continue t}else e={}}else if(t===223){var s=this.readU32();if(s!==0){this.pushMapState(s),this.complete();continue t}else e={}}else if(t===196){var s=this.lookU8();e=this.decodeBinary(s,1)}else if(t===197){var s=this.lookU16();e=this.decodeBinary(s,2)}else if(t===198){var s=this.lookU32();e=this.decodeBinary(s,4)}else if(t===212)e=this.decodeExtension(1,0);else if(t===213)e=this.decodeExtension(2,0);else if(t===214)e=this.decodeExtension(4,0);else if(t===215)e=this.decodeExtension(8,0);else if(t===216)e=this.decodeExtension(16,0);else if(t===199){var s=this.lookU8();e=this.decodeExtension(s,1)}else if(t===200){var s=this.lookU16();e=this.decodeExtension(s,2)}else if(t===201){var s=this.lookU32();e=this.decodeExtension(s,4)}else throw new hs("Unrecognized type byte: ".concat(Bm(t)));this.complete();for(var i=this.stack;i.length>0;){var r=i[i.length-1];if(r.type===0)if(r.array[r.position]=e,r.position++,r.position===r.size)i.pop(),e=r.array;else continue t;else if(r.type===1){if(!rQ(e))throw new hs("The type of key must be string or number but "+typeof e);if(e==="__proto__")throw new hs("The key __proto__ is not allowed");r.key=e,r.type=2;continue t}else if(r.map[r.key]=e,r.readCount++,r.readCount===r.size)i.pop(),e=r.map;else{r.key=null,r.type=1;continue t}}return e}},n.prototype.readHeadByte=function(){return this.headByte===pl&&(this.headByte=this.readU8()),this.headByte},n.prototype.complete=function(){this.headByte=pl},n.prototype.readArraySize=function(){var t=this.readHeadByte();switch(t){case 220:return this.readU16();case 221:return this.readU32();default:{if(t<160)return t-144;throw new hs("Unrecognized array type byte: ".concat(Bm(t)))}}},n.prototype.pushMapState=function(t){if(t>this.maxMapLength)throw new hs("Max length exceeded: map length (".concat(t,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:t,key:null,readCount:0,map:{}})},n.prototype.pushArrayState=function(t){if(t>this.maxArrayLength)throw new hs("Max length exceeded: array length (".concat(t,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:t,array:new Array(t),position:0})},n.prototype.decodeUtf8String=function(t,e){var s;if(t>this.maxStrLength)throw new hs("Max length exceeded: UTF-8 byte length (".concat(t,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+e+t)throw MC;var o=this.pos+e,i;return this.stateIsMapKey()&&(!((s=this.keyDecoder)===null||s===void 0)&&s.canBeCached(t))?i=this.keyDecoder.decode(this.bytes,o,t):t>WY?i=VY(this.bytes,o,t):i=EC(this.bytes,o,t),this.pos+=e+t,i},n.prototype.stateIsMapKey=function(){if(this.stack.length>0){var t=this.stack[this.stack.length-1];return t.type===1}return!1},n.prototype.decodeBinary=function(t,e){if(t>this.maxBinLength)throw new hs("Max length exceeded: bin length (".concat(t,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(t+e))throw MC;var s=this.pos+e,o=this.bytes.subarray(s,s+t);return this.pos+=e+t,o},n.prototype.decodeExtension=function(t,e){if(t>this.maxExtLength)throw new hs("Max length exceeded: ext length (".concat(t,") > maxExtLength (").concat(this.maxExtLength,")"));var s=this.view.getInt8(this.pos+e),o=this.decodeBinary(t,e+1);return this.extensionCodec.decode(o,s,this.context)},n.prototype.lookU8=function(){return this.view.getUint8(this.pos)},n.prototype.lookU16=function(){return this.view.getUint16(this.pos)},n.prototype.lookU32=function(){return this.view.getUint32(this.pos)},n.prototype.readU8=function(){var t=this.view.getUint8(this.pos);return this.pos++,t},n.prototype.readI8=function(){var t=this.view.getInt8(this.pos);return this.pos++,t},n.prototype.readU16=function(){var t=this.view.getUint16(this.pos);return this.pos+=2,t},n.prototype.readI16=function(){var t=this.view.getInt16(this.pos);return this.pos+=2,t},n.prototype.readU32=function(){var t=this.view.getUint32(this.pos);return this.pos+=4,t},n.prototype.readI32=function(){var t=this.view.getInt32(this.pos);return this.pos+=4,t},n.prototype.readU64=function(){var t=$Y(this.view,this.pos);return this.pos+=8,t},n.prototype.readI64=function(){var t=$C(this.view,this.pos);return this.pos+=8,t},n.prototype.readF32=function(){var t=this.view.getFloat32(this.pos);return this.pos+=4,t},n.prototype.readF64=function(){var t=this.view.getFloat64(this.pos);return this.pos+=8,t},n}(),uQ={};function dQ(n,t){t===void 0&&(t=uQ);var e=new cQ(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength);return e.decode(n)}const zC=2;class hQ{constructor(){this.data=null}compileImageTargets(t,e){return new Promise(async(s,o)=>{const i=[];for(let c=0;c<t.length;c++){const u=t[c],h=this.createProcessCanvas(u).getContext("2d");h.drawImage(u,0,0,u.width,u.height);const p=h.getImageData(0,0,u.width,u.height),f=new Uint8Array(u.width*u.height);for(let g=0;g<f.length;g++){const b=g*4;f[g]=Math.floor((p.data[b]+p.data[b+1]+p.data[b+2])/3)}const m={data:f,height:u.height,width:u.width};i.push(m)}const r=50/i.length;let a=0;this.data=[];for(let c=0;c<i.length;c++){const u=i[c],d=yY(u),h=r/d.length,p=await pQ(d,()=>{a+=h,e(a)});this.data.push({targetImage:u,imageList:d,matchingData:p})}for(let c=0;c<i.length;c++){const u=wY(i[c]);this.data[c].trackingImageList=u}const l=await this.compileTrack({progressCallback:e,targetImages:i,basePercent:50});for(let c=0;c<i.length;c++)this.data[c].trackingData=l[c];s(this.data)})}exportData(){const t=[];for(let s=0;s<this.data.length;s++)t.push({targetImage:{width:this.data[s].targetImage.width,height:this.data[s].targetImage.height},trackingData:this.data[s].trackingData,matchingData:this.data[s].matchingData});return tQ({v:zC,dataList:t})}importData(t){const e=dQ(new Uint8Array(t));if(!e.v||e.v!==zC)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:s}=e;this.data=[];for(let o=0;o<s.length;o++)this.data.push({targetImage:s[o].targetImage,trackingData:s[o].trackingData,matchingData:s[o].matchingData});return this.data}createProcessCanvas(t){console.warn("missing createProcessCanvas implementation")}compileTrack({progressCallback:t,targetImages:e,basePercent:s}){console.warn("missing compileTrack implementation")}}const pQ=async(n,t)=>{const e=[];for(let s=0;s<n.length;s++){const o=n[s],i=new kC(o.width,o.height);await Wc(),z(()=>{const r=an(o.data,[o.data.length],"float32").reshape([o.height,o.width]),{featurePoints:a}=i.detect(r),l=a.filter(h=>h.maxima),c=a.filter(h=>!h.maxima),u=TC({points:l}),d=TC({points:c});e.push({maximaPoints:l,minimaPoints:c,maximaPointsCluster:u,minimaPointsCluster:d,width:o.width,height:o.height,scale:o.scale}),t(s)})}return e},FC="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2NsYXNzIHp7Y29uc3RydWN0b3Iocyx0LG8pe3RoaXMuY3Vtc3VtPVtdO2ZvcihsZXQgZT0wO2U8bztlKyspe3RoaXMuY3Vtc3VtLnB1c2goW10pO2ZvcihsZXQgbj0wO248dDtuKyspdGhpcy5jdW1zdW1bZV0ucHVzaCgwKX10aGlzLmN1bXN1bVswXVswXT1zWzBdO2ZvcihsZXQgZT0xO2U8dDtlKyspdGhpcy5jdW1zdW1bMF1bZV09dGhpcy5jdW1zdW1bMF1bZS0xXStzW2VdO2ZvcihsZXQgZT0xO2U8bztlKyspdGhpcy5jdW1zdW1bZV1bMF09dGhpcy5jdW1zdW1bZS0xXVswXStzW2UqdF07Zm9yKGxldCBlPTE7ZTxvO2UrKylmb3IobGV0IG49MTtuPHQ7bisrKXRoaXMuY3Vtc3VtW2VdW25dPXNbZSp0K25dK3RoaXMuY3Vtc3VtW2UtMV1bbl0rdGhpcy5jdW1zdW1bZV1bbi0xXS10aGlzLmN1bXN1bVtlLTFdW24tMV19cXVlcnkocyx0LG8sZSl7bGV0IG49dGhpcy5jdW1zdW1bZV1bb107cmV0dXJuIHQ+MCYmKG4tPXRoaXMuY3Vtc3VtW3QtMV1bb10pLHM+MCYmKG4tPXRoaXMuY3Vtc3VtW2VdW3MtMV0pLHM+MCYmdD4wJiYobis9dGhpcy5jdW1zdW1bdC0xXVtzLTFdKSxufX1jb25zdCBDPTEwLGI9MixNPTYsRj01LEk9Ljk1LEw9LjksTz0uMixaPTgsTj0yNCoyLzMsVT1yPT57Y29uc3R7ZGF0YTpzLHdpZHRoOnQsaGVpZ2h0Om8sc2NhbGU6ZX09cixuPVt0Km9dO2ZvcihsZXQgaT0wO2k8bi5sZW5ndGg7aSsrKW5baV09ITE7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWFbaV09LTEsYVt0KihvLTEpK2ldPS0xO2ZvcihsZXQgaT0wO2k8bztpKyspYVtpKnRdPS0xLGFbaSp0K3QtMV09LTE7Zm9yKGxldCBpPTE7aTx0LTE7aSsrKWZvcihsZXQgcD0xO3A8by0xO3ArKyl7bGV0IGY9aSt0KnAsaD0wLGM9MDtmb3IobGV0IHU9LTE7dTw9MTt1KyspaCs9c1tmK3QqdSsxXS1zW2YrdCp1LTFdLGMrPXNbZit0K3VdLXNbZi10K3VdO2gvPTMqMjU2LGMvPTMqMjU2LGFbZl09TWF0aC5zcXJ0KChoKmgrYypjKS8yKX1jb25zdCBnPW5ldyBVaW50MzJBcnJheSgxZTMpO2ZvcihsZXQgaT0wO2k8MWUzO2krKylnW2ldPTA7Y29uc3QgZD1bLTEsMSwtdCx0XTtmb3IobGV0IGk9MTtpPHQtMTtpKyspZm9yKGxldCBwPTE7cDxvLTE7cCsrKXtsZXQgZj1pK3QqcCxoPSEwO2ZvcihsZXQgYz0wO2M8ZC5sZW5ndGg7YysrKWlmKGFbZl08PWFbZitkW2NdXSl7aD0hMTticmVha31pZihoKXtsZXQgYz1NYXRoLmZsb29yKGFbZl0qMWUzKTtjPjk5OSYmKGM9OTk5KSxjPDAmJihjPTApLGdbY10rPTEsbltmXT0hMH19Y29uc3Qgdz0uMDIqdCpvO2xldCBqPTk5OSxFPTA7Zm9yKDtqPj0wJiYoRSs9Z1tqXSwhKEU+dykpOylqLS07Zm9yKGxldCBpPTA7aTxuLmxlbmd0aDtpKyspbltpXSYmYVtpXSoxZTM8aiYmKG5baV09ITEpO2NvbnN0IGw9W107Zm9yKGxldCBpPTA7aTxzLmxlbmd0aDtpKyspbFtpXT1zW2ldKnNbaV07Y29uc3QgUz1uZXcgeihzLHQsbyksRD1uZXcgeihsLHQsbyksaz1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWZvcihsZXQgcD0wO3A8bztwKyspe2NvbnN0IGY9cCp0K2k7aWYoIW5bZl0pe2tbZl09MTtjb250aW51ZX1jb25zdCBoPVAoe2ltYWdlOnIsY3g6aSxjeTpwLHNkVGhyZXNoOkYsaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KTtpZihoPT09bnVsbCl7a1tmXT0xO2NvbnRpbnVlfWxldCBjPS0xO2ZvcihsZXQgdT0tQzt1PD1DO3UrKyl7Zm9yKGxldCBtPS1DO208PUM7bSsrKXtpZihtKm0rdSp1PD1iKmIpY29udGludWU7Y29uc3QgeD1SKHtpbWFnZTpyLGN4OmkrbSxjeTpwK3UsdmxlbjpoLHR4OmksdHk6cCxpbWFnZURhdGFDdW1zdW06UyxpbWFnZURhdGFTcXJDdW1zdW06RH0pO2lmKHghPT1udWxsJiZ4PmMmJihjPXgsYz5JKSlicmVha31pZihjPkkpYnJlYWt9a1tmXT1jfXJldHVybiBWKHtpbWFnZTpyLGZlYXR1cmVNYXA6ayx0ZW1wbGF0ZVNpemU6TSxzZWFyY2hTaXplOmIsb2NjU2l6ZTpOLG1heFNpbVRocmVzaDpMLG1pblNpbVRocmVzaDpPLHNkVGhyZXNoOlosaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KX0sVj1yPT57bGV0e2ltYWdlOnMsZmVhdHVyZU1hcDp0LHRlbXBsYXRlU2l6ZTpvLHNlYXJjaFNpemU6ZSxvY2NTaXplOm4sbWF4U2ltVGhyZXNoOmEsbWluU2ltVGhyZXNoOmcsc2RUaHJlc2g6ZCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an09cjtjb25zdHtkYXRhOkUsd2lkdGg6bCxoZWlnaHQ6UyxzY2FsZTpEfT1zO249TWF0aC5mbG9vcihNYXRoLm1pbihzLndpZHRoLHMuaGVpZ2h0KS8xMCk7Y29uc3Qgaz0obyoyKzEpKjMsQT1NYXRoLmZsb29yKGwvayksaT1NYXRoLmZsb29yKFMvayk7bGV0IHA9TWF0aC5mbG9vcihsL24pKk1hdGguZmxvb3IoUy9uKStBKmk7Y29uc3QgZj1bXSxoPW5ldyBGbG9hdDMyQXJyYXkoRS5sZW5ndGgpO2ZvcihsZXQgdT0wO3U8aC5sZW5ndGg7dSsrKWhbdV09dFt1XTtsZXQgYz0wO2Zvcig7YzxwOyl7bGV0IHU9YSxtPS0xLHg9LTE7Zm9yKGxldCB5PTA7eTxTO3krKylmb3IobGV0IFQ9MDtUPGw7VCsrKWhbeSpsK1RdPHUmJih1PWhbeSpsK1RdLG09VCx4PXkpO2lmKG09PT0tMSlicmVhaztjb25zdCB2PVAoe2ltYWdlOnMsY3g6bSxjeTp4LHNkVGhyZXNoOjAsaW1hZ2VEYXRhQ3Vtc3VtOncsaW1hZ2VEYXRhU3FyQ3Vtc3VtOmp9KTtpZih2PT09bnVsbCl7aFt4KmwrbV09MTtjb250aW51ZX1pZih2LyhvKjIrMSk8ZCl7aFt4KmwrbV09MTtjb250aW51ZX1sZXQgcT0xLF89LTE7Zm9yKGxldCB5PS1lO3k8PWU7eSsrKXtmb3IobGV0IFQ9LWU7VDw9ZTtUKyspe2lmKFQqVCt5Knk+ZSplfHxUPT09MCYmeT09PTApY29udGludWU7Y29uc3QgSD1SKHtpbWFnZTpzLHZsZW46dixjeDptK1QsY3k6eCt5LHR4Om0sdHk6eCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an0pO2lmKEghPT1udWxsJiYoSDxxJiYocT1ILHE8ZyYmcTx1KXx8SD5fJiYoXz1ILF8+Ljk5KSkpYnJlYWt9aWYocTxnJiZxPHV8fF8+Ljk5KWJyZWFrfWlmKHE8ZyYmcTx1fHxfPi45OSl7aFt4KmwrbV09MTtjb250aW51ZX1mLnB1c2goe3g6bSx5Onh9KSxjKz0xO2ZvcihsZXQgeT0tbjt5PD1uO3krKylmb3IobGV0IFQ9LW47VDw9bjtUKyspeCt5PDB8fHgreT49U3x8bStUPDB8fG0rVD49bHx8KGhbKHgreSkqbCsobStUKV09MSl9cmV0dXJuIGZ9LFA9KHtpbWFnZTpyLGN4OnMsY3k6dCxzZFRocmVzaDpvLGltYWdlRGF0YUN1bXN1bTplLGltYWdlRGF0YVNxckN1bXN1bTpufSk9PntpZihzLU08MHx8cytNPj1yLndpZHRofHx0LU08MHx8dCtNPj1yLmhlaWdodClyZXR1cm4gbnVsbDtjb25zdCBhPTIqTSsxLGc9YSphO2xldCBkPWUucXVlcnkocy1NLHQtTSxzK00sdCtNKTtkLz1nO2xldCB3PW4ucXVlcnkocy1NLHQtTSxzK00sdCtNKTtyZXR1cm4gdy09MipkKmUucXVlcnkocy1NLHQtTSxzK00sdCtNKSx3Kz1nKmQqZCx3L2c8bypvP251bGw6KHc9TWF0aC5zcXJ0KHcpLHcpfSxSPXI9Pntjb25zdHtpbWFnZTpzLGN4OnQsY3k6byx2bGVuOmUsdHg6bix0eTphLGltYWdlRGF0YUN1bXN1bTpnLGltYWdlRGF0YVNxckN1bXN1bTpkfT1yLHtkYXRhOncsd2lkdGg6aixoZWlnaHQ6RX09cyxsPU07aWYodC1sPDB8fHQrbD49anx8by1sPDB8fG8rbD49RSlyZXR1cm4gbnVsbDtjb25zdCBTPTIqbCsxO2xldCBEPWcucXVlcnkodC1sLG8tbCx0K2wsbytsKSxrPWQucXVlcnkodC1sLG8tbCx0K2wsbytsKSxBPTAsaT0oby1sKSpqKyh0LWwpLHA9KGEtbCkqaisobi1sKSxmPWotUztmb3IobGV0IG09MDttPFM7bSsrKXtmb3IobGV0IHg9MDt4PFM7eCsrKUErPXdbaV0qd1twXSxpKz0xLHArPTE7aSs9ZixwKz1mfWxldCBoPWcucXVlcnkobi1sLGEtbCxuK2wsYStsKTtoLz1TKlMsQS09aCpEO2xldCBjPWstRCpELyhTKlMpO3JldHVybiBjPT0wP251bGw6KGM9TWF0aC5zcXJ0KGMpLDEqQS8oZSpjKSl9LFc9KHIscyk9Pntjb25zdCB0PVtdO2ZvcihsZXQgbz0wO288ci5sZW5ndGg7bysrKXtjb25zdCBlPXJbb10sbj1VKGUpLGE9e2RhdGE6ZS5kYXRhLHNjYWxlOmUuc2NhbGUsd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQscG9pbnRzOm59O3QucHVzaChhKSxzKG8pfXJldHVybiB0fSxYPSh7aW1hZ2U6cixyYXRpbzpzfSk9Pntjb25zdCB0PU1hdGgucm91bmQoci53aWR0aCpzKSxvPU1hdGgucm91bmQoci5oZWlnaHQqcyksZT1uZXcgVWludDhBcnJheSh0Km8pO2ZvcihsZXQgbj0wO248dDtuKyspe2xldCBhPU1hdGgucm91bmQoMSpuL3MpLGc9TWF0aC5yb3VuZCgxKihuKzEpL3MpLTE7Zz49ci53aWR0aCYmKGc9ci53aWR0aC0xKTtmb3IobGV0IGQ9MDtkPG87ZCsrKXtsZXQgdz1NYXRoLnJvdW5kKDEqZC9zKSxqPU1hdGgucm91bmQoMSooZCsxKS9zKS0xO2o+PXIuaGVpZ2h0JiYoaj1yLmhlaWdodC0xKTtsZXQgRT0wLGw9MDtmb3IobGV0IFM9YTtTPD1nO1MrKylmb3IobGV0IEQ9dztEPD1qO0QrKylFKz0xKnIuZGF0YVtEKnIud2lkdGgrU10sbCs9MTtlW2QqdCtuXT1NYXRoLmZsb29yKEUvbCl9fXJldHVybntkYXRhOmUsd2lkdGg6dCxoZWlnaHQ6b319LFk9cj0+e2NvbnN0IHM9TWF0aC5taW4oci53aWR0aCxyLmhlaWdodCksdD1bXSxvPVtdO3QucHVzaCgyNTYvcyksdC5wdXNoKDEyOC9zKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKylvLnB1c2goT2JqZWN0LmFzc2lnbihYKHtpbWFnZTpyLHJhdGlvOnRbZV19KSx7c2NhbGU6dFtlXX0pKTtyZXR1cm4gb307b25tZXNzYWdlPXI9Pntjb25zdHtkYXRhOnN9PXI7aWYocy50eXBlPT09ImNvbXBpbGUiKXtjb25zdHt0YXJnZXRJbWFnZXM6dH09cyxvPTEwMC90Lmxlbmd0aDtsZXQgZT0wO2NvbnN0IG49W107Zm9yKGxldCBhPTA7YTx0Lmxlbmd0aDthKyspe2NvbnN0IGc9dFthXSxkPVkoZyksdz1vL2QubGVuZ3RoLGo9VyhkLEU9PntlKz13LHBvc3RNZXNzYWdlKHt0eXBlOiJwcm9ncmVzcyIscGVyY2VudDplfSl9KTtuLnB1c2goail9cG9zdE1lc3NhZ2Uoe3R5cGU6ImNvbXBpbGVEb25lIixsaXN0Om59KX19fSkoKTsK",WC=typeof window<"u"&&window.Blob&&new Blob([atob(FC)],{type:"text/javascript;charset=utf-8"});function fQ(){const n=WC&&(window.URL||window.webkitURL).createObjectURL(WC);try{return n?new Worker(n):new Worker("data:application/javascript;base64,"+FC)}finally{n&&(window.URL||window.webkitURL).revokeObjectURL(n)}}class VC extends hQ{createProcessCanvas(t){const e=document.createElement("canvas");return e.width=t.width,e.height=t.height,e}compileTrack({progressCallback:t,targetImages:e,basePercent:s}){return new Promise((o,i)=>{const r=new fQ;r.onmessage=a=>{a.data.type==="progress"?t(s+a.data.percent*s/100):a.data.type==="compileDone"&&o(a.data.list)},r.postMessage({type:"compile",targetImages:e})})}}class mQ{constructor(t,e){this.width=t,this.height=e,this.texShape=[e,t];const s=document.createElement("canvas").getContext("2d");s.canvas.width=t,s.canvas.height=e,this.context=s,this.program=this.buildProgram(t,e);const o=zs();this.tempPixelHandle=o.makeTensorInfo(this.texShape,"float32"),o.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(t){return z(()=>{let e=ck(t);return e=e.mean(2),e})}loadInput(t){this.context.drawImage(t,0,0,this.width,this.height);const e=zs();return e.gpgpu.uploadPixelDataToTexture(e.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(t,e){const s=A().getNumber("WEBGL_VERSION")===2?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`
	void main() {
	  ivec2 coords = getOutputCoords();
	  int texR = coords[0];
	  int texC = coords[1];
	  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${e}.0);

	  vec4 values = ${s}(A, uv);
	  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);
	}
      `}}_compileAndRun(t,e){const s=zs().compileAndRun(t,e);return Vt().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}_runWebGLProgram(t,e,s){const o=zs().runWebGLProgram(t,e,s);return Vt().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}}const _C=(n,t)=>{const e=2*Math.PI*t*n;return e/(e+1)},AC=(n,t,e)=>n*t+(1-n)*e;class gQ{constructor({minCutOff:t,beta:e}){this.minCutOff=t,this.beta=e,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(t,e){if(!this.initialized)return this.initialized=!0,this.xPrev=e,this.dxPrev=e.map(()=>0),this.tPrev=t,e;const{xPrev:s,tPrev:o,dxPrev:i}=this,r=t-o,a=_C(r,this.dCutOff),l=[],c=[],u=[];for(let d=0;d<e.length;d++){l[d]=(e[d]-s[d])/r,c[d]=AC(a,l[d],i[d]);const h=this.minCutOff+this.beta*Math.abs(c[d]),p=_C(r,h);u[d]=AC(p,e[d],s[d])}return this.xPrev=u,this.dxPrev=c,this.tPrev=t,u}}const Qm={memory:vc,nextFrame:Wc},bQ=.001,xQ=1e3,yQ=5,wQ=5;class XC{constructor({inputWidth:t,inputHeight:e,onUpdate:s=null,debugMode:o=!1,maxTrack:i=1,warmupTolerance:r=null,missTolerance:a=null,filterMinCF:l=null,filterBeta:c=null}){this.inputWidth=t,this.inputHeight=e,this.maxTrack=i,this.filterMinCF=l===null?bQ:l,this.filterBeta=c===null?xQ:c,this.warmupTolerance=r===null?yQ:r,this.missTolerance=a===null?wQ:a,this.cropDetector=new bY(this.inputWidth,this.inputHeight,o),this.inputLoader=new mQ(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=s,this.debugMode=o,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const u=10,d=1e5,h=45*Math.PI/180,p=this.inputHeight/2/Math.tan(h/2);this.projectionTransform=[[p,0,this.inputWidth/2],[0,p,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:u,far:d}),this.worker=new E4,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=f=>{f.data.type==="matchDone"&&this.workerMatchDone!==null&&this.workerMatchDone(f.data),f.data.type==="trackUpdateDone"&&this.workerTrackDone!==null&&this.workerTrackDone(f.data)}}showTFStats(){console.log(Qm.memory().numTensors),console.table(Qm.memory())}addImageTargets(t){return new Promise(async(e,s)=>{try{let i=await(await fetch(t,{cache:"force-cache"})).arrayBuffer();if(t.endsWith(".gz")){const a=new Uint8Array(i);i=G4(a)}const r=this.addImageTargetsFromBuffer(i);e(r)}catch(o){s(o)}})}addImageTargetsFromBuffer(t){const s=new VC().importData(t),o=[],i=[],r=[];for(let a=0;a<s.length;a++)i.push(s[a].matchingData),o.push(s[a].trackingData),r.push([s[a].targetImage.width,s[a].targetImage.height]);return this.tracker=new X4(r,o,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:i}),this.markerDimensions=r,{dimensions:r,matchingDataList:i,trackingDataList:o}}dispose(){this.stopProcessVideo(),this.worker.postMessage({type:"dispose"})}dummyRun(t){const e=this.inputLoader.loadInput(t);this.cropDetector.detect(e),this.tracker.dummyRun(e),e.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(t,e){return this._glModelViewMatrix(t,e)}async _detectAndMatch(t,e){const{featurePoints:s}=this.cropDetector.detectMoving(t),{targetIndex:o,modelViewTransform:i}=await this._workerMatch(s,e);return{targetIndex:o,modelViewTransform:i}}async _trackAndUpdate(t,e,s){const{worldCoords:o,screenCoords:i}=this.tracker.track(t,e,s);return o.length<4?null:await this._workerTrackUpdate(e,{worldCoords:o,screenCoords:i})}processVideo(t){if(this.processingVideo)return;this.processingVideo=!0,this.trackingStates=[];for(let s=0;s<this.markerDimensions.length;s++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new gQ({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const s=this.inputLoader.loadInput(t);if(this.trackingStates.reduce((i,r)=>i+(r.isTracking?1:0),0)<this.maxTrack){const i=[];for(let l=0;l<this.trackingStates.length;l++)this.trackingStates[l].isTracking!==!0&&(this.interestedTargetIndex!==-1&&this.interestedTargetIndex!==l||i.push(l));const{targetIndex:r,modelViewTransform:a}=await this._detectAndMatch(s,i);r!==-1&&(this.trackingStates[r].isTracking=!0,this.trackingStates[r].currentModelViewTransform=a)}for(let i=0;i<this.trackingStates.length;i++){const r=this.trackingStates[i];if(r.isTracking){let a=await this._trackAndUpdate(s,r.currentModelViewTransform,i);a===null?r.isTracking=!1:r.currentModelViewTransform=a}if(r.showing||r.isTracking&&(r.trackMiss=0,r.trackCount+=1,r.trackCount>this.warmupTolerance&&(r.showing=!0,r.trackingMatrix=null,r.filter.reset())),r.showing&&(r.isTracking?r.trackMiss=0:(r.trackCount=0,r.trackMiss+=1,r.trackMiss>this.missTolerance&&(r.showing=!1,r.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:i,worldMatrix:null})))),r.showing){const a=this._glModelViewMatrix(r.currentModelViewTransform,i);r.trackingMatrix=r.filter.filter(Date.now(),a);const l=[];for(let c=0;c<r.trackingMatrix.length;c++)l[c]=r.trackingMatrix[c];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:i,worldMatrix:l})}}s.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await Qm.nextFrame()}})()}stopProcessVideo(){this.processingVideo=!1}async detect(t){const e=this.inputLoader.loadInput(t),{featurePoints:s,debugExtra:o}=await this.cropDetector.detect(e);return e.dispose(),{featurePoints:s,debugExtra:o}}async match(t,e){const{modelViewTransform:s,debugExtra:o}=await this._workerMatch(t,[e]);return{modelViewTransform:s,debugExtra:o}}async track(t,e,s){const o=this.inputLoader.loadInput(t),i=this.tracker.track(o,e,s);return o.dispose(),i}async trackUpdate(t,e){return e.worldCoords.length<4?null:await this._workerTrackUpdate(t,e)}_workerMatch(t,e){return new Promise(async(s,o)=>{this.workerMatchDone=i=>{s({targetIndex:i.targetIndex,modelViewTransform:i.modelViewTransform,debugExtra:i.debugExtra})},this.worker.postMessage({type:"match",featurePoints:t,targetIndexes:e})})}_workerTrackUpdate(t,e){return new Promise(async(s,o)=>{this.workerTrackDone=a=>{s(a.modelViewTransform)};const{worldCoords:i,screenCoords:r}=e;this.worker.postMessage({type:"trackUpdate",modelViewTransform:t,worldCoords:i,screenCoords:r})})}_glModelViewMatrix(t,e){const s=this.markerDimensions[e][1];return[t[0][0],-t[1][0],-t[2][0],0,-t[0][1],t[1][1],t[2][1],0,-t[0][2],t[1][2],t[2][2],0,t[0][1]*s+t[0][3],-(t[1][1]*s+t[1][3]),-(t[2][1]*s+t[2][3]),1]}_glProjectionMatrix({projectionTransform:t,width:e,height:s,near:o,far:i}){const r=[[2*t[0][0]/e,0,-(2*t[0][2]/e-1),0],[0,2*t[1][1]/s,-(2*t[1][2]/s-1),0],[0,0,-(i+o)/(i-o),-2*i*o/(i-o)],[0,0,-1,0]],a=[];for(let l=0;l<4;l++)for(let c=0;c<4;c++)a.push(r[c][l]);return a}}const IQ=`<div class="mindar-ui-overlay mindar-ui-loading">
  <div class="loader"/>
</div>
`,CQ=`<div class="mindar-ui-overlay mindar-ui-compatibility">
  <div class="content">
    <h1>Failed to launch :(</h1>
    <p>
      Looks like your device/browser is not compatible.
    </p>

    <br/>
    <br/>
    <p>
      Please try the following recommended browsers:
    </p>
    <p>
      For Android device - Chrome
    </p>
    <p>
      For iOS device - Safari
    </p>
  </div>
</div>
`,vQ=`<div class="mindar-ui-overlay mindar-ui-scanning">
  <div class="scanning">
    <div class="inner">
      <div class="scanline"/>
    </div>
  </div>
</div>
`,kQ=".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid white;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right,white 10px,transparent 10px) 0 0,linear-gradient(to right,white 10px,transparent 10px) 0 100%,linear-gradient(to left,white 10px,transparent 10px) 100% 0,linear-gradient(to left,white 10px,transparent 10px) 100% 100%,linear-gradient(to bottom,white 10px,transparent 10px) 0 0,linear-gradient(to bottom,white 10px,transparent 10px) 100% 0,linear-gradient(to top,white 10px,transparent 10px) 0 100%,linear-gradient(to top,white 10px,transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:white;animation:move 2s linear infinite}@keyframes move{0%,to{top:0%}50%{top:calc(100% - 10px)}}";class OC{constructor({uiLoading:t,uiScanning:e,uiError:s}){const o=document.createElement("style");o.innerText=kQ,document.head.appendChild(o),t==="yes"?this.loadingModal=this._loadHTML(IQ):t!=="no"&&(this.loadingModal=document.querySelector(t)),s==="yes"?this.compatibilityModal=this._loadHTML(CQ):s!=="no"&&(this.compatibilityModal=document.querySelector(s)),e==="yes"?this.scanningMask=this._loadHTML(vQ):e!=="no"&&(this.scanningMask=document.querySelector(e)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(t){const e=document.createElement("template");e.innerHTML=t.trim();const s=e.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(s),s}}window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE={Controller:XC,Compiler:VC,UI:OC},AFRAME.registerSystem("mindar-image-system",{container:null,video:null,processingImage:!1,init:function(){this.anchorEntities=[]},tick:function(){},setup:function({imageTargetSrc:n,maxTrack:t,showStats:e,uiLoading:s,uiScanning:o,uiError:i,missTolerance:r,warmupTolerance:a,filterMinCF:l,filterBeta:c}){this.imageTargetSrc=n,this.maxTrack=t,this.filterMinCF=l,this.filterBeta=c,this.missTolerance=r,this.warmupTolerance=a,this.showStats=e,this.ui=new OC({uiLoading:s,uiScanning:o,uiError:i})},registerAnchor:function(n,t){this.anchorEntities.push({el:n,targetIndex:t})},start:function(){this.container=this.el.sceneEl.parentNode,this.showStats&&(this.mainStats=new Stats,this.mainStats.showPanel(0),this.mainStats.domElement.style.cssText="position:absolute;top:0px;left:0px;z-index:999",this.container.appendChild(this.mainStats.domElement)),this.ui.showLoading(),this._startVideo()},switchTarget:function(n){this.controller.interestedTargetIndex=n},stop:function(){this.pause(),this.video.srcObject.getTracks().forEach(function(t){t.stop()}),this.video.remove(),this.controller.dispose()},pause:function(n=!1){n||this.video.pause(),this.controller.stopProcessVideo()},unpause:function(){this.video.play(),this.controller.processVideo(this.video)},_startVideo:function(){if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){this.el.emit("arError",{error:"VIDEO_FAIL"}),this.ui.showCompatibility();return}navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then(n=>{this.video.addEventListener("loadedmetadata",()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),this._startAR()}),this.video.srcObject=n}).catch(n=>{console.log("getUserMedia error",n),this.el.emit("arError",{error:"VIDEO_FAIL"})})},_startAR:async function(){const n=this.video;this.container,this.controller=new XC({inputWidth:n.videoWidth,inputHeight:n.videoHeight,maxTrack:this.maxTrack,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,missTolerance:this.missTolerance,warmupTolerance:this.warmupTolerance,onUpdate:e=>{if(e.type==="processDone")this.mainStats&&this.mainStats.update();else if(e.type==="updateMatrix"){const{targetIndex:s,worldMatrix:o}=e;for(let r=0;r<this.anchorEntities.length;r++)this.anchorEntities[r].targetIndex===s&&this.anchorEntities[r].el.updateWorldMatrix(o);this.anchorEntities.reduce((r,a)=>r||a.el.el.object3D.visible,!1)?this.ui.hideScanning():this.ui.showScanning()}}}),this._resize(),window.addEventListener("resize",this._resize.bind(this));const{dimensions:t}=await this.controller.addImageTargets(this.imageTargetSrc);for(let e=0;e<this.anchorEntities.length;e++){const{el:s,targetIndex:o}=this.anchorEntities[e];o<t.length&&s.setupMarker(t[o])}await this.controller.dummyRun(this.video),this.el.emit("arReady"),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video)},_resize:function(){const n=this.video,t=this.container;let e,s;const o=n.videoWidth/n.videoHeight,i=t.clientWidth/t.clientHeight;o>i?(s=t.clientHeight,e=s*o):(e=t.clientWidth,s=e/o);const r=this.controller.getProjectionMatrix(),a=2*Math.atan(1/r[5]/s*t.clientHeight)*180/Math.PI,l=r[14]/(r[10]-1),c=r[14]/(r[10]+1);r[5]/r[0];const u=t.clientWidth/t.clientHeight,h=t.getElementsByTagName("a-camera")[0].getObject3D("camera");h.fov=a,h.aspect=u,h.near=l,h.far=c,h.updateProjectionMatrix(),this.video.style.top=-(s-t.clientHeight)/2+"px",this.video.style.left=-(e-t.clientWidth)/2+"px",this.video.style.width=e+"px",this.video.style.height=s+"px"}}),AFRAME.registerComponent("mindar-image",{dependencies:["mindar-image-system"],schema:{imageTargetSrc:{type:"string"},maxTrack:{type:"int",default:1},filterMinCF:{type:"number",default:-1},filterBeta:{type:"number",default:-1},missTolerance:{type:"int",default:-1},warmupTolerance:{type:"int",default:-1},showStats:{type:"boolean",default:!1},autoStart:{type:"boolean",default:!0},uiLoading:{type:"string",default:"yes"},uiScanning:{type:"string",default:"yes"},uiError:{type:"string",default:"yes"}},init:function(){const n=this.el.sceneEl.systems["mindar-image-system"];n.setup({imageTargetSrc:this.data.imageTargetSrc,maxTrack:this.data.maxTrack,filterMinCF:this.data.filterMinCF===-1?null:this.data.filterMinCF,filterBeta:this.data.filterBeta===-1?null:this.data.filterBeta,missTolerance:this.data.missTolerance===-1?null:this.data.missTolerance,warmupTolerance:this.data.warmupTolerance===-1?null:this.data.warmupTolerance,showStats:this.data.showStats,uiLoading:this.data.uiLoading,uiScanning:this.data.uiScanning,uiError:this.data.uiError}),this.data.autoStart&&this.el.sceneEl.addEventListener("renderstart",()=>{n.start()})},remove:function(){this.el.sceneEl.systems["mindar-image-system"].stop()}}),AFRAME.registerComponent("mindar-image-target",{dependencies:["mindar-image-system"],schema:{targetIndex:{type:"number"}},postMatrix:null,init:function(){this.el.sceneEl.systems["mindar-image-system"].registerAnchor(this,this.data.targetIndex),this.invisibleMatrix=new AFRAME.THREE.Matrix4,this.invisibleMatrix.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1);const t=this.el.object3D;t.visible=!1,t.matrixAutoUpdate=!1},setupMarker([n,t]){const e=new AFRAME.THREE.Vector3,s=new AFRAME.THREE.Quaternion,o=new AFRAME.THREE.Vector3;e.x=n/2,e.y=n/2+(t-n)/2,o.x=n,o.y=n,o.z=n,this.postMatrix=new AFRAME.THREE.Matrix4,this.postMatrix.compose(e,s,o)},updateWorldMatrix(n){if(this.el.emit("targetUpdate"),!this.el.object3D.visible&&n!==null?this.el.emit("targetFound"):this.el.object3D.visible&&n===null&&this.el.emit("targetLost"),this.el.object3D.visible=n!==null,n===null){this.el.object3D.matrix=this.invisibleMatrix;return}var t=new AFRAME.THREE.Matrix4;t.elements=n,t.multiply(this.postMatrix),this.el.object3D.matrix=t}})})();
